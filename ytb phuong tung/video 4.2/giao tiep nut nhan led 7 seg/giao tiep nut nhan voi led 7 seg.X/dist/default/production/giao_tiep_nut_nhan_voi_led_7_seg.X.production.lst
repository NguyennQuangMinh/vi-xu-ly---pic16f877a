

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Apr 07 22:04:17 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     008F                     	;# 
    96     0090                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0093                     	;# 
   100     0093                     	;# 
   101     0093                     	;# 
   102     0094                     	;# 
   103     0095                     	;# 
   104     0096                     	;# 
   105     0097                     	;# 
   106     0098                     	;# 
   107     0099                     	;# 
   108     009A                     	;# 
   109     009B                     	;# 
   110     009C                     	;# 
   111     009D                     	;# 
   112     009E                     	;# 
   113     009F                     	;# 
   114     0105                     	;# 
   115     0107                     	;# 
   116     0108                     	;# 
   117     0109                     	;# 
   118     010C                     	;# 
   119     010C                     	;# 
   120     010D                     	;# 
   121     010E                     	;# 
   122     010F                     	;# 
   123     0185                     	;# 
   124     0187                     	;# 
   125     0188                     	;# 
   126     0189                     	;# 
   127     018C                     	;# 
   128     018D                     	;# 
   129     0000                     	;# 
   130     0001                     	;# 
   131     0002                     	;# 
   132     0003                     	;# 
   133     0004                     	;# 
   134     0005                     	;# 
   135     0006                     	;# 
   136     0007                     	;# 
   137     0008                     	;# 
   138     0009                     	;# 
   139     000A                     	;# 
   140     000B                     	;# 
   141     000C                     	;# 
   142     000D                     	;# 
   143     000E                     	;# 
   144     000E                     	;# 
   145     000F                     	;# 
   146     0010                     	;# 
   147     0011                     	;# 
   148     0012                     	;# 
   149     0013                     	;# 
   150     0014                     	;# 
   151     0015                     	;# 
   152     0015                     	;# 
   153     0016                     	;# 
   154     0017                     	;# 
   155     0018                     	;# 
   156     0019                     	;# 
   157     001A                     	;# 
   158     001B                     	;# 
   159     001B                     	;# 
   160     001C                     	;# 
   161     001D                     	;# 
   162     001E                     	;# 
   163     001F                     	;# 
   164     0081                     	;# 
   165     0085                     	;# 
   166     0086                     	;# 
   167     0087                     	;# 
   168     0088                     	;# 
   169     0089                     	;# 
   170     008C                     	;# 
   171     008D                     	;# 
   172     008E                     	;# 
   173     008F                     	;# 
   174     0090                     	;# 
   175     0091                     	;# 
   176     0092                     	;# 
   177     0093                     	;# 
   178     0093                     	;# 
   179     0093                     	;# 
   180     0094                     	;# 
   181     0095                     	;# 
   182     0096                     	;# 
   183     0097                     	;# 
   184     0098                     	;# 
   185     0099                     	;# 
   186     009A                     	;# 
   187     009B                     	;# 
   188     009C                     	;# 
   189     009D                     	;# 
   190     009E                     	;# 
   191     009F                     	;# 
   192     0105                     	;# 
   193     0107                     	;# 
   194     0108                     	;# 
   195     0109                     	;# 
   196     010C                     	;# 
   197     010C                     	;# 
   198     010D                     	;# 
   199     010E                     	;# 
   200     010F                     	;# 
   201     0185                     	;# 
   202     0187                     	;# 
   203     0188                     	;# 
   204     0189                     	;# 
   205     018C                     	;# 
   206     018D                     	;# 
   207                           
   208                           	psect	idataBANK0
   209     0715                     __pidataBANK0:
   210                           
   211                           ;initializer for _led7seg
   212     0715  34C0               	retlw	192
   213     0716  34F9               	retlw	249
   214     0717  34A4               	retlw	164
   215     0718  34B0               	retlw	176
   216     0719  3499               	retlw	153
   217     071A  3492               	retlw	146
   218     071B  3482               	retlw	130
   219     071C  34F8               	retlw	248
   220     071D  3480               	retlw	128
   221     071E  3490               	retlw	144
   222     0007                     _PORTC	set	7
   223     0031                     _RB1	set	49
   224     0030                     _RB0	set	48
   225     0088                     _TRISD	set	136
   226     0087                     _TRISC	set	135
   227     04A9                     _WPUB1	set	1193
   228     04A8                     _WPUB0	set	1192
   229     040F                     _nRBPU	set	1039
   230     0431                     _TRISB1	set	1073
   231     0430                     _TRISB0	set	1072
   232     0189                     _ANSELH	set	393
   233     0188                     _ANSEL	set	392
   234                           
   235                           	psect	cinit
   236     07ED                     start_initialization:	
   237                           ; #config settings
   238                           
   239     07ED                     __initialization:
   240                           
   241                           ; Initialize objects allocated to BANK0
   242     07ED  1383               	bcf	3,7	;select IRP bank0
   243     07EE  302A               	movlw	low (__pdataBANK0+10)
   244     07EF  00FD               	movwf	btemp+-1
   245     07F0  3007               	movlw	high __pidataBANK0
   246     07F1  00FE               	movwf	btemp
   247     07F2  3015               	movlw	low __pidataBANK0
   248     07F3  00FF               	movwf	btemp+1
   249     07F4  3020               	movlw	low __pdataBANK0
   250     07F5  0084               	movwf	4
   251     07F6  120A  118A  2723  120A  118A  	fcall	init_ram0
   252                           
   253                           ; Clear objects allocated to COMMON
   254     07FB  01FA               	clrf	__pbssCOMMON& (0+127)
   255     07FC                     end_of_initialization:	
   256                           ;End of C runtime variable initialization code
   257                           
   258     07FC                     __end_of__initialization:
   259     07FC  0183               	clrf	3
   260     07FD  120A  118A  2F8B   	ljmp	_main	;jump to C main() function
   261                           
   262                           	psect	bssCOMMON
   263     007A                     __pbssCOMMON:
   264     007A                     _num_disp:
   265     007A                     	ds	1
   266                           
   267                           	psect	dataBANK0
   268     0020                     __pdataBANK0:
   269     0020                     _led7seg:
   270     0020                     	ds	10
   271                           
   272                           	psect	inittext
   273     071F                     init_fetch0:	
   274                           ;	Called with low address in FSR and high address in W
   275                           
   276     071F  087E               	movf	btemp,w
   277     0720  008A               	movwf	10
   278     0721  087F               	movf	btemp+1,w
   279     0722  0082               	movwf	2
   280     0723                     init_ram0:	
   281                           ;Called with:
   282                           ;	high address of idata address in btemp 
   283                           ;	low address of idata address in btemp+1 
   284                           ;	low address of data in FSR
   285                           ;	high address + 1 of data in btemp-1
   286                           
   287     0723  120A  118A  271F  120A  118A  	fcall	init_fetch0
   288     0728  0080               	movwf	0
   289     0729  0A84               	incf	4,f
   290     072A  0804               	movf	4,w
   291     072B  067D               	xorwf	btemp+-1,w
   292     072C  1903               	btfsc	3,2
   293     072D  3400               	retlw	0
   294     072E  0AFF               	incf	btemp+1,f
   295     072F  1903               	btfsc	3,2
   296     0730  0AFE               	incf	btemp,f
   297     0731  2F23               	goto	init_ram0
   298                           
   299                           	psect	cstackCOMMON
   300     0070                     __pcstackCOMMON:
   301     0070                     ?_main:
   302     0070                     ?___awmod:	
   303                           ; 1 bytes @ 0x0
   304                           
   305     0070                     ___awmod@divisor:	
   306                           ; 2 bytes @ 0x0
   307                           
   308                           
   309                           ; 2 bytes @ 0x0
   310     0070                     	ds	2
   311     0072                     ___awmod@dividend:
   312                           
   313                           ; 2 bytes @ 0x2
   314     0072                     	ds	2
   315     0074                     ??___awmod:
   316                           
   317                           ; 1 bytes @ 0x4
   318     0074                     	ds	1
   319     0075                     ___awmod@counter:
   320                           
   321                           ; 1 bytes @ 0x5
   322     0075                     	ds	1
   323     0076                     ___awmod@sign:
   324                           
   325                           ; 1 bytes @ 0x6
   326     0076                     	ds	1
   327     0077                     ??_main:
   328                           
   329                           ; 1 bytes @ 0x7
   330     0077                     	ds	3
   331                           
   332                           	psect	maintext
   333     078B                     __pmaintext:	
   334 ;;
   335 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   336 ;;
   337 ;; *************** function _main *****************
   338 ;; Defined at:
   339 ;;		line 80 in file "giao tiep nut nhan led 7 seg.c"
   340 ;; Parameters:    Size  Location     Type
   341 ;;		None
   342 ;; Auto vars:     Size  Location     Type
   343 ;;		None
   344 ;; Return value:  Size  Location     Type
   345 ;;                  1    wreg      void 
   346 ;; Registers used:
   347 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   348 ;; Tracked objects:
   349 ;;		On entry : B00/0
   350 ;;		On exit  : 0/0
   351 ;;		Unchanged: 0/0
   352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   353 ;;      Params:         0       0       0       0       0
   354 ;;      Locals:         0       0       0       0       0
   355 ;;      Temps:          3       0       0       0       0
   356 ;;      Totals:         3       0       0       0       0
   357 ;;Total ram usage:        3 bytes
   358 ;; Hardware stack levels required when called: 1
   359 ;; This function calls:
   360 ;;		___awmod
   361 ;; This function is called by:
   362 ;;		Startup code after reset
   363 ;; This function uses a non-reentrant model
   364 ;;
   365                           
   366     078B                     _main:	
   367                           ;psect for function _main
   368                           
   369     078B                     l749:	
   370                           ;incstack = 0
   371                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   372                           
   373                           
   374                           ;giao tiep nut nhan led 7 seg.c: 81:     ANSEL = ANSELH = 0x00;
   375     078B  1683               	bsf	3,5	;RP0=1, select bank3
   376     078C  1703               	bsf	3,6	;RP1=1, select bank3
   377     078D  0189               	clrf	9	;volatile
   378     078E  0188               	clrf	8	;volatile
   379                           
   380                           ;giao tiep nut nhan led 7 seg.c: 82:     TRISC = 0x00;
   381     078F  1683               	bsf	3,5	;RP0=1, select bank1
   382     0790  1303               	bcf	3,6	;RP1=0, select bank1
   383     0791  0187               	clrf	7	;volatile
   384                           
   385                           ;giao tiep nut nhan led 7 seg.c: 83:     TRISD= 0x00;
   386     0792  0188               	clrf	8	;volatile
   387     0793                     l751:
   388                           
   389                           ;giao tiep nut nhan led 7 seg.c: 84:     TRISB0 = 1;
   390     0793  1406               	bsf	6,0	;volatile
   391     0794                     l753:
   392                           
   393                           ;giao tiep nut nhan led 7 seg.c: 85:     TRISB1 = 1;
   394     0794  1486               	bsf	6,1	;volatile
   395     0795                     l755:
   396                           
   397                           ;giao tiep nut nhan led 7 seg.c: 86:     nRBPU = 0;
   398     0795  1381               	bcf	1,7	;volatile
   399     0796                     l757:
   400                           
   401                           ;giao tiep nut nhan led 7 seg.c: 87:     WPUB0 = 1;
   402     0796  1415               	bsf	21,0	;volatile
   403     0797                     l759:
   404                           
   405                           ;giao tiep nut nhan led 7 seg.c: 88:     WPUB1 =1;
   406     0797  1495               	bsf	21,1	;volatile
   407                           
   408                           ;giao tiep nut nhan led 7 seg.c: 89:     num_disp = 0;
   409     0798  01FA               	clrf	_num_disp
   410     0799                     l761:
   411                           
   412                           ;giao tiep nut nhan led 7 seg.c: 91:     {;giao tiep nut nhan led 7 seg.c: 94:     PORTC
      +                           = led7seg[num_disp];
   413     0799  087A               	movf	_num_disp,w
   414     079A  3E20               	addlw	(low (_led7seg| 0))& (0+255)
   415     079B  0084               	movwf	4
   416     079C  1383               	bcf	3,7	;select IRP bank0
   417     079D  0800               	movf	0,w
   418     079E  1283               	bcf	3,5	;RP0=0, select bank0
   419     079F  0087               	movwf	7	;volatile
   420     07A0                     l763:
   421                           
   422                           ;giao tiep nut nhan led 7 seg.c: 95:     if(RB0 == 0)
   423     07A0  1806               	btfsc	6,0	;volatile
   424     07A1  2FA3               	goto	u231
   425     07A2  2FA4               	goto	u230
   426     07A3                     u231:
   427     07A3  2F99               	goto	l761
   428     07A4                     u230:
   429     07A4                     l765:
   430                           
   431                           ;giao tiep nut nhan led 7 seg.c: 96:     {;giao tiep nut nhan led 7 seg.c: 97:         _
      +                          delay((unsigned long)((10)*(4000000/4000.0)));
   432     07A4  300D               	movlw	13
   433     07A5  00F8               	movwf	??_main+1
   434     07A6  30FB               	movlw	251
   435     07A7  00F7               	movwf	??_main
   436     07A8                     u277:
   437     07A8  0BF7               	decfsz	??_main,f
   438     07A9  2FA8               	goto	u277
   439     07AA  0BF8               	decfsz	??_main+1,f
   440     07AB  2FA8               	goto	u277
   441     07AC  2FAD               	nop2
   442                           
   443                           ;giao tiep nut nhan led 7 seg.c: 98:         while(RB0==0)
   444     07AD  2FE3               	goto	l783
   445     07AE                     l767:
   446                           
   447                           ;giao tiep nut nhan led 7 seg.c: 99:         {;giao tiep nut nhan led 7 seg.c: 100:     
      +                                  for(num_disp=0;num_disp <9;num_disp++)
   448     07AE  01FA               	clrf	_num_disp
   449     07AF                     l39:
   450                           
   451                           ;giao tiep nut nhan led 7 seg.c: 101:             {;giao tiep nut nhan led 7 seg.c: 102:
      +                                           if(RB1==0)
   452     07AF  1886               	btfsc	6,1	;volatile
   453     07B0  2FB2               	goto	u241
   454     07B1  2FB3               	goto	u240
   455     07B2                     u241:
   456     07B2  2FB4               	goto	l775
   457     07B3                     u240:
   458     07B3  2FBE               	goto	l779
   459     07B4                     l775:
   460                           
   461                           ;giao tiep nut nhan led 7 seg.c: 106:             }
   462     07B4  3001               	movlw	1
   463     07B5  00F7               	movwf	??_main
   464     07B6  0877               	movf	??_main,w
   465     07B7  07FA               	addwf	_num_disp,f
   466     07B8                     l777:
   467     07B8  3009               	movlw	9
   468     07B9  027A               	subwf	_num_disp,w
   469     07BA  1C03               	skipc
   470     07BB  2FBD               	goto	u251
   471     07BC  2FBE               	goto	u250
   472     07BD                     u251:
   473     07BD  2FAF               	goto	l39
   474     07BE                     u250:
   475     07BE                     l779:
   476                           
   477                           ;giao tiep nut nhan led 7 seg.c: 107:             PORTC = led7seg[num_disp%10];
   478     07BE  300A               	movlw	10
   479     07BF  00F0               	movwf	___awmod@divisor
   480     07C0  3000               	movlw	0
   481     07C1  00F1               	movwf	___awmod@divisor+1
   482     07C2  087A               	movf	_num_disp,w
   483     07C3  00F7               	movwf	??_main
   484     07C4  01F8               	clrf	??_main+1
   485     07C5  0877               	movf	??_main,w
   486     07C6  00F2               	movwf	___awmod@dividend
   487     07C7  0878               	movf	??_main+1,w
   488     07C8  00F3               	movwf	___awmod@dividend+1
   489     07C9  120A  118A  2732  120A  118A  	fcall	___awmod
   490     07CE  0870               	movf	?___awmod,w
   491     07CF  3E20               	addlw	(low (_led7seg| 0))& (0+255)
   492     07D0  0084               	movwf	4
   493     07D1  1383               	bcf	3,7	;select IRP bank0
   494     07D2  0800               	movf	0,w
   495     07D3  1283               	bcf	3,5	;RP0=0, select bank0
   496     07D4  1303               	bcf	3,6	;RP1=0, select bank0
   497     07D5  0087               	movwf	7	;volatile
   498     07D6                     l781:
   499                           
   500                           ;giao tiep nut nhan led 7 seg.c: 108:             _delay((unsigned long)((500)*(4000000/
      +                          4000.0)));
   501     07D6  3003               	movlw	3
   502     07D7  00F9               	movwf	??_main+2
   503     07D8  308A               	movlw	138
   504     07D9  00F8               	movwf	??_main+1
   505     07DA  3055               	movlw	85
   506     07DB  00F7               	movwf	??_main
   507     07DC                     u287:
   508     07DC  0BF7               	decfsz	??_main,f
   509     07DD  2FDC               	goto	u287
   510     07DE  0BF8               	decfsz	??_main+1,f
   511     07DF  2FDC               	goto	u287
   512     07E0  0BF9               	decfsz	??_main+2,f
   513     07E1  2FDC               	goto	u287
   514     07E2  2FE3               	nop2
   515     07E3                     l783:
   516                           
   517                           ;giao tiep nut nhan led 7 seg.c: 98:         while(RB0==0)
   518     07E3  1283               	bcf	3,5	;RP0=0, select bank0
   519     07E4  1303               	bcf	3,6	;RP1=0, select bank0
   520     07E5  1C06               	btfss	6,0	;volatile
   521     07E6  2FE8               	goto	u261
   522     07E7  2FE9               	goto	u260
   523     07E8                     u261:
   524     07E8  2FAE               	goto	l767
   525     07E9                     u260:
   526     07E9  2F99               	goto	l761
   527     07EA  120A  118A  2800   	ljmp	start
   528     07ED                     __end_of_main:
   529                           
   530                           	psect	text1
   531     0732                     __ptext1:	
   532 ;; *************** function ___awmod *****************
   533 ;; Defined at:
   534 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;  divisor         2    0[COMMON] int 
   537 ;;  dividend        2    2[COMMON] int 
   538 ;; Auto vars:     Size  Location     Type
   539 ;;  sign            1    6[COMMON] unsigned char 
   540 ;;  counter         1    5[COMMON] unsigned char 
   541 ;; Return value:  Size  Location     Type
   542 ;;                  2    0[COMMON] int 
   543 ;; Registers used:
   544 ;;		wreg, status,2, status,0
   545 ;; Tracked objects:
   546 ;;		On entry : 0/0
   547 ;;		On exit  : 0/0
   548 ;;		Unchanged: 0/0
   549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   550 ;;      Params:         4       0       0       0       0
   551 ;;      Locals:         2       0       0       0       0
   552 ;;      Temps:          1       0       0       0       0
   553 ;;      Totals:         7       0       0       0       0
   554 ;;Total ram usage:        7 bytes
   555 ;; Hardware stack levels used: 1
   556 ;; This function calls:
   557 ;;		Nothing
   558 ;; This function is called by:
   559 ;;		_main
   560 ;; This function uses a non-reentrant model
   561 ;;
   562                           
   563     0732                     ___awmod:	
   564                           ;psect for function ___awmod
   565                           
   566     0732                     l711:	
   567                           ;incstack = 0
   568                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   569                           
   570     0732  01F6               	clrf	___awmod@sign
   571     0733                     l713:
   572     0733  1FF3               	btfss	___awmod@dividend+1,7
   573     0734  2F36               	goto	u141
   574     0735  2F37               	goto	u140
   575     0736                     u141:
   576     0736  2F3E               	goto	l719
   577     0737                     u140:
   578     0737                     l715:
   579     0737  09F2               	comf	___awmod@dividend,f
   580     0738  09F3               	comf	___awmod@dividend+1,f
   581     0739  0AF2               	incf	___awmod@dividend,f
   582     073A  1903               	skipnz
   583     073B  0AF3               	incf	___awmod@dividend+1,f
   584     073C                     l717:
   585     073C  01F6               	clrf	___awmod@sign
   586     073D  0AF6               	incf	___awmod@sign,f
   587     073E                     l719:
   588     073E  1FF1               	btfss	___awmod@divisor+1,7
   589     073F  2F41               	goto	u151
   590     0740  2F42               	goto	u150
   591     0741                     u151:
   592     0741  2F47               	goto	l723
   593     0742                     u150:
   594     0742                     l721:
   595     0742  09F0               	comf	___awmod@divisor,f
   596     0743  09F1               	comf	___awmod@divisor+1,f
   597     0744  0AF0               	incf	___awmod@divisor,f
   598     0745  1903               	skipnz
   599     0746  0AF1               	incf	___awmod@divisor+1,f
   600     0747                     l723:
   601     0747  0870               	movf	___awmod@divisor,w
   602     0748  0471               	iorwf	___awmod@divisor+1,w
   603     0749  1903               	btfsc	3,2
   604     074A  2F4C               	goto	u161
   605     074B  2F4D               	goto	u160
   606     074C                     u161:
   607     074C  2F7C               	goto	l741
   608     074D                     u160:
   609     074D                     l725:
   610     074D  01F5               	clrf	___awmod@counter
   611     074E  0AF5               	incf	___awmod@counter,f
   612     074F  2F5B               	goto	l731
   613     0750                     l727:
   614     0750  3001               	movlw	1
   615     0751                     u175:
   616     0751  1003               	clrc
   617     0752  0DF0               	rlf	___awmod@divisor,f
   618     0753  0DF1               	rlf	___awmod@divisor+1,f
   619     0754  3EFF               	addlw	-1
   620     0755  1D03               	skipz
   621     0756  2F51               	goto	u175
   622     0757                     l729:
   623     0757  3001               	movlw	1
   624     0758  00F4               	movwf	??___awmod
   625     0759  0874               	movf	??___awmod,w
   626     075A  07F5               	addwf	___awmod@counter,f
   627     075B                     l731:
   628     075B  1FF1               	btfss	___awmod@divisor+1,7
   629     075C  2F5E               	goto	u181
   630     075D  2F5F               	goto	u180
   631     075E                     u181:
   632     075E  2F50               	goto	l727
   633     075F                     u180:
   634     075F                     l733:
   635     075F  0871               	movf	___awmod@divisor+1,w
   636     0760  0273               	subwf	___awmod@dividend+1,w
   637     0761  1D03               	skipz
   638     0762  2F65               	goto	u195
   639     0763  0870               	movf	___awmod@divisor,w
   640     0764  0272               	subwf	___awmod@dividend,w
   641     0765                     u195:
   642     0765  1C03               	skipc
   643     0766  2F68               	goto	u191
   644     0767  2F69               	goto	u190
   645     0768                     u191:
   646     0768  2F6F               	goto	l737
   647     0769                     u190:
   648     0769                     l735:
   649     0769  0870               	movf	___awmod@divisor,w
   650     076A  02F2               	subwf	___awmod@dividend,f
   651     076B  0871               	movf	___awmod@divisor+1,w
   652     076C  1C03               	skipc
   653     076D  03F3               	decf	___awmod@dividend+1,f
   654     076E  02F3               	subwf	___awmod@dividend+1,f
   655     076F                     l737:
   656     076F  3001               	movlw	1
   657     0770                     u205:
   658     0770  1003               	clrc
   659     0771  0CF1               	rrf	___awmod@divisor+1,f
   660     0772  0CF0               	rrf	___awmod@divisor,f
   661     0773  3EFF               	addlw	-1
   662     0774  1D03               	skipz
   663     0775  2F70               	goto	u205
   664     0776                     l739:
   665     0776  3001               	movlw	1
   666     0777  02F5               	subwf	___awmod@counter,f
   667     0778  1D03               	btfss	3,2
   668     0779  2F7B               	goto	u211
   669     077A  2F7C               	goto	u210
   670     077B                     u211:
   671     077B  2F5F               	goto	l733
   672     077C                     u210:
   673     077C                     l741:
   674     077C  0876               	movf	___awmod@sign,w
   675     077D  1903               	btfsc	3,2
   676     077E  2F80               	goto	u221
   677     077F  2F81               	goto	u220
   678     0780                     u221:
   679     0780  2F86               	goto	l745
   680     0781                     u220:
   681     0781                     l743:
   682     0781  09F2               	comf	___awmod@dividend,f
   683     0782  09F3               	comf	___awmod@dividend+1,f
   684     0783  0AF2               	incf	___awmod@dividend,f
   685     0784  1903               	skipnz
   686     0785  0AF3               	incf	___awmod@dividend+1,f
   687     0786                     l745:
   688     0786  0873               	movf	___awmod@dividend+1,w
   689     0787  00F1               	movwf	?___awmod+1
   690     0788  0872               	movf	___awmod@dividend,w
   691     0789  00F0               	movwf	?___awmod
   692     078A                     l297:
   693     078A  0008               	return
   694     078B                     __end_of___awmod:
   695     007E                     btemp	set	126	;btemp
   696     007E                     wtemp0	set	126
   697                           
   698                           	psect	idloc
   699                           
   700                           ;Config register IDLOC0 @ 0x2000
   701                           ;	unspecified, using default values
   702     2000                     	org	8192
   703     2000  3FFF               	dw	16383
   704                           
   705                           ;Config register IDLOC1 @ 0x2001
   706                           ;	unspecified, using default values
   707     2001                     	org	8193
   708     2001  3FFF               	dw	16383
   709                           
   710                           ;Config register IDLOC2 @ 0x2002
   711                           ;	unspecified, using default values
   712     2002                     	org	8194
   713     2002  3FFF               	dw	16383
   714                           
   715                           ;Config register IDLOC3 @ 0x2003
   716                           ;	unspecified, using default values
   717     2003                     	org	8195
   718     2003  3FFF               	dw	16383
   719                           
   720                           	psect	config
   721                           
   722                           ;Config register CONFIG1 @ 0x2007
   723                           ;	Oscillator Selection bits
   724                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   725                           ;	Watchdog Timer Enable bit
   726                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   727                           ;	Power-up Timer Enable bit
   728                           ;	PWRTE = OFF, PWRT disabled
   729                           ;	RE3/MCLR pin function select bit
   730                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   731                           ;	Code Protection bit
   732                           ;	CP = OFF, Program memory code protection is disabled
   733                           ;	Data Code Protection bit
   734                           ;	CPD = OFF, Data memory code protection is disabled
   735                           ;	Brown Out Reset Selection bits
   736                           ;	BOREN = ON, BOR enabled
   737                           ;	Internal External Switchover bit
   738                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   739                           ;	Fail-Safe Clock Monitor Enabled bit
   740                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   741                           ;	Low Voltage Programming Enable bit
   742                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   743                           ;	In-Circuit Debugger Mode bit
   744                           ;	DEBUG = 0x1, unprogrammed default
   745     2007                     	org	8199
   746     2007  23D2               	dw	9170
   747                           
   748                           ;Config register CONFIG2 @ 0x2008
   749                           ;	Brown-out Reset Selection bit
   750                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   751                           ;	Flash Program Memory Self Write Enable bits
   752                           ;	WRT = OFF, Write protection off
   753     2008                     	org	8200
   754     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80      0      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     448
                                              7 COMMON     3     3      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       A       5       12.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      15      12        0.0%
ABS                  0      0      15       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Apr 07 22:04:17 2023

                      pc 0002                       l39 07AF                       fsr 0004  
                    l711 0732                      l297 078A                      l721 0742  
                    l713 0733                      l731 075B                      l723 0747  
                    l715 0737                      l733 075F                      l725 074D  
                    l741 077C                      l717 073C                      l743 0781  
                    l735 0769                      l727 0750                      l719 073E  
                    l751 0793                      l745 0786                      l737 076F  
                    l729 0757                      l761 0799                      l753 0794  
                    l739 0776                      l763 07A0                      l755 0795  
                    l781 07D6                      l765 07A4                      l757 0796  
                    l749 078B                      l775 07B4                      l767 07AE  
                    l783 07E3                      l759 0797                      l777 07B8  
                    l779 07BE                      _RB0 0030                      _RB1 0031  
                    u210 077C                      u211 077B                      u220 0781  
                    u140 0737                      u221 0780                      u205 0770  
                    u141 0736                      u150 0742                      u230 07A4  
                    u151 0741                      u231 07A3                      u160 074D  
                    u240 07B3                      u161 074C                      u241 07B2  
                    u250 07BE                      u251 07BD                      u180 075F  
                    u260 07E9                      u181 075E                      u261 07E8  
                    u190 0769                      u191 0768                      u175 0751  
                    u195 0765                      u277 07A8                      u287 07DC  
                    fsr0 0004                      indf 0000             ___awmod@sign 0076  
                   _main 078B                     btemp 007E                     start 0000  
                  ?_main 0070          __end_of___awmod 078B                    _ANSEL 0188  
                  _PORTC 0007                    _TRISC 0087                    _TRISD 0088  
                  _WPUB0 04A8                    _WPUB1 04A9                    _nRBPU 040F  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07ED             __end_of_main 07ED                   ??_main 0077  
                 _ANSELH 0189                   _TRISB0 0430                   _TRISB1 0431  
              ??___awmod 0074          ___awmod@divisor 0070          ___awmod@counter 0075  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 0715  
             __pmaintext 078B                  ___awmod 0732                  _led7seg 0020  
                __ptext1 0732         ___awmod@dividend 0072     end_of_initialization 07FC  
    start_initialization 07ED               init_fetch0 071F              __pdataBANK0 0020  
            __pbssCOMMON 007A                ___latbits 0002                 ?___awmod 0070  
               _num_disp 007A                 init_ram0 0723  
