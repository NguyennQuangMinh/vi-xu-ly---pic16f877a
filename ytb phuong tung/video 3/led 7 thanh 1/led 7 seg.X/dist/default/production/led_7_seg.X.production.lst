

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Apr 06 16:26:40 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     0088                     	;# 
    95     0089                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     008F                     	;# 
   100     0090                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0094                     	;# 
   107     0095                     	;# 
   108     0096                     	;# 
   109     0097                     	;# 
   110     0098                     	;# 
   111     0099                     	;# 
   112     009A                     	;# 
   113     009B                     	;# 
   114     009C                     	;# 
   115     009D                     	;# 
   116     009E                     	;# 
   117     009F                     	;# 
   118     0105                     	;# 
   119     0107                     	;# 
   120     0108                     	;# 
   121     0109                     	;# 
   122     010C                     	;# 
   123     010C                     	;# 
   124     010D                     	;# 
   125     010E                     	;# 
   126     010F                     	;# 
   127     0185                     	;# 
   128     0187                     	;# 
   129     0188                     	;# 
   130     0189                     	;# 
   131     018C                     	;# 
   132     018D                     	;# 
   133     0000                     	;# 
   134     0001                     	;# 
   135     0002                     	;# 
   136     0003                     	;# 
   137     0004                     	;# 
   138     0005                     	;# 
   139     0006                     	;# 
   140     0007                     	;# 
   141     0008                     	;# 
   142     0009                     	;# 
   143     000A                     	;# 
   144     000B                     	;# 
   145     000C                     	;# 
   146     000D                     	;# 
   147     000E                     	;# 
   148     000E                     	;# 
   149     000F                     	;# 
   150     0010                     	;# 
   151     0011                     	;# 
   152     0012                     	;# 
   153     0013                     	;# 
   154     0014                     	;# 
   155     0015                     	;# 
   156     0015                     	;# 
   157     0016                     	;# 
   158     0017                     	;# 
   159     0018                     	;# 
   160     0019                     	;# 
   161     001A                     	;# 
   162     001B                     	;# 
   163     001B                     	;# 
   164     001C                     	;# 
   165     001D                     	;# 
   166     001E                     	;# 
   167     001F                     	;# 
   168     0081                     	;# 
   169     0085                     	;# 
   170     0086                     	;# 
   171     0087                     	;# 
   172     0088                     	;# 
   173     0089                     	;# 
   174     008C                     	;# 
   175     008D                     	;# 
   176     008E                     	;# 
   177     008F                     	;# 
   178     0090                     	;# 
   179     0091                     	;# 
   180     0092                     	;# 
   181     0093                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0094                     	;# 
   185     0095                     	;# 
   186     0096                     	;# 
   187     0097                     	;# 
   188     0098                     	;# 
   189     0099                     	;# 
   190     009A                     	;# 
   191     009B                     	;# 
   192     009C                     	;# 
   193     009D                     	;# 
   194     009E                     	;# 
   195     009F                     	;# 
   196     0105                     	;# 
   197     0107                     	;# 
   198     0108                     	;# 
   199     0109                     	;# 
   200     010C                     	;# 
   201     010C                     	;# 
   202     010D                     	;# 
   203     010E                     	;# 
   204     010F                     	;# 
   205     0185                     	;# 
   206     0187                     	;# 
   207     0188                     	;# 
   208     0189                     	;# 
   209     018C                     	;# 
   210     018D                     	;# 
   211                           
   212                           	psect	idataBANK0
   213     06CE                     __pidataBANK0:
   214                           
   215                           ;initializer for _led7seg_nghich
   216     06CE  3490               	retlw	144
   217     06CF  3480               	retlw	128
   218     06D0  34F8               	retlw	248
   219     06D1  3482               	retlw	130
   220     06D2  3492               	retlw	146
   221     06D3  3499               	retlw	153
   222     06D4  34B0               	retlw	176
   223     06D5  34A4               	retlw	164
   224     06D6  34F9               	retlw	249
   225     06D7  34C0               	retlw	192
   226                           
   227                           ;initializer for _led7seg
   228     06D8  34C0               	retlw	192
   229     06D9  34F9               	retlw	249
   230     06DA  34A4               	retlw	164
   231     06DB  34B0               	retlw	176
   232     06DC  3499               	retlw	153
   233     06DD  3492               	retlw	146
   234     06DE  3482               	retlw	130
   235     06DF  34F8               	retlw	248
   236     06E0  3480               	retlw	128
   237     06E1  3490               	retlw	144
   238                           
   239                           	psect	nvCOMMON
   240     007C                     __pnvCOMMON:
   241     007C                     _j:
   242     007C                     	ds	1
   243     0008                     _PORTD	set	8
   244     0007                     _PORTC	set	7
   245     0088                     _TRISD	set	136
   246     0087                     _TRISC	set	135
   247     0189                     _ANSELH	set	393
   248     0188                     _ANSEL	set	392
   249                           
   250                           	psect	cinit
   251     07EA                     start_initialization:	
   252                           ; #config settings
   253                           
   254     07EA                     __initialization:
   255                           
   256                           ; Initialize objects allocated to BANK0
   257     07EA  1383               	bcf	3,7	;select IRP bank0
   258     07EB  3034               	movlw	low (__pdataBANK0+20)
   259     07EC  00FD               	movwf	btemp+-1
   260     07ED  3006               	movlw	high __pidataBANK0
   261     07EE  00FE               	movwf	btemp
   262     07EF  30CE               	movlw	low __pidataBANK0
   263     07F0  00FF               	movwf	btemp+1
   264     07F1  3020               	movlw	low __pdataBANK0
   265     07F2  0084               	movwf	4
   266     07F3  120A  118A  26BF  120A  118A  	fcall	init_ram0
   267                           
   268                           ; Clear objects allocated to BANK0
   269     07F8  01B4               	clrf	__pbssBANK0& (0+127)
   270     07F9  01B5               	clrf	(__pbssBANK0+1)& (0+127)
   271     07FA  01B6               	clrf	(__pbssBANK0+2)& (0+127)
   272                           
   273                           ; Clear objects allocated to COMMON
   274     07FB  01FD               	clrf	__pbssCOMMON& (0+127)
   275     07FC                     end_of_initialization:	
   276                           ;End of C runtime variable initialization code
   277                           
   278     07FC                     __end_of__initialization:
   279     07FC  0183               	clrf	3
   280     07FD  120A  118A  2EAA   	ljmp	_main	;jump to C main() function
   281                           
   282                           	psect	bssCOMMON
   283     007D                     __pbssCOMMON:
   284     007D                     _i:
   285     007D                     	ds	1
   286                           
   287                           	psect	bssBANK0
   288     0034                     __pbssBANK0:
   289     0034                     _num_disp_dv:
   290     0034                     	ds	1
   291     0035                     _num_disp_c:
   292     0035                     	ds	1
   293     0036                     _num_disp:
   294     0036                     	ds	1
   295                           
   296                           	psect	dataBANK0
   297     0020                     __pdataBANK0:
   298     0020                     _led7seg_nghich:
   299     0020                     	ds	10
   300     002A                     _led7seg:
   301     002A                     	ds	10
   302                           
   303                           	psect	inittext
   304     06BB                     init_fetch0:	
   305                           ;	Called with low address in FSR and high address in W
   306                           
   307     06BB  087E               	movf	btemp,w
   308     06BC  008A               	movwf	10
   309     06BD  087F               	movf	btemp+1,w
   310     06BE  0082               	movwf	2
   311     06BF                     init_ram0:	
   312                           ;Called with:
   313                           ;	high address of idata address in btemp 
   314                           ;	low address of idata address in btemp+1 
   315                           ;	low address of data in FSR
   316                           ;	high address + 1 of data in btemp-1
   317                           
   318     06BF  120A  118A  26BB  120A  118A  	fcall	init_fetch0
   319     06C4  0080               	movwf	0
   320     06C5  0A84               	incf	4,f
   321     06C6  0804               	movf	4,w
   322     06C7  067D               	xorwf	btemp+-1,w
   323     06C8  1903               	btfsc	3,2
   324     06C9  3400               	retlw	0
   325     06CA  0AFF               	incf	btemp+1,f
   326     06CB  1903               	btfsc	3,2
   327     06CC  0AFE               	incf	btemp,f
   328     06CD  2EBF               	goto	init_ram0
   329                           
   330                           	psect	cstackCOMMON
   331     0070                     __pcstackCOMMON:
   332     0070                     ?_demgiam23_0:
   333     0070                     ?_main:	
   334                           ; 1 bytes @ 0x0
   335                           
   336     0070                     ?___awdiv:	
   337                           ; 1 bytes @ 0x0
   338                           
   339     0070                     ?___awmod:	
   340                           ; 2 bytes @ 0x0
   341                           
   342     0070                     ___awdiv@divisor:	
   343                           ; 2 bytes @ 0x0
   344                           
   345     0070                     ___awmod@divisor:	
   346                           ; 2 bytes @ 0x0
   347                           
   348                           
   349                           ; 2 bytes @ 0x0
   350     0070                     	ds	2
   351     0072                     ___awdiv@dividend:
   352     0072                     ___awmod@dividend:	
   353                           ; 2 bytes @ 0x2
   354                           
   355                           
   356                           ; 2 bytes @ 0x2
   357     0072                     	ds	2
   358     0074                     ??___awdiv:
   359     0074                     ??___awmod:	
   360                           ; 1 bytes @ 0x4
   361                           
   362                           
   363                           ; 1 bytes @ 0x4
   364     0074                     	ds	1
   365     0075                     ___awdiv@counter:
   366     0075                     ___awmod@counter:	
   367                           ; 1 bytes @ 0x5
   368                           
   369                           
   370                           ; 1 bytes @ 0x5
   371     0075                     	ds	1
   372     0076                     ___awdiv@sign:
   373     0076                     ___awmod@sign:	
   374                           ; 1 bytes @ 0x6
   375                           
   376                           
   377                           ; 1 bytes @ 0x6
   378     0076                     	ds	1
   379     0077                     ___awdiv@quotient:
   380                           
   381                           ; 2 bytes @ 0x7
   382     0077                     	ds	2
   383     0079                     ??_demgiam23_0:
   384                           
   385                           ; 1 bytes @ 0x9
   386     0079                     	ds	3
   387     007C                     ??_main:
   388                           
   389                           	psect	maintext
   390     06AA                     __pmaintext:	
   391                           ; 1 bytes @ 0xC
   392 ;;
   393 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   394 ;;
   395 ;; *************** function _main *****************
   396 ;; Defined at:
   397 ;;		line 74 in file "led 7 seg.c"
   398 ;; Parameters:    Size  Location     Type
   399 ;;		None
   400 ;; Auto vars:     Size  Location     Type
   401 ;;		None
   402 ;; Return value:  Size  Location     Type
   403 ;;                  1    wreg      void 
   404 ;; Registers used:
   405 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   406 ;; Tracked objects:
   407 ;;		On entry : B00/0
   408 ;;		On exit  : 0/0
   409 ;;		Unchanged: 0/0
   410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   411 ;;      Params:         0       0       0       0       0
   412 ;;      Locals:         0       0       0       0       0
   413 ;;      Temps:          0       0       0       0       0
   414 ;;      Totals:         0       0       0       0       0
   415 ;;Total ram usage:        0 bytes
   416 ;; Hardware stack levels required when called: 2
   417 ;; This function calls:
   418 ;;		_demgiam23_0
   419 ;; This function is called by:
   420 ;;		Startup code after reset
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424     06AA                     _main:	
   425                           ;psect for function _main
   426                           
   427     06AA                     l917:	
   428                           ;incstack = 0
   429                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   430                           
   431                           
   432                           ;led 7 seg.c: 75:     ANSEL = ANSELH = 0x00;
   433     06AA  1683               	bsf	3,5	;RP0=1, select bank3
   434     06AB  1703               	bsf	3,6	;RP1=1, select bank3
   435     06AC  0189               	clrf	9	;volatile
   436     06AD  0188               	clrf	8	;volatile
   437                           
   438                           ;led 7 seg.c: 76:     TRISC = 0x00;
   439     06AE  1683               	bsf	3,5	;RP0=1, select bank1
   440     06AF  1303               	bcf	3,6	;RP1=0, select bank1
   441     06B0  0187               	clrf	7	;volatile
   442                           
   443                           ;led 7 seg.c: 77:     TRISD = 0x00;
   444     06B1  0188               	clrf	8	;volatile
   445     06B2                     l919:
   446                           
   447                           ;led 7 seg.c: 84:     {;led 7 seg.c: 87:         demgiam23_0();
   448     06B2  120A  118A  26E2  120A  118A  	fcall	_demgiam23_0
   449     06B7  2EB2               	goto	l919
   450     06B8  120A  118A  2800   	ljmp	start
   451     06BB                     __end_of_main:
   452                           
   453                           	psect	text1
   454     06E2                     __ptext1:	
   455 ;; *************** function _demgiam23_0 *****************
   456 ;; Defined at:
   457 ;;		line 64 in file "led 7 seg.c"
   458 ;; Parameters:    Size  Location     Type
   459 ;;		None
   460 ;; Auto vars:     Size  Location     Type
   461 ;;		None
   462 ;; Return value:  Size  Location     Type
   463 ;;                  1    wreg      void 
   464 ;; Registers used:
   465 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   466 ;; Tracked objects:
   467 ;;		On entry : 0/0
   468 ;;		On exit  : 0/0
   469 ;;		Unchanged: 0/0
   470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   471 ;;      Params:         0       0       0       0       0
   472 ;;      Locals:         0       0       0       0       0
   473 ;;      Temps:          3       0       0       0       0
   474 ;;      Totals:         3       0       0       0       0
   475 ;;Total ram usage:        3 bytes
   476 ;; Hardware stack levels used: 1
   477 ;; Hardware stack levels required when called: 1
   478 ;; This function calls:
   479 ;;		___awdiv
   480 ;;		___awmod
   481 ;; This function is called by:
   482 ;;		_main
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486     06E2                     _demgiam23_0:	
   487                           ;psect for function _demgiam23_0
   488                           
   489     06E2                     l865:	
   490                           ;incstack = 0
   491                           ; Regs used in _demgiam23_0: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   492                           
   493                           
   494                           ;led 7 seg.c: 66:     for( j=23 ; j>0 ; j--)
   495     06E2  3017               	movlw	23
   496     06E3  00FC               	movwf	_j
   497     06E4                     l867:
   498     06E4  087C               	movf	_j,w
   499     06E5  1D03               	btfss	3,2
   500     06E6  2EE8               	goto	u431
   501     06E7  2EE9               	goto	u430
   502     06E8                     u431:
   503     06E8  2EEA               	goto	l871
   504     06E9                     u430:
   505     06E9  2F29               	goto	l45
   506     06EA                     l871:
   507                           
   508                           ;led 7 seg.c: 67:     {;led 7 seg.c: 68:         PORTC = led7seg[j/10];
   509     06EA  300A               	movlw	10
   510     06EB  00F0               	movwf	___awdiv@divisor
   511     06EC  3000               	movlw	0
   512     06ED  00F1               	movwf	___awdiv@divisor+1
   513     06EE  087C               	movf	_j,w
   514     06EF  00F9               	movwf	??_demgiam23_0
   515     06F0  01FA               	clrf	??_demgiam23_0+1
   516     06F1  0879               	movf	??_demgiam23_0,w
   517     06F2  00F2               	movwf	___awdiv@dividend
   518     06F3  087A               	movf	??_demgiam23_0+1,w
   519     06F4  00F3               	movwf	___awdiv@dividend+1
   520     06F5  120A  118A  2783  120A  118A  	fcall	___awdiv
   521     06FA  0870               	movf	?___awdiv,w
   522     06FB  3E2A               	addlw	(low (_led7seg| 0))& (0+255)
   523     06FC  0084               	movwf	4
   524     06FD  1383               	bcf	3,7	;select IRP bank0
   525     06FE  0800               	movf	0,w
   526     06FF  1283               	bcf	3,5	;RP0=0, select bank0
   527     0700  1303               	bcf	3,6	;RP1=0, select bank0
   528     0701  0087               	movwf	7	;volatile
   529                           
   530                           ;led 7 seg.c: 69:         PORTD = led7seg[j%10];
   531     0702  300A               	movlw	10
   532     0703  00F0               	movwf	___awmod@divisor
   533     0704  3000               	movlw	0
   534     0705  00F1               	movwf	___awmod@divisor+1
   535     0706  087C               	movf	_j,w
   536     0707  00F9               	movwf	??_demgiam23_0
   537     0708  01FA               	clrf	??_demgiam23_0+1
   538     0709  0879               	movf	??_demgiam23_0,w
   539     070A  00F2               	movwf	___awmod@dividend
   540     070B  087A               	movf	??_demgiam23_0+1,w
   541     070C  00F3               	movwf	___awmod@dividend+1
   542     070D  120A  118A  272A  120A  118A  	fcall	___awmod
   543     0712  0870               	movf	?___awmod,w
   544     0713  3E2A               	addlw	(low (_led7seg| 0))& (0+255)
   545     0714  0084               	movwf	4
   546     0715  1383               	bcf	3,7	;select IRP bank0
   547     0716  0800               	movf	0,w
   548     0717  1283               	bcf	3,5	;RP0=0, select bank0
   549     0718  1303               	bcf	3,6	;RP1=0, select bank0
   550     0719  0088               	movwf	8	;volatile
   551     071A                     l873:
   552                           
   553                           ;led 7 seg.c: 70:         _delay((unsigned long)((300)*(4000000/4000.0)));
   554     071A  3002               	movlw	2
   555     071B  00FB               	movwf	??_demgiam23_0+2
   556     071C  3086               	movlw	134
   557     071D  00FA               	movwf	??_demgiam23_0+1
   558     071E  3099               	movlw	153
   559     071F  00F9               	movwf	??_demgiam23_0
   560     0720                     u477:
   561     0720  0BF9               	decfsz	??_demgiam23_0,f
   562     0721  2F20               	goto	u477
   563     0722  0BFA               	decfsz	??_demgiam23_0+1,f
   564     0723  2F20               	goto	u477
   565     0724  0BFB               	decfsz	??_demgiam23_0+2,f
   566     0725  2F20               	goto	u477
   567     0726                     l875:
   568                           
   569                           ;led 7 seg.c: 71:     }
   570     0726  3001               	movlw	1
   571     0727  02FC               	subwf	_j,f
   572     0728  2EE4               	goto	l867
   573     0729                     l45:
   574     0729  0008               	return
   575     072A                     __end_of_demgiam23_0:
   576                           
   577                           	psect	text2
   578     072A                     __ptext2:	
   579 ;; *************** function ___awmod *****************
   580 ;; Defined at:
   581 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;  divisor         2    0[COMMON] int 
   584 ;;  dividend        2    2[COMMON] int 
   585 ;; Auto vars:     Size  Location     Type
   586 ;;  sign            1    6[COMMON] unsigned char 
   587 ;;  counter         1    5[COMMON] unsigned char 
   588 ;; Return value:  Size  Location     Type
   589 ;;                  2    0[COMMON] int 
   590 ;; Registers used:
   591 ;;		wreg, status,2, status,0
   592 ;; Tracked objects:
   593 ;;		On entry : 0/0
   594 ;;		On exit  : 0/0
   595 ;;		Unchanged: 0/0
   596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   597 ;;      Params:         4       0       0       0       0
   598 ;;      Locals:         2       0       0       0       0
   599 ;;      Temps:          1       0       0       0       0
   600 ;;      Totals:         7       0       0       0       0
   601 ;;Total ram usage:        7 bytes
   602 ;; Hardware stack levels used: 1
   603 ;; This function calls:
   604 ;;		Nothing
   605 ;; This function is called by:
   606 ;;		_demgiam23_0
   607 ;;		_demtu0_23
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611     072A                     ___awmod:	
   612                           ;psect for function ___awmod
   613                           
   614     072A                     l827:	
   615                           ;incstack = 0
   616                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   617                           
   618     072A  01F6               	clrf	___awmod@sign
   619     072B                     l829:
   620     072B  1FF3               	btfss	___awmod@dividend+1,7
   621     072C  2F2E               	goto	u341
   622     072D  2F2F               	goto	u340
   623     072E                     u341:
   624     072E  2F36               	goto	l835
   625     072F                     u340:
   626     072F                     l831:
   627     072F  09F2               	comf	___awmod@dividend,f
   628     0730  09F3               	comf	___awmod@dividend+1,f
   629     0731  0AF2               	incf	___awmod@dividend,f
   630     0732  1903               	skipnz
   631     0733  0AF3               	incf	___awmod@dividend+1,f
   632     0734                     l833:
   633     0734  01F6               	clrf	___awmod@sign
   634     0735  0AF6               	incf	___awmod@sign,f
   635     0736                     l835:
   636     0736  1FF1               	btfss	___awmod@divisor+1,7
   637     0737  2F39               	goto	u351
   638     0738  2F3A               	goto	u350
   639     0739                     u351:
   640     0739  2F3F               	goto	l839
   641     073A                     u350:
   642     073A                     l837:
   643     073A  09F0               	comf	___awmod@divisor,f
   644     073B  09F1               	comf	___awmod@divisor+1,f
   645     073C  0AF0               	incf	___awmod@divisor,f
   646     073D  1903               	skipnz
   647     073E  0AF1               	incf	___awmod@divisor+1,f
   648     073F                     l839:
   649     073F  0870               	movf	___awmod@divisor,w
   650     0740  0471               	iorwf	___awmod@divisor+1,w
   651     0741  1903               	btfsc	3,2
   652     0742  2F44               	goto	u361
   653     0743  2F45               	goto	u360
   654     0744                     u361:
   655     0744  2F74               	goto	l857
   656     0745                     u360:
   657     0745                     l841:
   658     0745  01F5               	clrf	___awmod@counter
   659     0746  0AF5               	incf	___awmod@counter,f
   660     0747  2F53               	goto	l847
   661     0748                     l843:
   662     0748  3001               	movlw	1
   663     0749                     u375:
   664     0749  1003               	clrc
   665     074A  0DF0               	rlf	___awmod@divisor,f
   666     074B  0DF1               	rlf	___awmod@divisor+1,f
   667     074C  3EFF               	addlw	-1
   668     074D  1D03               	skipz
   669     074E  2F49               	goto	u375
   670     074F                     l845:
   671     074F  3001               	movlw	1
   672     0750  00F4               	movwf	??___awmod
   673     0751  0874               	movf	??___awmod,w
   674     0752  07F5               	addwf	___awmod@counter,f
   675     0753                     l847:
   676     0753  1FF1               	btfss	___awmod@divisor+1,7
   677     0754  2F56               	goto	u381
   678     0755  2F57               	goto	u380
   679     0756                     u381:
   680     0756  2F48               	goto	l843
   681     0757                     u380:
   682     0757                     l849:
   683     0757  0871               	movf	___awmod@divisor+1,w
   684     0758  0273               	subwf	___awmod@dividend+1,w
   685     0759  1D03               	skipz
   686     075A  2F5D               	goto	u395
   687     075B  0870               	movf	___awmod@divisor,w
   688     075C  0272               	subwf	___awmod@dividend,w
   689     075D                     u395:
   690     075D  1C03               	skipc
   691     075E  2F60               	goto	u391
   692     075F  2F61               	goto	u390
   693     0760                     u391:
   694     0760  2F67               	goto	l853
   695     0761                     u390:
   696     0761                     l851:
   697     0761  0870               	movf	___awmod@divisor,w
   698     0762  02F2               	subwf	___awmod@dividend,f
   699     0763  0871               	movf	___awmod@divisor+1,w
   700     0764  1C03               	skipc
   701     0765  03F3               	decf	___awmod@dividend+1,f
   702     0766  02F3               	subwf	___awmod@dividend+1,f
   703     0767                     l853:
   704     0767  3001               	movlw	1
   705     0768                     u405:
   706     0768  1003               	clrc
   707     0769  0CF1               	rrf	___awmod@divisor+1,f
   708     076A  0CF0               	rrf	___awmod@divisor,f
   709     076B  3EFF               	addlw	-1
   710     076C  1D03               	skipz
   711     076D  2F68               	goto	u405
   712     076E                     l855:
   713     076E  3001               	movlw	1
   714     076F  02F5               	subwf	___awmod@counter,f
   715     0770  1D03               	btfss	3,2
   716     0771  2F73               	goto	u411
   717     0772  2F74               	goto	u410
   718     0773                     u411:
   719     0773  2F57               	goto	l849
   720     0774                     u410:
   721     0774                     l857:
   722     0774  0876               	movf	___awmod@sign,w
   723     0775  1903               	btfsc	3,2
   724     0776  2F78               	goto	u421
   725     0777  2F79               	goto	u420
   726     0778                     u421:
   727     0778  2F7E               	goto	l861
   728     0779                     u420:
   729     0779                     l859:
   730     0779  09F2               	comf	___awmod@dividend,f
   731     077A  09F3               	comf	___awmod@dividend+1,f
   732     077B  0AF2               	incf	___awmod@dividend,f
   733     077C  1903               	skipnz
   734     077D  0AF3               	incf	___awmod@dividend+1,f
   735     077E                     l861:
   736     077E  0873               	movf	___awmod@dividend+1,w
   737     077F  00F1               	movwf	?___awmod+1
   738     0780  0872               	movf	___awmod@dividend,w
   739     0781  00F0               	movwf	?___awmod
   740     0782                     l305:
   741     0782  0008               	return
   742     0783                     __end_of___awmod:
   743                           
   744                           	psect	text3
   745     0783                     __ptext3:	
   746 ;; *************** function ___awdiv *****************
   747 ;; Defined at:
   748 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;  divisor         2    0[COMMON] int 
   751 ;;  dividend        2    2[COMMON] int 
   752 ;; Auto vars:     Size  Location     Type
   753 ;;  quotient        2    7[COMMON] int 
   754 ;;  sign            1    6[COMMON] unsigned char 
   755 ;;  counter         1    5[COMMON] unsigned char 
   756 ;; Return value:  Size  Location     Type
   757 ;;                  2    0[COMMON] int 
   758 ;; Registers used:
   759 ;;		wreg, status,2, status,0
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   765 ;;      Params:         4       0       0       0       0
   766 ;;      Locals:         4       0       0       0       0
   767 ;;      Temps:          1       0       0       0       0
   768 ;;      Totals:         9       0       0       0       0
   769 ;;Total ram usage:        9 bytes
   770 ;; Hardware stack levels used: 1
   771 ;; This function calls:
   772 ;;		Nothing
   773 ;; This function is called by:
   774 ;;		_demgiam23_0
   775 ;;		_demtu0_23
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779     0783                     ___awdiv:	
   780                           ;psect for function ___awdiv
   781                           
   782     0783                     l783:	
   783                           ;incstack = 0
   784                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   785                           
   786     0783  01F6               	clrf	___awdiv@sign
   787     0784                     l785:
   788     0784  1FF1               	btfss	___awdiv@divisor+1,7
   789     0785  2F87               	goto	u241
   790     0786  2F88               	goto	u240
   791     0787                     u241:
   792     0787  2F8F               	goto	l791
   793     0788                     u240:
   794     0788                     l787:
   795     0788  09F0               	comf	___awdiv@divisor,f
   796     0789  09F1               	comf	___awdiv@divisor+1,f
   797     078A  0AF0               	incf	___awdiv@divisor,f
   798     078B  1903               	skipnz
   799     078C  0AF1               	incf	___awdiv@divisor+1,f
   800     078D                     l789:
   801     078D  01F6               	clrf	___awdiv@sign
   802     078E  0AF6               	incf	___awdiv@sign,f
   803     078F                     l791:
   804     078F  1FF3               	btfss	___awdiv@dividend+1,7
   805     0790  2F92               	goto	u251
   806     0791  2F93               	goto	u250
   807     0792                     u251:
   808     0792  2F9C               	goto	l797
   809     0793                     u250:
   810     0793                     l793:
   811     0793  09F2               	comf	___awdiv@dividend,f
   812     0794  09F3               	comf	___awdiv@dividend+1,f
   813     0795  0AF2               	incf	___awdiv@dividend,f
   814     0796  1903               	skipnz
   815     0797  0AF3               	incf	___awdiv@dividend+1,f
   816     0798                     l795:
   817     0798  3001               	movlw	1
   818     0799  00F4               	movwf	??___awdiv
   819     079A  0874               	movf	??___awdiv,w
   820     079B  06F6               	xorwf	___awdiv@sign,f
   821     079C                     l797:
   822     079C  01F7               	clrf	___awdiv@quotient
   823     079D  01F8               	clrf	___awdiv@quotient+1
   824     079E                     l799:
   825     079E  0870               	movf	___awdiv@divisor,w
   826     079F  0471               	iorwf	___awdiv@divisor+1,w
   827     07A0  1903               	btfsc	3,2
   828     07A1  2FA3               	goto	u261
   829     07A2  2FA4               	goto	u260
   830     07A3                     u261:
   831     07A3  2FDB               	goto	l819
   832     07A4                     u260:
   833     07A4                     l801:
   834     07A4  01F5               	clrf	___awdiv@counter
   835     07A5  0AF5               	incf	___awdiv@counter,f
   836     07A6  2FB2               	goto	l807
   837     07A7                     l803:
   838     07A7  3001               	movlw	1
   839     07A8                     u275:
   840     07A8  1003               	clrc
   841     07A9  0DF0               	rlf	___awdiv@divisor,f
   842     07AA  0DF1               	rlf	___awdiv@divisor+1,f
   843     07AB  3EFF               	addlw	-1
   844     07AC  1D03               	skipz
   845     07AD  2FA8               	goto	u275
   846     07AE                     l805:
   847     07AE  3001               	movlw	1
   848     07AF  00F4               	movwf	??___awdiv
   849     07B0  0874               	movf	??___awdiv,w
   850     07B1  07F5               	addwf	___awdiv@counter,f
   851     07B2                     l807:
   852     07B2  1FF1               	btfss	___awdiv@divisor+1,7
   853     07B3  2FB5               	goto	u281
   854     07B4  2FB6               	goto	u280
   855     07B5                     u281:
   856     07B5  2FA7               	goto	l803
   857     07B6                     u280:
   858     07B6                     l809:
   859     07B6  3001               	movlw	1
   860     07B7                     u295:
   861     07B7  1003               	clrc
   862     07B8  0DF7               	rlf	___awdiv@quotient,f
   863     07B9  0DF8               	rlf	___awdiv@quotient+1,f
   864     07BA  3EFF               	addlw	-1
   865     07BB  1D03               	skipz
   866     07BC  2FB7               	goto	u295
   867     07BD  0871               	movf	___awdiv@divisor+1,w
   868     07BE  0273               	subwf	___awdiv@dividend+1,w
   869     07BF  1D03               	skipz
   870     07C0  2FC3               	goto	u305
   871     07C1  0870               	movf	___awdiv@divisor,w
   872     07C2  0272               	subwf	___awdiv@dividend,w
   873     07C3                     u305:
   874     07C3  1C03               	skipc
   875     07C4  2FC6               	goto	u301
   876     07C5  2FC7               	goto	u300
   877     07C6                     u301:
   878     07C6  2FCE               	goto	l815
   879     07C7                     u300:
   880     07C7                     l811:
   881     07C7  0870               	movf	___awdiv@divisor,w
   882     07C8  02F2               	subwf	___awdiv@dividend,f
   883     07C9  0871               	movf	___awdiv@divisor+1,w
   884     07CA  1C03               	skipc
   885     07CB  03F3               	decf	___awdiv@dividend+1,f
   886     07CC  02F3               	subwf	___awdiv@dividend+1,f
   887     07CD                     l813:
   888     07CD  1477               	bsf	___awdiv@quotient,0
   889     07CE                     l815:
   890     07CE  3001               	movlw	1
   891     07CF                     u315:
   892     07CF  1003               	clrc
   893     07D0  0CF1               	rrf	___awdiv@divisor+1,f
   894     07D1  0CF0               	rrf	___awdiv@divisor,f
   895     07D2  3EFF               	addlw	-1
   896     07D3  1D03               	skipz
   897     07D4  2FCF               	goto	u315
   898     07D5                     l817:
   899     07D5  3001               	movlw	1
   900     07D6  02F5               	subwf	___awdiv@counter,f
   901     07D7  1D03               	btfss	3,2
   902     07D8  2FDA               	goto	u321
   903     07D9  2FDB               	goto	u320
   904     07DA                     u321:
   905     07DA  2FB6               	goto	l809
   906     07DB                     u320:
   907     07DB                     l819:
   908     07DB  0876               	movf	___awdiv@sign,w
   909     07DC  1903               	btfsc	3,2
   910     07DD  2FDF               	goto	u331
   911     07DE  2FE0               	goto	u330
   912     07DF                     u331:
   913     07DF  2FE5               	goto	l823
   914     07E0                     u330:
   915     07E0                     l821:
   916     07E0  09F7               	comf	___awdiv@quotient,f
   917     07E1  09F8               	comf	___awdiv@quotient+1,f
   918     07E2  0AF7               	incf	___awdiv@quotient,f
   919     07E3  1903               	skipnz
   920     07E4  0AF8               	incf	___awdiv@quotient+1,f
   921     07E5                     l823:
   922     07E5  0878               	movf	___awdiv@quotient+1,w
   923     07E6  00F1               	movwf	?___awdiv+1
   924     07E7  0877               	movf	___awdiv@quotient,w
   925     07E8  00F0               	movwf	?___awdiv
   926     07E9                     l292:
   927     07E9  0008               	return
   928     07EA                     __end_of___awdiv:
   929     007E                     btemp	set	126	;btemp
   930     007E                     wtemp0	set	126
   931                           
   932                           	psect	idloc
   933                           
   934                           ;Config register IDLOC0 @ 0x2000
   935                           ;	unspecified, using default values
   936     2000                     	org	8192
   937     2000  3FFF               	dw	16383
   938                           
   939                           ;Config register IDLOC1 @ 0x2001
   940                           ;	unspecified, using default values
   941     2001                     	org	8193
   942     2001  3FFF               	dw	16383
   943                           
   944                           ;Config register IDLOC2 @ 0x2002
   945                           ;	unspecified, using default values
   946     2002                     	org	8194
   947     2002  3FFF               	dw	16383
   948                           
   949                           ;Config register IDLOC3 @ 0x2003
   950                           ;	unspecified, using default values
   951     2003                     	org	8195
   952     2003  3FFF               	dw	16383
   953                           
   954                           	psect	config
   955                           
   956                           ;Config register CONFIG1 @ 0x2007
   957                           ;	Oscillator Selection bits
   958                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   959                           ;	Watchdog Timer Enable bit
   960                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   961                           ;	Power-up Timer Enable bit
   962                           ;	PWRTE = OFF, PWRT disabled
   963                           ;	RE3/MCLR pin function select bit
   964                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   965                           ;	Code Protection bit
   966                           ;	CP = OFF, Program memory code protection is disabled
   967                           ;	Data Code Protection bit
   968                           ;	CPD = OFF, Data memory code protection is disabled
   969                           ;	Brown Out Reset Selection bits
   970                           ;	BOREN = ON, BOR enabled
   971                           ;	Internal External Switchover bit
   972                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   973                           ;	Fail-Safe Clock Monitor Enabled bit
   974                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   975                           ;	Low Voltage Programming Enable bit
   976                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   977                           ;	In-Circuit Debugger Mode bit
   978                           ;	DEBUG = 0x1, unprogrammed default
   979     2007                     	org	8199
   980     2007  23D2               	dw	9170
   981                           
   982                           ;Config register CONFIG2 @ 0x2008
   983                           ;	Brown-out Reset Selection bit
   984                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   985                           ;	Flash Program Memory Self Write Enable bits
   986                           ;	WRT = OFF, Write protection off
   987     2008                     	org	8200
   988     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         4
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      0      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_demgiam23_0
    _demgiam23_0->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1204
                        _demgiam23_0
 ---------------------------------------------------------------------------------
 (1) _demgiam23_0                                          3     3      0    1204
                                              9 COMMON     3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _demgiam23_0
     ___awdiv
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      17       5       28.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      25      12        0.0%
ABS                  0      0      25       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Apr 06 16:26:40 2023

                      _i 007D                        _j 007C                        pc 0002  
                     l45 0729             ___awdiv@sign 0076                       fsr 0004  
                    l305 0782                      l292 07E9                      l801 07A4  
                    l811 07C7                      l803 07A7                      l821 07E0  
                    l813 07CD                      l805 07AE                      l823 07E5  
                    l815 07CE                      l807 07B2                      l831 072F  
                    l817 07D5                      l809 07B6                      l841 0745  
                    l833 0734                      l819 07DB                      l851 0761  
                    l843 0748                      l835 0736                      l827 072A  
                    l861 077E                      l853 0767                      l845 074F  
                    l837 073A                      l829 072B                      l917 06AA  
                    l791 078F                      l783 0783                      l855 076E  
                    l847 0753                      l839 073F                      l871 06EA  
                    l919 06B2                      l793 0793                      l785 0784  
                    l849 0757                      l857 0774                      l873 071A  
                    l865 06E2                      l795 0798                      l787 0788  
                    l859 0779                      l875 0726                      l867 06E4  
                    l797 079C                      l789 078D                      l799 079E  
                    u300 07C7                      u301 07C6                      u320 07DB  
                    u240 0788                      u321 07DA                      u305 07C3  
                    u241 0787                      u330 07E0                      u250 0793  
                    u410 0774                      u331 07DF                      u315 07CF  
                    u251 0792                      u411 0773                      u260 07A4  
                    u420 0779                      u340 072F                      u261 07A3  
                    u421 0778                      u405 0768                      u341 072E  
                    u350 073A                      u430 06E9                      u351 0739  
                    u431 06E8                      u280 07B6                      u360 0745  
                    u281 07B5                      u361 0744                      u275 07A8  
                    u380 0757                      u381 0756                      u390 0761  
                    u295 07B7                      u391 0760                      u375 0749  
                    u395 075D                      u477 0720                      fsr0 0004  
                    indf 0000             ___awmod@sign 0076                     _main 06AA  
                   btemp 007E                     start 0000                    ?_main 0070  
        __end_of___awdiv 07EA          __end_of___awmod 0783                    _ANSEL 0188  
        ___awdiv@divisor 0070          ___awdiv@counter 0075                    _PORTC 0007  
                  _PORTD 0008                    _TRISC 0087                    _TRISD 0088  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07EA             __end_of_main 06BB                   ??_main 007C  
       ___awdiv@dividend 0072                   _ANSELH 0189                ??___awdiv 0074  
              ??___awmod 0074         ___awdiv@quotient 0077          ___awmod@divisor 0070  
        ___awmod@counter 0075  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 06CE               __pbssBANK0 0034               __pnvCOMMON 007C  
             __pmaintext 06AA           _led7seg_nghich 0020                  ___awdiv 0783  
                ___awmod 072A                  _led7seg 002A                  __ptext1 06E2  
                __ptext2 072A                  __ptext3 0783         ___awmod@dividend 0072  
   end_of_initialization 07FC            ??_demgiam23_0 0079               _num_disp_c 0035  
    __end_of_demgiam23_0 072A      start_initialization 07EA               init_fetch0 06BB  
            __pdataBANK0 0020              __pbssCOMMON 007D                ___latbits 0002  
            _demgiam23_0 06E2                 ?___awdiv 0070                 ?___awmod 0070  
               _num_disp 0036                 init_ram0 06BF             ?_demgiam23_0 0070  
            _num_disp_dv 0034  
