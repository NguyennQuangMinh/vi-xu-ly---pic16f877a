

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Apr 05 23:41:33 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     008F                     	;# 
    96     0090                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0093                     	;# 
   100     0093                     	;# 
   101     0093                     	;# 
   102     0094                     	;# 
   103     0095                     	;# 
   104     0096                     	;# 
   105     0097                     	;# 
   106     0098                     	;# 
   107     0099                     	;# 
   108     009A                     	;# 
   109     009B                     	;# 
   110     009C                     	;# 
   111     009D                     	;# 
   112     009E                     	;# 
   113     009F                     	;# 
   114     0105                     	;# 
   115     0107                     	;# 
   116     0108                     	;# 
   117     0109                     	;# 
   118     010C                     	;# 
   119     010C                     	;# 
   120     010D                     	;# 
   121     010E                     	;# 
   122     010F                     	;# 
   123     0185                     	;# 
   124     0187                     	;# 
   125     0188                     	;# 
   126     0189                     	;# 
   127     018C                     	;# 
   128     018D                     	;# 
   129     0000                     	;# 
   130     0001                     	;# 
   131     0002                     	;# 
   132     0003                     	;# 
   133     0004                     	;# 
   134     0005                     	;# 
   135     0006                     	;# 
   136     0007                     	;# 
   137     0008                     	;# 
   138     0009                     	;# 
   139     000A                     	;# 
   140     000B                     	;# 
   141     000C                     	;# 
   142     000D                     	;# 
   143     000E                     	;# 
   144     000E                     	;# 
   145     000F                     	;# 
   146     0010                     	;# 
   147     0011                     	;# 
   148     0012                     	;# 
   149     0013                     	;# 
   150     0014                     	;# 
   151     0015                     	;# 
   152     0015                     	;# 
   153     0016                     	;# 
   154     0017                     	;# 
   155     0018                     	;# 
   156     0019                     	;# 
   157     001A                     	;# 
   158     001B                     	;# 
   159     001B                     	;# 
   160     001C                     	;# 
   161     001D                     	;# 
   162     001E                     	;# 
   163     001F                     	;# 
   164     0081                     	;# 
   165     0085                     	;# 
   166     0086                     	;# 
   167     0087                     	;# 
   168     0088                     	;# 
   169     0089                     	;# 
   170     008C                     	;# 
   171     008D                     	;# 
   172     008E                     	;# 
   173     008F                     	;# 
   174     0090                     	;# 
   175     0091                     	;# 
   176     0092                     	;# 
   177     0093                     	;# 
   178     0093                     	;# 
   179     0093                     	;# 
   180     0094                     	;# 
   181     0095                     	;# 
   182     0096                     	;# 
   183     0097                     	;# 
   184     0098                     	;# 
   185     0099                     	;# 
   186     009A                     	;# 
   187     009B                     	;# 
   188     009C                     	;# 
   189     009D                     	;# 
   190     009E                     	;# 
   191     009F                     	;# 
   192     0105                     	;# 
   193     0107                     	;# 
   194     0108                     	;# 
   195     0109                     	;# 
   196     010C                     	;# 
   197     010C                     	;# 
   198     010D                     	;# 
   199     010E                     	;# 
   200     010F                     	;# 
   201     0185                     	;# 
   202     0187                     	;# 
   203     0188                     	;# 
   204     0189                     	;# 
   205     018C                     	;# 
   206     018D                     	;# 
   207                           
   208                           	psect	idataCOMMON
   209     0746                     __pidataCOMMON:
   210                           
   211                           ;initializer for _led
   212     0746  3401               	retlw	1
   213     0747  3402               	retlw	2
   214     0748  3404               	retlw	4
   215     0749  3408               	retlw	8
   216     074A  3410               	retlw	16
   217     074B  3420               	retlw	32
   218     074C  3440               	retlw	64
   219     074D  3480               	retlw	128
   220     0008                     _PORTD	set	8
   221     0088                     _TRISD	set	136
   222     0189                     _ANSELH	set	393
   223     0188                     _ANSEL	set	392
   224                           
   225                           	psect	cinit
   226     07CA                     start_initialization:	
   227                           ; #config settings
   228                           
   229     07CA                     __initialization:
   230                           
   231                           ; Initialize objects allocated to COMMON
   232     07CA  120A  118A  2746  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   233     07CF  00F0               	movwf	__pdataCOMMON& (0+127)
   234     07D0  120A  118A  2747  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   235     07D5  00F1               	movwf	(__pdataCOMMON+1)& (0+127)
   236     07D6  120A  118A  2748  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   237     07DB  00F2               	movwf	(__pdataCOMMON+2)& (0+127)
   238     07DC  120A  118A  2749  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   239     07E1  00F3               	movwf	(__pdataCOMMON+3)& (0+127)
   240     07E2  120A  118A  274A  120A  118A  	fcall	__pidataCOMMON+4	;fetch initializer
   241     07E7  00F4               	movwf	(__pdataCOMMON+4)& (0+127)
   242     07E8  120A  118A  274B  120A  118A  	fcall	__pidataCOMMON+5	;fetch initializer
   243     07ED  00F5               	movwf	(__pdataCOMMON+5)& (0+127)
   244     07EE  120A  118A  274C  120A  118A  	fcall	__pidataCOMMON+6	;fetch initializer
   245     07F3  00F6               	movwf	(__pdataCOMMON+6)& (0+127)
   246     07F4  120A  118A  274D  120A  118A  	fcall	__pidataCOMMON+7	;fetch initializer
   247     07F9  00F7               	movwf	(__pdataCOMMON+7)& (0+127)
   248                           
   249                           ; Clear objects allocated to COMMON
   250     07FA  01FC               	clrf	__pbssCOMMON& (0+127)
   251     07FB  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   252     07FC                     end_of_initialization:	
   253                           ;End of C runtime variable initialization code
   254                           
   255     07FC                     __end_of__initialization:
   256     07FC  0183               	clrf	3
   257     07FD  120A  118A  2F4E   	ljmp	_main	;jump to C main() function
   258                           
   259                           	psect	bssCOMMON
   260     007C                     __pbssCOMMON:
   261     007C                     _i:
   262     007C                     	ds	1
   263     007D                     _j:
   264     007D                     	ds	1
   265                           
   266                           	psect	dataCOMMON
   267     0070                     __pdataCOMMON:
   268     0070                     _led:
   269     0070                     	ds	8
   270                           
   271                           	psect	inittext
   272     0761                     init_fetch0:	
   273                           ;	Called with low address in FSR and high address in W
   274                           
   275     0761  087E               	movf	btemp,w
   276     0762  008A               	movwf	10
   277     0763  087F               	movf	btemp+1,w
   278     0764  0082               	movwf	2
   279     0765                     init_ram0:	
   280                           ;Called with:
   281                           ;	high address of idata address in btemp 
   282                           ;	low address of idata address in btemp+1 
   283                           ;	low address of data in FSR
   284                           ;	high address + 1 of data in btemp-1
   285                           
   286     0765  120A  118A  2761  120A  118A  	fcall	init_fetch0
   287     076A  0080               	movwf	0
   288     076B  0A84               	incf	4,f
   289     076C  0804               	movf	4,w
   290     076D  067D               	xorwf	btemp+-1,w
   291     076E  1903               	btfsc	3,2
   292     076F  3400               	retlw	0
   293     0770  0AFF               	incf	btemp+1,f
   294     0771  1903               	btfsc	3,2
   295     0772  0AFE               	incf	btemp,f
   296     0773  2F65               	goto	init_ram0
   297                           
   298                           	psect	cstackCOMMON
   299     0078                     __pcstackCOMMON:
   300     0078                     ?_ledsangdon:
   301     0078                     ??_ledsangdon:	
   302                           ; 1 bytes @ 0x0
   303                           
   304     0078                     ?_main:	
   305                           ; 1 bytes @ 0x0
   306                           
   307                           
   308                           ; 1 bytes @ 0x0
   309     0078                     	ds	3
   310     007B                     ledsangdon@a:
   311                           
   312                           ; 1 bytes @ 0x3
   313     007B                     	ds	1
   314     007C                     ??_main:
   315                           
   316                           	psect	maintext
   317     074E                     __pmaintext:	
   318                           ; 1 bytes @ 0x4
   319 ;;
   320 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   321 ;;
   322 ;; *************** function _main *****************
   323 ;; Defined at:
   324 ;;		line 96 in file "bai 1.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;		None
   327 ;; Auto vars:     Size  Location     Type
   328 ;;		None
   329 ;; Return value:  Size  Location     Type
   330 ;;                  1    wreg      void 
   331 ;; Registers used:
   332 ;;		wreg, status,2, status,0, pclath, cstack
   333 ;; Tracked objects:
   334 ;;		On entry : B00/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   338 ;;      Params:         0       0       0       0       0
   339 ;;      Locals:         0       0       0       0       0
   340 ;;      Temps:          0       0       0       0       0
   341 ;;      Totals:         0       0       0       0       0
   342 ;;Total ram usage:        0 bytes
   343 ;; Hardware stack levels required when called: 1
   344 ;; This function calls:
   345 ;;		_ledsangdon
   346 ;; This function is called by:
   347 ;;		Startup code after reset
   348 ;; This function uses a non-reentrant model
   349 ;;
   350                           
   351     074E                     _main:	
   352                           ;psect for function _main
   353                           
   354     074E                     l716:	
   355                           ;incstack = 0
   356                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   357                           
   358                           
   359                           ;bai 1.c: 97:     ANSEL = ANSELH = 0x00;
   360     074E  1683               	bsf	3,5	;RP0=1, select bank3
   361     074F  1703               	bsf	3,6	;RP1=1, select bank3
   362     0750  0189               	clrf	9	;volatile
   363     0751  0188               	clrf	8	;volatile
   364                           
   365                           ;bai 1.c: 98:     TRISD = 0x00;
   366     0752  1683               	bsf	3,5	;RP0=1, select bank1
   367     0753  1303               	bcf	3,6	;RP1=0, select bank1
   368     0754  0188               	clrf	8	;volatile
   369                           
   370                           ;bai 1.c: 99:     PORTD = 0x00;
   371     0755  1283               	bcf	3,5	;RP0=0, select bank0
   372     0756  1303               	bcf	3,6	;RP1=0, select bank0
   373     0757  0188               	clrf	8	;volatile
   374     0758                     l718:
   375                           
   376                           ;bai 1.c: 101:     {;bai 1.c: 106:         ledsangdon();
   377     0758  120A  118A  2774  120A  118A  	fcall	_ledsangdon
   378     075D  2F58               	goto	l718
   379     075E  120A  118A  2800   	ljmp	start
   380     0761                     __end_of_main:
   381                           
   382                           	psect	text1
   383     0774                     __ptext1:	
   384 ;; *************** function _ledsangdon *****************
   385 ;; Defined at:
   386 ;;		line 81 in file "bai 1.c"
   387 ;; Parameters:    Size  Location     Type
   388 ;;		None
   389 ;; Auto vars:     Size  Location     Type
   390 ;;  a               1    3[COMMON] unsigned char 
   391 ;; Return value:  Size  Location     Type
   392 ;;                  1    wreg      void 
   393 ;; Registers used:
   394 ;;		wreg, status,2, status,0
   395 ;; Tracked objects:
   396 ;;		On entry : 0/0
   397 ;;		On exit  : 0/0
   398 ;;		Unchanged: 0/0
   399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   400 ;;      Params:         0       0       0       0       0
   401 ;;      Locals:         1       0       0       0       0
   402 ;;      Temps:          3       0       0       0       0
   403 ;;      Totals:         4       0       0       0       0
   404 ;;Total ram usage:        4 bytes
   405 ;; Hardware stack levels used: 1
   406 ;; This function calls:
   407 ;;		Nothing
   408 ;; This function is called by:
   409 ;;		_main
   410 ;; This function uses a non-reentrant model
   411 ;;
   412                           
   413     0774                     _ledsangdon:	
   414                           ;psect for function _ledsangdon
   415                           
   416     0774                     l642:	
   417                           ;incstack = 0
   418                           ; Regs used in _ledsangdon: [wreg+status,2+status,0]
   419                           
   420                           
   421                           ;bai 1.c: 83:     unsigned char a = 0x00 ;
   422     0774  01FB               	clrf	ledsangdon@a
   423                           
   424                           ;bai 1.c: 84:     for(i=0;i<8;i++)
   425     0775  01FC               	clrf	_i
   426     0776                     l644:
   427     0776  3008               	movlw	8
   428     0777  027C               	subwf	_i,w
   429     0778  1C03               	skipc
   430     0779  2F7B               	goto	u11
   431     077A  2F7C               	goto	u10
   432     077B                     u11:
   433     077B  2F7D               	goto	l648
   434     077C                     u10:
   435     077C  2FC9               	goto	l42
   436     077D                     l648:
   437                           
   438                           ;bai 1.c: 85:     {;bai 1.c: 86:         for( j=0; j<8-i ;j++)
   439     077D  01FD               	clrf	_j
   440     077E  2FA1               	goto	l656
   441     077F                     l650:
   442                           
   443                           ;bai 1.c: 87:         {;bai 1.c: 88:             PORTD = (0X80 >> j) |a;
   444     077F  0A7D               	incf	_j,w
   445     0780  00F8               	movwf	??_ledsangdon
   446     0781  3080               	movlw	128
   447     0782  00F9               	movwf	??_ledsangdon+1
   448     0783  3000               	movlw	0
   449     0784  00FA               	movwf	??_ledsangdon+2
   450     0785  2F89               	goto	u24
   451     0786                     u25:
   452     0786  0D7A               	rlf	??_ledsangdon+2,w
   453     0787  0CFA               	rrf	??_ledsangdon+2,f
   454     0788  0CF9               	rrf	??_ledsangdon+1,f
   455     0789                     u24:
   456     0789  0BF8               	decfsz	??_ledsangdon,f
   457     078A  2F86               	goto	u25
   458     078B  0879               	movf	??_ledsangdon+1,w
   459     078C  047B               	iorwf	ledsangdon@a,w
   460     078D  1283               	bcf	3,5	;RP0=0, select bank0
   461     078E  1303               	bcf	3,6	;RP1=0, select bank0
   462     078F  0088               	movwf	8	;volatile
   463     0790                     l652:
   464                           
   465                           ;bai 1.c: 89:             _delay((unsigned long)((500)*(4000000/4000.0)));
   466     0790  3003               	movlw	3
   467     0791  00FA               	movwf	??_ledsangdon+2
   468     0792  308A               	movlw	138
   469     0793  00F9               	movwf	??_ledsangdon+1
   470     0794  3055               	movlw	85
   471     0795  00F8               	movwf	??_ledsangdon
   472     0796                     u87:
   473     0796  0BF8               	decfsz	??_ledsangdon,f
   474     0797  2F96               	goto	u87
   475     0798  0BF9               	decfsz	??_ledsangdon+1,f
   476     0799  2F96               	goto	u87
   477     079A  0BFA               	decfsz	??_ledsangdon+2,f
   478     079B  2F96               	goto	u87
   479     079C  2F9D               	nop2
   480     079D                     l654:
   481                           
   482                           ;bai 1.c: 90:         }
   483     079D  3001               	movlw	1
   484     079E  00F8               	movwf	??_ledsangdon
   485     079F  0878               	movf	??_ledsangdon,w
   486     07A0  07FD               	addwf	_j,f
   487     07A1                     l656:
   488     07A1  3000               	movlw	0
   489     07A2  00F9               	movwf	??_ledsangdon+1
   490     07A3  087C               	movf	_i,w
   491     07A4  3C08               	sublw	8
   492     07A5  00F8               	movwf	??_ledsangdon
   493     07A6  1C03               	skipc
   494     07A7  03F9               	decf	??_ledsangdon+1,f
   495     07A8  0879               	movf	??_ledsangdon+1,w
   496     07A9  3A80               	xorlw	128
   497     07AA  3C80               	sublw	128
   498     07AB  1D03               	skipz
   499     07AC  2FAF               	goto	u35
   500     07AD  0878               	movf	??_ledsangdon,w
   501     07AE  027D               	subwf	_j,w
   502     07AF                     u35:
   503     07AF  1C03               	skipc
   504     07B0  2FB2               	goto	u31
   505     07B1  2FB3               	goto	u30
   506     07B2                     u31:
   507     07B2  2F7F               	goto	l650
   508     07B3                     u30:
   509     07B3                     l658:
   510                           
   511                           ;bai 1.c: 91:         a=PORTD;
   512     07B3  1283               	bcf	3,5	;RP0=0, select bank0
   513     07B4  1303               	bcf	3,6	;RP1=0, select bank0
   514     07B5  0808               	movf	8,w	;volatile
   515     07B6  00FB               	movwf	ledsangdon@a
   516                           
   517                           ;bai 1.c: 92:         _delay((unsigned long)((500)*(4000000/4000.0)));
   518     07B7  3003               	movlw	3
   519     07B8  00FA               	movwf	??_ledsangdon+2
   520     07B9  308A               	movlw	138
   521     07BA  00F9               	movwf	??_ledsangdon+1
   522     07BB  3055               	movlw	85
   523     07BC  00F8               	movwf	??_ledsangdon
   524     07BD                     u97:
   525     07BD  0BF8               	decfsz	??_ledsangdon,f
   526     07BE  2FBD               	goto	u97
   527     07BF  0BF9               	decfsz	??_ledsangdon+1,f
   528     07C0  2FBD               	goto	u97
   529     07C1  0BFA               	decfsz	??_ledsangdon+2,f
   530     07C2  2FBD               	goto	u97
   531     07C3  2FC4               	nop2
   532     07C4                     l660:
   533                           
   534                           ;bai 1.c: 93:     }
   535     07C4  3001               	movlw	1
   536     07C5  00F8               	movwf	??_ledsangdon
   537     07C6  0878               	movf	??_ledsangdon,w
   538     07C7  07FC               	addwf	_i,f
   539     07C8  2F76               	goto	l644
   540     07C9                     l42:
   541     07C9  0008               	return
   542     07CA                     __end_of_ledsangdon:
   543     007E                     btemp	set	126	;btemp
   544     007E                     wtemp0	set	126
   545                           
   546                           	psect	idloc
   547                           
   548                           ;Config register IDLOC0 @ 0x2000
   549                           ;	unspecified, using default values
   550     2000                     	org	8192
   551     2000  3FFF               	dw	16383
   552                           
   553                           ;Config register IDLOC1 @ 0x2001
   554                           ;	unspecified, using default values
   555     2001                     	org	8193
   556     2001  3FFF               	dw	16383
   557                           
   558                           ;Config register IDLOC2 @ 0x2002
   559                           ;	unspecified, using default values
   560     2002                     	org	8194
   561     2002  3FFF               	dw	16383
   562                           
   563                           ;Config register IDLOC3 @ 0x2003
   564                           ;	unspecified, using default values
   565     2003                     	org	8195
   566     2003  3FFF               	dw	16383
   567                           
   568                           	psect	config
   569                           
   570                           ;Config register CONFIG1 @ 0x2007
   571                           ;	Oscillator Selection bits
   572                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   573                           ;	Watchdog Timer Enable bit
   574                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   575                           ;	Power-up Timer Enable bit
   576                           ;	PWRTE = OFF, PWRT disabled
   577                           ;	RE3/MCLR pin function select bit
   578                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   579                           ;	Code Protection bit
   580                           ;	CP = OFF, Program memory code protection is disabled
   581                           ;	Data Code Protection bit
   582                           ;	CPD = OFF, Data memory code protection is disabled
   583                           ;	Brown Out Reset Selection bits
   584                           ;	BOREN = ON, BOR enabled
   585                           ;	Internal External Switchover bit
   586                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   587                           ;	Fail-Safe Clock Monitor Enabled bit
   588                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   589                           ;	Low Voltage Programming Enable bit
   590                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   591                           ;	In-Circuit Debugger Mode bit
   592                           ;	DEBUG = 0x1, unprogrammed default
   593     2007                     	org	8199
   594     2007  23D2               	dw	9170
   595                           
   596                           ;Config register CONFIG2 @ 0x2008
   597                           ;	Brown-out Reset Selection bit
   598                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   599                           ;	Flash Program Memory Self Write Enable bits
   600                           ;	WRT = OFF, Write protection off
   601     2008                     	org	8200
   602     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ledsangdon

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                         _ledsangdon
 ---------------------------------------------------------------------------------
 (1) _ledsangdon                                           4     4      0      15
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ledsangdon

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       E      12        0.0%
ABS                  0      0       E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Apr 05 23:41:33 2023

                      _i 007C                        _j 007D                        pc 0002  
                     l42 07C9                       u10 077C                       u11 077B  
                     u30 07B3                       u31 07B2                       u24 0789  
                     u25 0786                       u35 07AF                       u87 0796  
                     u97 07BD                       fsr 0004                      l650 077F  
                    l642 0774                      l660 07C4                      l652 0790  
                    l644 0776                      l716 074E                      l654 079D  
                    l718 0758                      l656 07A1                      l648 077D  
                    l658 07B3                      _led 0070                      indf 0000  
                   _main 074E                     btemp 007E                     start 0000  
                  ?_main 0078                    _ANSEL 0188                    _PORTD 0008  
                  _TRISD 0088                    pclath 000A                    status 0003  
                  wtemp0 007E              ledsangdon@a 007B          __initialization 07CA  
           __end_of_main 0761                   ??_main 007C                   _ANSELH 0189  
           __pdataCOMMON 0070  __end_of__initialization 07FC           __pcstackCOMMON 0078  
             __pmaintext 074E               _ledsangdon 0774                  __ptext1 0774  
   end_of_initialization 07FC              ?_ledsangdon 0078            __pidataCOMMON 0746  
    start_initialization 07CA               init_fetch0 0761              __pbssCOMMON 007C  
              ___latbits 0002             ??_ledsangdon 0078       __end_of_ledsangdon 07CA  
               init_ram0 0765  
