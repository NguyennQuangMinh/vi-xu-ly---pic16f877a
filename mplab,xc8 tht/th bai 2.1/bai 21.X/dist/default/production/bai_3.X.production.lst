

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Nov 25 13:41:13 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0093                     	;# 
   100     0094                     	;# 
   101     0098                     	;# 
   102     0099                     	;# 
   103     009C                     	;# 
   104     009D                     	;# 
   105     009E                     	;# 
   106     009F                     	;# 
   107     010C                     	;# 
   108     010D                     	;# 
   109     010E                     	;# 
   110     010F                     	;# 
   111     018C                     	;# 
   112     018D                     	;# 
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     0008                     	;# 
   122     0009                     	;# 
   123     000A                     	;# 
   124     000B                     	;# 
   125     000C                     	;# 
   126     000D                     	;# 
   127     000E                     	;# 
   128     000E                     	;# 
   129     000F                     	;# 
   130     0010                     	;# 
   131     0011                     	;# 
   132     0012                     	;# 
   133     0013                     	;# 
   134     0014                     	;# 
   135     0015                     	;# 
   136     0015                     	;# 
   137     0016                     	;# 
   138     0017                     	;# 
   139     0018                     	;# 
   140     0019                     	;# 
   141     001A                     	;# 
   142     001B                     	;# 
   143     001B                     	;# 
   144     001C                     	;# 
   145     001D                     	;# 
   146     001E                     	;# 
   147     001F                     	;# 
   148     0081                     	;# 
   149     0085                     	;# 
   150     0086                     	;# 
   151     0087                     	;# 
   152     0088                     	;# 
   153     0089                     	;# 
   154     008C                     	;# 
   155     008D                     	;# 
   156     008E                     	;# 
   157     0091                     	;# 
   158     0092                     	;# 
   159     0093                     	;# 
   160     0094                     	;# 
   161     0098                     	;# 
   162     0099                     	;# 
   163     009C                     	;# 
   164     009D                     	;# 
   165     009E                     	;# 
   166     009F                     	;# 
   167     010C                     	;# 
   168     010D                     	;# 
   169     010E                     	;# 
   170     010F                     	;# 
   171     018C                     	;# 
   172     018D                     	;# 
   173                           
   174                           	psect	idataBANK0
   175     068E                     __pidataBANK0:
   176                           
   177                           ;initializer for _ma
   178     068E  3440               	retlw	64
   179     068F  3479               	retlw	121
   180     0690  3424               	retlw	36
   181     0691  3430               	retlw	48
   182     0692  3419               	retlw	25
   183     0693  3412               	retlw	18
   184     0694  3402               	retlw	2
   185     0695  3478               	retlw	120
   186     0696  3400               	retlw	0
   187     0697  3410               	retlw	16
   188     0006                     _PORTB	set	6
   189     0007                     _PORTC	set	7
   190     0007                     _PORTCbits	set	7
   191     0008                     _PORTD	set	8
   192     0088                     _TRISD	set	136
   193     0087                     _TRISC	set	135
   194     0086                     _TRISB	set	134
   195                           
   196                           	psect	cinit
   197     07EE                     start_initialization:	
   198                           ; #config settings
   199                           
   200     07EE                     __initialization:
   201                           
   202                           ; Initialize objects allocated to BANK0
   203     07EE  1383               	bcf	3,7	;select IRP bank0
   204     07EF  3037               	movlw	low (__pdataBANK0+10)
   205     07F0  00FD               	movwf	btemp+-1
   206     07F1  3006               	movlw	high __pidataBANK0
   207     07F2  00FE               	movwf	btemp
   208     07F3  308E               	movlw	low __pidataBANK0
   209     07F4  00FF               	movwf	btemp+1
   210     07F5  302D               	movlw	low __pdataBANK0
   211     07F6  0084               	movwf	4
   212     07F7  120A  118A  269C  120A  118A  	fcall	init_ram0
   213     07FC                     end_of_initialization:	
   214                           ;End of C runtime variable initialization code
   215                           
   216     07FC                     __end_of__initialization:
   217     07FC  0183               	clrf	3
   218     07FD  120A  118A  2F29   	ljmp	_main	;jump to C main() function
   219                           
   220                           	psect	dataBANK0
   221     002D                     __pdataBANK0:
   222     002D                     _ma:
   223     002D                     	ds	10
   224                           
   225                           	psect	inittext
   226     0698                     init_fetch0:	
   227                           ;	Called with low address in FSR and high address in W
   228                           
   229     0698  087E               	movf	btemp,w
   230     0699  008A               	movwf	10
   231     069A  087F               	movf	btemp+1,w
   232     069B  0082               	movwf	2
   233     069C                     init_ram0:	
   234                           ;Called with:
   235                           ;	high address of idata address in btemp 
   236                           ;	low address of idata address in btemp+1 
   237                           ;	low address of data in FSR
   238                           ;	high address + 1 of data in btemp-1
   239                           
   240     069C  120A  118A  2698  120A  118A  	fcall	init_fetch0
   241     06A1  0080               	movwf	0
   242     06A2  0A84               	incf	4,f
   243     06A3  0804               	movf	4,w
   244     06A4  067D               	xorwf	btemp+-1,w
   245     06A5  1903               	btfsc	3,2
   246     06A6  3400               	retlw	0
   247     06A7  0AFF               	incf	btemp+1,f
   248     06A8  1903               	btfsc	3,2
   249     06A9  0AFE               	incf	btemp,f
   250     06AA  2E9C               	goto	init_ram0
   251                           
   252                           	psect	cstackCOMMON
   253     0070                     __pcstackCOMMON:
   254     0070                     ?_main:
   255     0070                     ?___lwdiv:	
   256                           ; 1 bytes @ 0x0
   257                           
   258     0070                     ?___lwmod:	
   259                           ; 2 bytes @ 0x0
   260                           
   261     0070                     ___lwdiv@divisor:	
   262                           ; 2 bytes @ 0x0
   263                           
   264     0070                     ___lwmod@divisor:	
   265                           ; 2 bytes @ 0x0
   266                           
   267                           
   268                           ; 2 bytes @ 0x0
   269     0070                     	ds	2
   270     0072                     ___lwdiv@dividend:
   271     0072                     ___lwmod@dividend:	
   272                           ; 2 bytes @ 0x2
   273                           
   274                           
   275                           ; 2 bytes @ 0x2
   276     0072                     	ds	2
   277     0074                     ??___lwdiv:
   278     0074                     ??___lwmod:	
   279                           ; 1 bytes @ 0x4
   280                           
   281                           
   282                           ; 1 bytes @ 0x4
   283     0074                     	ds	1
   284     0075                     ___lwmod@counter:
   285     0075                     ___lwdiv@quotient:	
   286                           ; 1 bytes @ 0x5
   287                           
   288                           
   289                           ; 2 bytes @ 0x5
   290     0075                     	ds	2
   291     0077                     ___lwdiv@counter:
   292                           
   293                           ; 1 bytes @ 0x7
   294     0077                     	ds	1
   295     0078                     ?_scanled:
   296     0078                     scanled@x:	
   297                           ; 1 bytes @ 0x8
   298                           
   299                           
   300                           ; 2 bytes @ 0x8
   301     0078                     	ds	2
   302     007A                     ??_scanled:
   303                           
   304                           ; 1 bytes @ 0xA
   305     007A                     	ds	2
   306                           
   307                           	psect	cstackBANK0
   308     0020                     __pcstackBANK0:
   309     0020                     scanled@c:
   310                           
   311                           ; 2 bytes @ 0x0
   312     0020                     	ds	2
   313     0022                     scanled@dv:
   314                           
   315                           ; 2 bytes @ 0x2
   316     0022                     	ds	2
   317     0024                     scanled@y:
   318                           
   319                           ; 2 bytes @ 0x4
   320     0024                     	ds	2
   321     0026                     ??_main:
   322                           
   323                           ; 1 bytes @ 0x6
   324     0026                     	ds	3
   325     0029                     main@i:
   326                           
   327                           ; 2 bytes @ 0x9
   328     0029                     	ds	2
   329     002B                     main@i_75:
   330                           
   331                           ; 2 bytes @ 0xB
   332     002B                     	ds	2
   333                           
   334                           	psect	maintext
   335     0729                     __pmaintext:	
   336 ;;
   337 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   338 ;;
   339 ;; *************** function _main *****************
   340 ;; Defined at:
   341 ;;		line 47 in file "bai 3.c"
   342 ;; Parameters:    Size  Location     Type
   343 ;;		None
   344 ;; Auto vars:     Size  Location     Type
   345 ;;  i               2   11[BANK0 ] int 
   346 ;;  i               2    9[BANK0 ] int 
   347 ;; Return value:  Size  Location     Type
   348 ;;                  1    wreg      void 
   349 ;; Registers used:
   350 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   351 ;; Tracked objects:
   352 ;;		On entry : B00/0
   353 ;;		On exit  : 0/0
   354 ;;		Unchanged: 0/0
   355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   356 ;;      Params:         0       0       0       0       0
   357 ;;      Locals:         0       4       0       0       0
   358 ;;      Temps:          0       3       0       0       0
   359 ;;      Totals:         0       7       0       0       0
   360 ;;Total ram usage:        7 bytes
   361 ;; Hardware stack levels required when called: 2
   362 ;; This function calls:
   363 ;;		_scanled
   364 ;; This function is called by:
   365 ;;		Startup code after reset
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369     0729                     _main:	
   370                           ;psect for function _main
   371                           
   372     0729                     l805:	
   373                           ;incstack = 0
   374                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   375                           
   376                           
   377                           ;bai 3.c: 48:     PORTC=1;
   378     0729  3001               	movlw	1
   379     072A  1283               	bcf	3,5	;RP0=0, select bank0
   380     072B  1303               	bcf	3,6	;RP1=0, select bank0
   381     072C  0087               	movwf	7	;volatile
   382     072D                     l807:
   383                           
   384                           ;bai 3.c: 49:     TRISB=0;
   385     072D  1683               	bsf	3,5	;RP0=1, select bank1
   386     072E  1303               	bcf	3,6	;RP1=0, select bank1
   387     072F  0186               	clrf	6	;volatile
   388     0730                     l809:
   389                           
   390                           ;bai 3.c: 50:     TRISC=0;
   391     0730  0187               	clrf	7	;volatile
   392     0731                     l811:
   393                           
   394                           ;bai 3.c: 51:     TRISD=0;
   395     0731  0188               	clrf	8	;volatile
   396     0732                     l813:
   397                           
   398                           ;bai 3.c: 53:     {;bai 3.c: 54:         for(int i =0 ; i<10;i++)
   399     0732  1283               	bcf	3,5	;RP0=0, select bank0
   400     0733  1303               	bcf	3,6	;RP1=0, select bank0
   401     0734  01A9               	clrf	main@i
   402     0735  01AA               	clrf	main@i+1
   403     0736                     l819:
   404                           
   405                           ;bai 3.c: 55:         {;bai 3.c: 56:             PORTB=ma[i];
   406     0736  1283               	bcf	3,5	;RP0=0, select bank0
   407     0737  1303               	bcf	3,6	;RP1=0, select bank0
   408     0738  0829               	movf	main@i,w
   409     0739  3E2D               	addlw	(low (_ma| 0))& (0+255)
   410     073A  0084               	movwf	4
   411     073B  1383               	bcf	3,7	;select IRP bank0
   412     073C  0800               	movf	0,w
   413     073D  0086               	movwf	6	;volatile
   414     073E                     l821:
   415                           
   416                           ;bai 3.c: 57:             _delay((unsigned long)((100)*(16000000/4000.0)));
   417     073E  3003               	movlw	3
   418     073F  1283               	bcf	3,5	;RP0=0, select bank0
   419     0740  1303               	bcf	3,6	;RP1=0, select bank0
   420     0741  00A8               	movwf	??_main+2
   421     0742  3008               	movlw	8
   422     0743  00A7               	movwf	??_main+1
   423     0744  3076               	movlw	118
   424     0745  00A6               	movwf	??_main
   425     0746                     u337:
   426     0746  0BA6               	decfsz	??_main,f
   427     0747  2F46               	goto	u337
   428     0748  0BA7               	decfsz	??_main+1,f
   429     0749  2F46               	goto	u337
   430     074A  0BA8               	decfsz	??_main+2,f
   431     074B  2F46               	goto	u337
   432     074C  0000               	nop
   433     074D                     l823:
   434                           
   435                           ;bai 3.c: 58:         }
   436     074D  3001               	movlw	1
   437     074E  1283               	bcf	3,5	;RP0=0, select bank0
   438     074F  1303               	bcf	3,6	;RP1=0, select bank0
   439     0750  07A9               	addwf	main@i,f
   440     0751  1803               	skipnc
   441     0752  0AAA               	incf	main@i+1,f
   442     0753  3000               	movlw	0
   443     0754  07AA               	addwf	main@i+1,f
   444     0755                     l825:
   445     0755  082A               	movf	main@i+1,w
   446     0756  3A80               	xorlw	128
   447     0757  00FF               	movwf	btemp+1
   448     0758  3080               	movlw	128
   449     0759  027F               	subwf	btemp+1,w
   450     075A  1D03               	skipz
   451     075B  2F5E               	goto	u315
   452     075C  300A               	movlw	10
   453     075D  0229               	subwf	main@i,w
   454     075E                     u315:
   455     075E  1C03               	skipc
   456     075F  2F61               	goto	u311
   457     0760  2F62               	goto	u310
   458     0761                     u311:
   459     0761  2F36               	goto	l819
   460     0762                     u310:
   461     0762                     l827:
   462                           
   463                           ;bai 3.c: 59:         for(int i=0;i<100;i++)
   464     0762  1283               	bcf	3,5	;RP0=0, select bank0
   465     0763  1303               	bcf	3,6	;RP1=0, select bank0
   466     0764  01AB               	clrf	main@i_75
   467     0765  01AC               	clrf	main@i_75+1
   468     0766                     l833:
   469                           
   470                           ;bai 3.c: 60:         {;bai 3.c: 61:             scanled(i);
   471     0766  1283               	bcf	3,5	;RP0=0, select bank0
   472     0767  1303               	bcf	3,6	;RP1=0, select bank0
   473     0768  082C               	movf	main@i_75+1,w
   474     0769  00F9               	movwf	scanled@x+1
   475     076A  082B               	movf	main@i_75,w
   476     076B  00F8               	movwf	scanled@x
   477     076C  120A  118A  278A  120A  118A  	fcall	_scanled
   478     0771                     l835:
   479                           
   480                           ;bai 3.c: 62:         }
   481     0771  3001               	movlw	1
   482     0772  1283               	bcf	3,5	;RP0=0, select bank0
   483     0773  1303               	bcf	3,6	;RP1=0, select bank0
   484     0774  07AB               	addwf	main@i_75,f
   485     0775  1803               	skipnc
   486     0776  0AAC               	incf	main@i_75+1,f
   487     0777  3000               	movlw	0
   488     0778  07AC               	addwf	main@i_75+1,f
   489     0779                     l837:
   490     0779  082C               	movf	main@i_75+1,w
   491     077A  3A80               	xorlw	128
   492     077B  00FF               	movwf	btemp+1
   493     077C  3080               	movlw	128
   494     077D  027F               	subwf	btemp+1,w
   495     077E  1D03               	skipz
   496     077F  2F82               	goto	u325
   497     0780  3064               	movlw	100
   498     0781  022B               	subwf	main@i_75,w
   499     0782                     u325:
   500     0782  1C03               	skipc
   501     0783  2F85               	goto	u321
   502     0784  2F86               	goto	u320
   503     0785                     u321:
   504     0785  2F66               	goto	l833
   505     0786                     u320:
   506     0786  2F32               	goto	l813
   507     0787  120A  118A  2800   	ljmp	start
   508     078A                     __end_of_main:
   509                           
   510                           	psect	text1
   511     078A                     __ptext1:	
   512 ;; *************** function _scanled *****************
   513 ;; Defined at:
   514 ;;		line 27 in file "bai 3.c"
   515 ;; Parameters:    Size  Location     Type
   516 ;;  x               2    8[COMMON] unsigned int 
   517 ;; Auto vars:     Size  Location     Type
   518 ;;  y               2    4[BANK0 ] int 
   519 ;;  dv              2    2[BANK0 ] int 
   520 ;;  c               2    0[BANK0 ] int 
   521 ;; Return value:  Size  Location     Type
   522 ;;                  1    wreg      void 
   523 ;; Registers used:
   524 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   530 ;;      Params:         2       0       0       0       0
   531 ;;      Locals:         0       6       0       0       0
   532 ;;      Temps:          2       0       0       0       0
   533 ;;      Totals:         4       6       0       0       0
   534 ;;Total ram usage:       10 bytes
   535 ;; Hardware stack levels used: 1
   536 ;; Hardware stack levels required when called: 1
   537 ;; This function calls:
   538 ;;		___lwdiv
   539 ;;		___lwmod
   540 ;; This function is called by:
   541 ;;		_main
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545     078A                     _scanled:	
   546                           ;psect for function _scanled
   547                           
   548     078A                     l781:	
   549                           ;incstack = 0
   550                           ; Regs used in _scanled: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   551                           
   552                           
   553                           ;bai 3.c: 27: void scanled(unsigned int x);bai 3.c: 28: {;bai 3.c: 29:     int c,dv;;bai
      +                           3.c: 30:     c=x/10;
   554     078A  300A               	movlw	10
   555     078B  00F0               	movwf	___lwdiv@divisor
   556     078C  3000               	movlw	0
   557     078D  00F1               	movwf	___lwdiv@divisor+1
   558     078E  0879               	movf	scanled@x+1,w
   559     078F  00F3               	movwf	___lwdiv@dividend+1
   560     0790  0878               	movf	scanled@x,w
   561     0791  00F2               	movwf	___lwdiv@dividend
   562     0792  120A  118A  26E5  120A  118A  	fcall	___lwdiv
   563     0797  0871               	movf	?___lwdiv+1,w
   564     0798  1283               	bcf	3,5	;RP0=0, select bank0
   565     0799  1303               	bcf	3,6	;RP1=0, select bank0
   566     079A  00A1               	movwf	scanled@c+1
   567     079B  0870               	movf	?___lwdiv,w
   568     079C  00A0               	movwf	scanled@c
   569                           
   570                           ;bai 3.c: 31:     dv=x%10;
   571     079D  300A               	movlw	10
   572     079E  00F0               	movwf	___lwmod@divisor
   573     079F  3000               	movlw	0
   574     07A0  00F1               	movwf	___lwmod@divisor+1
   575     07A1  0879               	movf	scanled@x+1,w
   576     07A2  00F3               	movwf	___lwmod@dividend+1
   577     07A3  0878               	movf	scanled@x,w
   578     07A4  00F2               	movwf	___lwmod@dividend
   579     07A5  120A  118A  26AB  120A  118A  	fcall	___lwmod
   580     07AA  0871               	movf	?___lwmod+1,w
   581     07AB  1283               	bcf	3,5	;RP0=0, select bank0
   582     07AC  1303               	bcf	3,6	;RP1=0, select bank0
   583     07AD  00A3               	movwf	scanled@dv+1
   584     07AE  0870               	movf	?___lwmod,w
   585     07AF  00A2               	movwf	scanled@dv
   586     07B0                     l783:
   587                           
   588                           ;bai 3.c: 32:     for(int y=0;y<100;y++)
   589     07B0  01A4               	clrf	scanled@y
   590     07B1  01A5               	clrf	scanled@y+1
   591     07B2                     l789:
   592                           
   593                           ;bai 3.c: 33:     {;bai 3.c: 34:         PORTD=ma[c];
   594     07B2  1283               	bcf	3,5	;RP0=0, select bank0
   595     07B3  1303               	bcf	3,6	;RP1=0, select bank0
   596     07B4  0820               	movf	scanled@c,w
   597     07B5  3E2D               	addlw	(low (_ma| 0))& (0+255)
   598     07B6  0084               	movwf	4
   599     07B7  1383               	bcf	3,7	;select IRP bank0
   600     07B8  0800               	movf	0,w
   601     07B9  0088               	movwf	8	;volatile
   602     07BA                     l791:
   603                           
   604                           ;bai 3.c: 35:         PORTCbits.RC1=0;
   605     07BA  1087               	bcf	7,1	;volatile
   606     07BB                     l793:
   607                           
   608                           ;bai 3.c: 36:         _delay((unsigned long)((5)*(16000000/4000.0)));
   609     07BB  301A               	movlw	26
   610     07BC  00FB               	movwf	??_scanled+1
   611     07BD  30F8               	movlw	248
   612     07BE  00FA               	movwf	??_scanled
   613     07BF                     u347:
   614     07BF  0BFA               	decfsz	??_scanled,f
   615     07C0  2FBF               	goto	u347
   616     07C1  0BFB               	decfsz	??_scanled+1,f
   617     07C2  2FBF               	goto	u347
   618     07C3  0000               	nop
   619     07C4                     l795:
   620                           
   621                           ;bai 3.c: 37:         PORTCbits.RC1=1;
   622     07C4  1283               	bcf	3,5	;RP0=0, select bank0
   623     07C5  1303               	bcf	3,6	;RP1=0, select bank0
   624     07C6  1487               	bsf	7,1	;volatile
   625     07C7                     l797:
   626                           
   627                           ;bai 3.c: 39:         PORTD=ma[dv];
   628     07C7  0822               	movf	scanled@dv,w
   629     07C8  3E2D               	addlw	(low (_ma| 0))& (0+255)
   630     07C9  0084               	movwf	4
   631     07CA  1383               	bcf	3,7	;select IRP bank0
   632     07CB  0800               	movf	0,w
   633     07CC  0088               	movwf	8	;volatile
   634     07CD                     l799:
   635                           
   636                           ;bai 3.c: 40:         PORTCbits.RC4=0;
   637     07CD  1207               	bcf	7,4	;volatile
   638                           
   639                           ;bai 3.c: 41:         _delay((unsigned long)((5)*(16000000/4000.0)));
   640     07CE  301A               	movlw	26
   641     07CF  00FB               	movwf	??_scanled+1
   642     07D0  30F8               	movlw	248
   643     07D1  00FA               	movwf	??_scanled
   644     07D2                     u357:
   645     07D2  0BFA               	decfsz	??_scanled,f
   646     07D3  2FD2               	goto	u357
   647     07D4  0BFB               	decfsz	??_scanled+1,f
   648     07D5  2FD2               	goto	u357
   649     07D6  0000               	nop
   650     07D7                     l801:
   651                           
   652                           ;bai 3.c: 42:         PORTCbits.RC4=1;
   653     07D7  1283               	bcf	3,5	;RP0=0, select bank0
   654     07D8  1303               	bcf	3,6	;RP1=0, select bank0
   655     07D9  1607               	bsf	7,4	;volatile
   656                           
   657                           ;bai 3.c: 43:     }
   658     07DA  3001               	movlw	1
   659     07DB  07A4               	addwf	scanled@y,f
   660     07DC  1803               	skipnc
   661     07DD  0AA5               	incf	scanled@y+1,f
   662     07DE  3000               	movlw	0
   663     07DF  07A5               	addwf	scanled@y+1,f
   664     07E0                     l803:
   665     07E0  0825               	movf	scanled@y+1,w
   666     07E1  3A80               	xorlw	128
   667     07E2  00FF               	movwf	btemp+1
   668     07E3  3080               	movlw	128
   669     07E4  027F               	subwf	btemp+1,w
   670     07E5  1D03               	skipz
   671     07E6  2FE9               	goto	u305
   672     07E7  3064               	movlw	100
   673     07E8  0224               	subwf	scanled@y,w
   674     07E9                     u305:
   675     07E9  1C03               	skipc
   676     07EA  2FEC               	goto	u301
   677     07EB  2FED               	goto	u300
   678     07EC                     u301:
   679     07EC  2FB2               	goto	l789
   680     07ED                     u300:
   681     07ED                     l23:
   682     07ED  0008               	return
   683     07EE                     __end_of_scanled:
   684                           
   685                           	psect	text2
   686     06AB                     __ptext2:	
   687 ;; *************** function ___lwmod *****************
   688 ;; Defined at:
   689 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;  divisor         2    0[COMMON] unsigned int 
   692 ;;  dividend        2    2[COMMON] unsigned int 
   693 ;; Auto vars:     Size  Location     Type
   694 ;;  counter         1    5[COMMON] unsigned char 
   695 ;; Return value:  Size  Location     Type
   696 ;;                  2    0[COMMON] unsigned int 
   697 ;; Registers used:
   698 ;;		wreg, status,2, status,0
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   704 ;;      Params:         4       0       0       0       0
   705 ;;      Locals:         1       0       0       0       0
   706 ;;      Temps:          1       0       0       0       0
   707 ;;      Totals:         6       0       0       0       0
   708 ;;Total ram usage:        6 bytes
   709 ;; Hardware stack levels used: 1
   710 ;; This function calls:
   711 ;;		Nothing
   712 ;; This function is called by:
   713 ;;		_scanled
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717     06AB                     ___lwmod:	
   718                           ;psect for function ___lwmod
   719                           
   720     06AB                     l759:	
   721                           ;incstack = 0
   722                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   723                           
   724     06AB  0870               	movf	___lwmod@divisor,w
   725     06AC  0471               	iorwf	___lwmod@divisor+1,w
   726     06AD  1903               	btfsc	3,2
   727     06AE  2EB0               	goto	u241
   728     06AF  2EB1               	goto	u240
   729     06B0                     u241:
   730     06B0  2EE0               	goto	l777
   731     06B1                     u240:
   732     06B1                     l761:
   733     06B1  01F5               	clrf	___lwmod@counter
   734     06B2  0AF5               	incf	___lwmod@counter,f
   735     06B3  2EBF               	goto	l767
   736     06B4                     l763:
   737     06B4  3001               	movlw	1
   738     06B5                     u255:
   739     06B5  1003               	clrc
   740     06B6  0DF0               	rlf	___lwmod@divisor,f
   741     06B7  0DF1               	rlf	___lwmod@divisor+1,f
   742     06B8  3EFF               	addlw	-1
   743     06B9  1D03               	skipz
   744     06BA  2EB5               	goto	u255
   745     06BB                     l765:
   746     06BB  3001               	movlw	1
   747     06BC  00F4               	movwf	??___lwmod
   748     06BD  0874               	movf	??___lwmod,w
   749     06BE  07F5               	addwf	___lwmod@counter,f
   750     06BF                     l767:
   751     06BF  1FF1               	btfss	___lwmod@divisor+1,7
   752     06C0  2EC2               	goto	u261
   753     06C1  2EC3               	goto	u260
   754     06C2                     u261:
   755     06C2  2EB4               	goto	l763
   756     06C3                     u260:
   757     06C3                     l769:
   758     06C3  0871               	movf	___lwmod@divisor+1,w
   759     06C4  0273               	subwf	___lwmod@dividend+1,w
   760     06C5  1D03               	skipz
   761     06C6  2EC9               	goto	u275
   762     06C7  0870               	movf	___lwmod@divisor,w
   763     06C8  0272               	subwf	___lwmod@dividend,w
   764     06C9                     u275:
   765     06C9  1C03               	skipc
   766     06CA  2ECC               	goto	u271
   767     06CB  2ECD               	goto	u270
   768     06CC                     u271:
   769     06CC  2ED3               	goto	l773
   770     06CD                     u270:
   771     06CD                     l771:
   772     06CD  0870               	movf	___lwmod@divisor,w
   773     06CE  02F2               	subwf	___lwmod@dividend,f
   774     06CF  0871               	movf	___lwmod@divisor+1,w
   775     06D0  1C03               	skipc
   776     06D1  03F3               	decf	___lwmod@dividend+1,f
   777     06D2  02F3               	subwf	___lwmod@dividend+1,f
   778     06D3                     l773:
   779     06D3  3001               	movlw	1
   780     06D4                     u285:
   781     06D4  1003               	clrc
   782     06D5  0CF1               	rrf	___lwmod@divisor+1,f
   783     06D6  0CF0               	rrf	___lwmod@divisor,f
   784     06D7  3EFF               	addlw	-1
   785     06D8  1D03               	skipz
   786     06D9  2ED4               	goto	u285
   787     06DA                     l775:
   788     06DA  3001               	movlw	1
   789     06DB  02F5               	subwf	___lwmod@counter,f
   790     06DC  1D03               	btfss	3,2
   791     06DD  2EDF               	goto	u291
   792     06DE  2EE0               	goto	u290
   793     06DF                     u291:
   794     06DF  2EC3               	goto	l769
   795     06E0                     u290:
   796     06E0                     l777:
   797     06E0  0873               	movf	___lwmod@dividend+1,w
   798     06E1  00F1               	movwf	?___lwmod+1
   799     06E2  0872               	movf	___lwmod@dividend,w
   800     06E3  00F0               	movwf	?___lwmod
   801     06E4                     l403:
   802     06E4  0008               	return
   803     06E5                     __end_of___lwmod:
   804                           
   805                           	psect	text3
   806     06E5                     __ptext3:	
   807 ;; *************** function ___lwdiv *****************
   808 ;; Defined at:
   809 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;  divisor         2    0[COMMON] unsigned int 
   812 ;;  dividend        2    2[COMMON] unsigned int 
   813 ;; Auto vars:     Size  Location     Type
   814 ;;  quotient        2    5[COMMON] unsigned int 
   815 ;;  counter         1    7[COMMON] unsigned char 
   816 ;; Return value:  Size  Location     Type
   817 ;;                  2    0[COMMON] unsigned int 
   818 ;; Registers used:
   819 ;;		wreg, status,2, status,0
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   825 ;;      Params:         4       0       0       0       0
   826 ;;      Locals:         3       0       0       0       0
   827 ;;      Temps:          1       0       0       0       0
   828 ;;      Totals:         8       0       0       0       0
   829 ;;Total ram usage:        8 bytes
   830 ;; Hardware stack levels used: 1
   831 ;; This function calls:
   832 ;;		Nothing
   833 ;; This function is called by:
   834 ;;		_scanled
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838     06E5                     ___lwdiv:	
   839                           ;psect for function ___lwdiv
   840                           
   841     06E5                     l733:	
   842                           ;incstack = 0
   843                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   844                           
   845     06E5  01F5               	clrf	___lwdiv@quotient
   846     06E6  01F6               	clrf	___lwdiv@quotient+1
   847     06E7                     l735:
   848     06E7  0870               	movf	___lwdiv@divisor,w
   849     06E8  0471               	iorwf	___lwdiv@divisor+1,w
   850     06E9  1903               	btfsc	3,2
   851     06EA  2EEC               	goto	u171
   852     06EB  2EED               	goto	u170
   853     06EC                     u171:
   854     06EC  2F24               	goto	l755
   855     06ED                     u170:
   856     06ED                     l737:
   857     06ED  01F7               	clrf	___lwdiv@counter
   858     06EE  0AF7               	incf	___lwdiv@counter,f
   859     06EF  2EFB               	goto	l743
   860     06F0                     l739:
   861     06F0  3001               	movlw	1
   862     06F1                     u185:
   863     06F1  1003               	clrc
   864     06F2  0DF0               	rlf	___lwdiv@divisor,f
   865     06F3  0DF1               	rlf	___lwdiv@divisor+1,f
   866     06F4  3EFF               	addlw	-1
   867     06F5  1D03               	skipz
   868     06F6  2EF1               	goto	u185
   869     06F7                     l741:
   870     06F7  3001               	movlw	1
   871     06F8  00F4               	movwf	??___lwdiv
   872     06F9  0874               	movf	??___lwdiv,w
   873     06FA  07F7               	addwf	___lwdiv@counter,f
   874     06FB                     l743:
   875     06FB  1FF1               	btfss	___lwdiv@divisor+1,7
   876     06FC  2EFE               	goto	u191
   877     06FD  2EFF               	goto	u190
   878     06FE                     u191:
   879     06FE  2EF0               	goto	l739
   880     06FF                     u190:
   881     06FF                     l745:
   882     06FF  3001               	movlw	1
   883     0700                     u205:
   884     0700  1003               	clrc
   885     0701  0DF5               	rlf	___lwdiv@quotient,f
   886     0702  0DF6               	rlf	___lwdiv@quotient+1,f
   887     0703  3EFF               	addlw	-1
   888     0704  1D03               	skipz
   889     0705  2F00               	goto	u205
   890     0706  0871               	movf	___lwdiv@divisor+1,w
   891     0707  0273               	subwf	___lwdiv@dividend+1,w
   892     0708  1D03               	skipz
   893     0709  2F0C               	goto	u215
   894     070A  0870               	movf	___lwdiv@divisor,w
   895     070B  0272               	subwf	___lwdiv@dividend,w
   896     070C                     u215:
   897     070C  1C03               	skipc
   898     070D  2F0F               	goto	u211
   899     070E  2F10               	goto	u210
   900     070F                     u211:
   901     070F  2F17               	goto	l751
   902     0710                     u210:
   903     0710                     l747:
   904     0710  0870               	movf	___lwdiv@divisor,w
   905     0711  02F2               	subwf	___lwdiv@dividend,f
   906     0712  0871               	movf	___lwdiv@divisor+1,w
   907     0713  1C03               	skipc
   908     0714  03F3               	decf	___lwdiv@dividend+1,f
   909     0715  02F3               	subwf	___lwdiv@dividend+1,f
   910     0716                     l749:
   911     0716  1475               	bsf	___lwdiv@quotient,0
   912     0717                     l751:
   913     0717  3001               	movlw	1
   914     0718                     u225:
   915     0718  1003               	clrc
   916     0719  0CF1               	rrf	___lwdiv@divisor+1,f
   917     071A  0CF0               	rrf	___lwdiv@divisor,f
   918     071B  3EFF               	addlw	-1
   919     071C  1D03               	skipz
   920     071D  2F18               	goto	u225
   921     071E                     l753:
   922     071E  3001               	movlw	1
   923     071F  02F7               	subwf	___lwdiv@counter,f
   924     0720  1D03               	btfss	3,2
   925     0721  2F23               	goto	u231
   926     0722  2F24               	goto	u230
   927     0723                     u231:
   928     0723  2EFF               	goto	l745
   929     0724                     u230:
   930     0724                     l755:
   931     0724  0876               	movf	___lwdiv@quotient+1,w
   932     0725  00F1               	movwf	?___lwdiv+1
   933     0726  0875               	movf	___lwdiv@quotient,w
   934     0727  00F0               	movwf	?___lwdiv
   935     0728                     l393:
   936     0728  0008               	return
   937     0729                     __end_of___lwdiv:
   938     007E                     btemp	set	126	;btemp
   939     007E                     wtemp0	set	126
   940                           
   941                           	psect	idloc
   942                           
   943                           ;Config register IDLOC0 @ 0x2000
   944                           ;	unspecified, using default values
   945     2000                     	org	8192
   946     2000  3FFF               	dw	16383
   947                           
   948                           ;Config register IDLOC1 @ 0x2001
   949                           ;	unspecified, using default values
   950     2001                     	org	8193
   951     2001  3FFF               	dw	16383
   952                           
   953                           ;Config register IDLOC2 @ 0x2002
   954                           ;	unspecified, using default values
   955     2002                     	org	8194
   956     2002  3FFF               	dw	16383
   957                           
   958                           ;Config register IDLOC3 @ 0x2003
   959                           ;	unspecified, using default values
   960     2003                     	org	8195
   961     2003  3FFF               	dw	16383
   962                           
   963                           	psect	config
   964                           
   965                           ;Config register CONFIG @ 0x2007
   966                           ;	Oscillator Selection bits
   967                           ;	FOSC = HS, HS oscillator
   968                           ;	Watchdog Timer Enable bit
   969                           ;	WDTE = ON, WDT enabled
   970                           ;	Power-up Timer Enable bit
   971                           ;	PWRTE = OFF, PWRT disabled
   972                           ;	Brown-out Reset Enable bit
   973                           ;	BOREN = OFF, BOR disabled
   974                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   975                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   976                           ;	Data EEPROM Memory Code Protection bit
   977                           ;	CPD = OFF, Data EEPROM code protection off
   978                           ;	Flash Program Memory Write Enable bits
   979                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   980                           ;	In-Circuit Debugger Mode bit
   981                           ;	DEBUG = 0x1, unprogrammed default
   982                           ;	Flash Program Memory Code Protection bit
   983                           ;	CP = OFF, Code protection off
   984     2007                     	org	8199
   985     2007  3F3E               	dw	16190

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     13      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_scanled
    _scanled->___lwdiv

Critical Paths under _main in BANK0

    _main->_scanled

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     973
                                              6 BANK0      7     7      0
                            _scanled
 ---------------------------------------------------------------------------------
 (1) _scanled                                             10     8      2     837
                                              8 COMMON     4     2      2
                                              0 BANK0      6     6      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _scanled
     ___lwdiv
     ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      D      17       5       28.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      23      12        0.0%
ABS                  0      0      23       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Nov 25 13:41:13 2022

                      pc 0002                       l23 07ED                       _ma 002D  
                     fsr 0004                      l403 06E4                      l393 0728  
                    l801 07D7                      l803 07E0                      l811 0731  
                    l741 06F7                      l733 06E5                      l821 073E  
                    l813 0732                      l805 0729                      l751 0717  
                    l743 06FB                      l735 06E7                      l823 074D  
                    l807 072D                      l753 071E                      l745 06FF  
                    l737 06ED                      l761 06B1                      l833 0766  
                    l825 0755                      l809 0730                      l747 0710  
                    l739 06F0                      l755 0724                      l771 06CD  
                    l763 06B4                      l835 0771                      l827 0762  
                    l819 0736                      l749 0716                      l773 06D3  
                    l765 06BB                      l781 078A                      l837 0779  
                    l775 06DA                      l767 06BF                      l759 06AB  
                    l791 07BA                      l783 07B0                      l769 06C3  
                    l777 06E0                      l793 07BB                      l795 07C4  
                    l797 07C7                      l789 07B2                      l799 07CD  
                    u210 0710                      u211 070F                      u300 07ED  
                    u205 0700                      u301 07EC                      u230 0724  
                    u310 0762                      u231 0723                      u215 070C  
                    u311 0761                      u240 06B1                      u320 0786  
                    u225 0718                      u241 06B0                      u305 07E9  
                    u321 0785                      u170 06ED                      u171 06EC  
                    u315 075E                      u260 06C3                      u261 06C2  
                    u325 0782                      u190 06FF                      u270 06CD  
                    u191 06FE                      u271 06CC                      u255 06B5  
                    u185 06F1                      u337 0746                      u290 06E0  
                    u291 06DF                      u275 06C9                      u347 07BF  
                    u285 06D4                      u357 07D2                      fsr0 0004  
                    indf 0000                     _main 0729                     btemp 007E  
                   start 0000                    ?_main 0070          __end_of___lwdiv 0729  
        __end_of___lwmod 06E5                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088          __end_of_scanled 07EE                    main@i 0029  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07EE             __end_of_main 078A                   ??_main 0026  
              ??___lwdiv 0074                ??___lwmod 0074                ??_scanled 007A  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 068E  
             __pmaintext 0729                  ___lwdiv 06E5                  ___lwmod 06AB  
                __ptext1 078A                  __ptext2 06AB                  __ptext3 06E5  
                _scanled 078A     end_of_initialization 07FC                _PORTCbits 0007  
    start_initialization 07EE               init_fetch0 0698              __pdataBANK0 002D  
              ___latbits 0002            __pcstackBANK0 0020         ___lwdiv@dividend 0072  
               ?___lwdiv 0070                 ?___lwmod 0070                 ?_scanled 0078  
       ___lwdiv@quotient 0075                scanled@dv 0022          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0077                 main@i_75 002B                 init_ram0 069C  
               scanled@c 0020                 scanled@x 0078                 scanled@y 0024  
       ___lwmod@dividend 0072          ___lwmod@divisor 0070          ___lwmod@counter 0075  
