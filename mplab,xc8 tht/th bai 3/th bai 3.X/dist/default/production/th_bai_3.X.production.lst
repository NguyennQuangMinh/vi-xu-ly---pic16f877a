

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Nov 25 16:35:54 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0093                     	;# 
   100     0094                     	;# 
   101     0098                     	;# 
   102     0099                     	;# 
   103     009C                     	;# 
   104     009D                     	;# 
   105     009E                     	;# 
   106     009F                     	;# 
   107     010C                     	;# 
   108     010D                     	;# 
   109     010E                     	;# 
   110     010F                     	;# 
   111     018C                     	;# 
   112     018D                     	;# 
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     0008                     	;# 
   122     0009                     	;# 
   123     000A                     	;# 
   124     000B                     	;# 
   125     000C                     	;# 
   126     000D                     	;# 
   127     000E                     	;# 
   128     000E                     	;# 
   129     000F                     	;# 
   130     0010                     	;# 
   131     0011                     	;# 
   132     0012                     	;# 
   133     0013                     	;# 
   134     0014                     	;# 
   135     0015                     	;# 
   136     0015                     	;# 
   137     0016                     	;# 
   138     0017                     	;# 
   139     0018                     	;# 
   140     0019                     	;# 
   141     001A                     	;# 
   142     001B                     	;# 
   143     001B                     	;# 
   144     001C                     	;# 
   145     001D                     	;# 
   146     001E                     	;# 
   147     001F                     	;# 
   148     0081                     	;# 
   149     0085                     	;# 
   150     0086                     	;# 
   151     0087                     	;# 
   152     0088                     	;# 
   153     0089                     	;# 
   154     008C                     	;# 
   155     008D                     	;# 
   156     008E                     	;# 
   157     0091                     	;# 
   158     0092                     	;# 
   159     0093                     	;# 
   160     0094                     	;# 
   161     0098                     	;# 
   162     0099                     	;# 
   163     009C                     	;# 
   164     009D                     	;# 
   165     009E                     	;# 
   166     009F                     	;# 
   167     010C                     	;# 
   168     010D                     	;# 
   169     010E                     	;# 
   170     010F                     	;# 
   171     018C                     	;# 
   172     018D                     	;# 
   173                           
   174                           	psect	idataBANK0
   175     0626                     __pidataBANK0:
   176                           
   177                           ;initializer for _Ma
   178     0626  3440               	retlw	64
   179     0627  3479               	retlw	121
   180     0628  3424               	retlw	36
   181     0629  3430               	retlw	48
   182     062A  3419               	retlw	25
   183     062B  3412               	retlw	18
   184     062C  3402               	retlw	2
   185     062D  3478               	retlw	120
   186     062E  3400               	retlw	0
   187     062F  3410               	retlw	16
   188     0008                     _PORTDbits	set	8
   189     0006                     _PORTB	set	6
   190     003C                     _RC4	set	60
   191     0039                     _RC1	set	57
   192     0088                     _TRISD	set	136
   193     0087                     _TRISC	set	135
   194     0086                     _TRISB	set	134
   195                           
   196                           	psect	cinit
   197     07EE                     start_initialization:	
   198                           ; #config settings
   199                           
   200     07EE                     __initialization:
   201                           
   202                           ; Initialize objects allocated to BANK0
   203     07EE  1383               	bcf	3,7	;select IRP bank0
   204     07EF  3038               	movlw	low (__pdataBANK0+10)
   205     07F0  00FD               	movwf	btemp+-1
   206     07F1  3006               	movlw	high __pidataBANK0
   207     07F2  00FE               	movwf	btemp
   208     07F3  3026               	movlw	low __pidataBANK0
   209     07F4  00FF               	movwf	btemp+1
   210     07F5  302E               	movlw	low __pdataBANK0
   211     07F6  0084               	movwf	4
   212     07F7  120A  118A  2634  120A  118A  	fcall	init_ram0
   213     07FC                     end_of_initialization:	
   214                           ;End of C runtime variable initialization code
   215                           
   216     07FC                     __end_of__initialization:
   217     07FC  0183               	clrf	3
   218     07FD  120A  118A  2E9C   	ljmp	_main	;jump to C main() function
   219                           
   220                           	psect	dataBANK0
   221     002E                     __pdataBANK0:
   222     002E                     _Ma:
   223     002E                     	ds	10
   224                           
   225                           	psect	inittext
   226     0630                     init_fetch0:	
   227                           ;	Called with low address in FSR and high address in W
   228                           
   229     0630  087E               	movf	btemp,w
   230     0631  008A               	movwf	10
   231     0632  087F               	movf	btemp+1,w
   232     0633  0082               	movwf	2
   233     0634                     init_ram0:	
   234                           ;Called with:
   235                           ;	high address of idata address in btemp 
   236                           ;	low address of idata address in btemp+1 
   237                           ;	low address of data in FSR
   238                           ;	high address + 1 of data in btemp-1
   239                           
   240     0634  120A  118A  2630  120A  118A  	fcall	init_fetch0
   241     0639  0080               	movwf	0
   242     063A  0A84               	incf	4,f
   243     063B  0804               	movf	4,w
   244     063C  067D               	xorwf	btemp+-1,w
   245     063D  1903               	btfsc	3,2
   246     063E  3400               	retlw	0
   247     063F  0AFF               	incf	btemp+1,f
   248     0640  1903               	btfsc	3,2
   249     0641  0AFE               	incf	btemp,f
   250     0642  2E34               	goto	init_ram0
   251                           
   252                           	psect	cstackCOMMON
   253     0070                     __pcstackCOMMON:
   254     0070                     ?_main:
   255     0070                     ?___awdiv:	
   256                           ; 1 bytes @ 0x0
   257                           
   258     0070                     ?___awmod:	
   259                           ; 2 bytes @ 0x0
   260                           
   261     0070                     ___awdiv@divisor:	
   262                           ; 2 bytes @ 0x0
   263                           
   264     0070                     ___awmod@divisor:	
   265                           ; 2 bytes @ 0x0
   266                           
   267                           
   268                           ; 2 bytes @ 0x0
   269     0070                     	ds	2
   270     0072                     ___awdiv@dividend:
   271     0072                     ___awmod@dividend:	
   272                           ; 2 bytes @ 0x2
   273                           
   274                           
   275                           ; 2 bytes @ 0x2
   276     0072                     	ds	2
   277     0074                     ??___awdiv:
   278     0074                     ??___awmod:	
   279                           ; 1 bytes @ 0x4
   280                           
   281                           
   282                           ; 1 bytes @ 0x4
   283     0074                     	ds	1
   284     0075                     ___awdiv@counter:
   285     0075                     ___awmod@counter:	
   286                           ; 1 bytes @ 0x5
   287                           
   288                           
   289                           ; 1 bytes @ 0x5
   290     0075                     	ds	1
   291     0076                     ___awdiv@sign:
   292     0076                     ___awmod@sign:	
   293                           ; 1 bytes @ 0x6
   294                           
   295                           
   296                           ; 1 bytes @ 0x6
   297     0076                     	ds	1
   298     0077                     ___awdiv@quotient:
   299                           
   300                           ; 2 bytes @ 0x7
   301     0077                     	ds	2
   302     0079                     ?_quedled:
   303     0079                     quedled@x:	
   304                           ; 1 bytes @ 0x9
   305                           
   306                           
   307                           ; 2 bytes @ 0x9
   308     0079                     	ds	2
   309     007B                     ??_quedled:
   310                           
   311                           ; 1 bytes @ 0xB
   312     007B                     	ds	3
   313                           
   314                           	psect	cstackBANK0
   315     0020                     __pcstackBANK0:
   316     0020                     quedled@c:
   317                           
   318                           ; 2 bytes @ 0x0
   319     0020                     	ds	2
   320     0022                     quedled@dv:
   321                           
   322                           ; 2 bytes @ 0x2
   323     0022                     	ds	2
   324     0024                     quedled@y:
   325                           
   326                           ; 2 bytes @ 0x4
   327     0024                     	ds	2
   328     0026                     quedled@z:
   329                           
   330                           ; 2 bytes @ 0x6
   331     0026                     	ds	2
   332     0028                     ??_main:
   333                           
   334                           ; 1 bytes @ 0x8
   335     0028                     	ds	2
   336     002A                     main@k:
   337                           
   338                           ; 2 bytes @ 0xA
   339     002A                     	ds	2
   340     002C                     main@i:
   341                           
   342                           ; 2 bytes @ 0xC
   343     002C                     	ds	2
   344                           
   345                           	psect	maintext
   346     069C                     __pmaintext:	
   347 ;;
   348 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   349 ;;
   350 ;; *************** function _main *****************
   351 ;; Defined at:
   352 ;;		line 61 in file "th bai 3.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;		None
   355 ;; Auto vars:     Size  Location     Type
   356 ;;  k               2   10[BANK0 ] int 
   357 ;;  i               2   12[BANK0 ] int 
   358 ;; Return value:  Size  Location     Type
   359 ;;                  1    wreg      void 
   360 ;; Registers used:
   361 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   362 ;; Tracked objects:
   363 ;;		On entry : B00/0
   364 ;;		On exit  : 0/0
   365 ;;		Unchanged: 0/0
   366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   367 ;;      Params:         0       0       0       0       0
   368 ;;      Locals:         0       4       0       0       0
   369 ;;      Temps:          0       2       0       0       0
   370 ;;      Totals:         0       6       0       0       0
   371 ;;Total ram usage:        6 bytes
   372 ;; Hardware stack levels required when called: 2
   373 ;; This function calls:
   374 ;;		_quedled
   375 ;; This function is called by:
   376 ;;		Startup code after reset
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380     069C                     _main:	
   381                           ;psect for function _main
   382                           
   383     069C                     l901:	
   384                           ;incstack = 0
   385                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   386                           
   387                           
   388                           ;th bai 3.c: 62:     TRISB=0;
   389     069C  1683               	bsf	3,5	;RP0=1, select bank1
   390     069D  1303               	bcf	3,6	;RP1=0, select bank1
   391     069E  0186               	clrf	6	;volatile
   392                           
   393                           ;th bai 3.c: 63:     TRISC=0;
   394     069F  0187               	clrf	7	;volatile
   395     06A0                     l903:
   396                           
   397                           ;th bai 3.c: 64:     TRISD=1;
   398     06A0  3001               	movlw	1
   399     06A1  0088               	movwf	8	;volatile
   400     06A2                     l905:
   401                           
   402                           ;th bai 3.c: 66:     {;th bai 3.c: 67:         if(PORTDbits.RD5==0)
   403     06A2  1283               	bcf	3,5	;RP0=0, select bank0
   404     06A3  1303               	bcf	3,6	;RP1=0, select bank0
   405     06A4  1A88               	btfsc	8,5	;volatile
   406     06A5  2EA7               	goto	u491
   407     06A6  2EA8               	goto	u490
   408     06A7                     u491:
   409     06A7  2ECE               	goto	l919
   410     06A8                     u490:
   411     06A8                     l907:
   412                           
   413                           ;th bai 3.c: 68:         {;th bai 3.c: 69:             _delay((unsigned long)((2)*(16000
      +                          000/4000.0)));
   414     06A8  300B               	movlw	11
   415     06A9  1283               	bcf	3,5	;RP0=0, select bank0
   416     06AA  1303               	bcf	3,6	;RP1=0, select bank0
   417     06AB  00A9               	movwf	??_main+1
   418     06AC  3061               	movlw	97
   419     06AD  00A8               	movwf	??_main
   420     06AE                     u537:
   421     06AE  0BA8               	decfsz	??_main,f
   422     06AF  2EAE               	goto	u537
   423     06B0  0BA9               	decfsz	??_main+1,f
   424     06B1  2EAE               	goto	u537
   425     06B2  2EB3               	nop2
   426                           
   427                           ;th bai 3.c: 70:             for(int k=-9;k<0;k++)
   428     06B3  30F7               	movlw	247
   429     06B4  1283               	bcf	3,5	;RP0=0, select bank0
   430     06B5  1303               	bcf	3,6	;RP1=0, select bank0
   431     06B6  00AA               	movwf	main@k
   432     06B7  30FF               	movlw	255
   433     06B8  00AB               	movwf	main@k+1
   434     06B9                     l913:
   435                           
   436                           ;th bai 3.c: 71:             {;th bai 3.c: 72:                 quedled(k);
   437     06B9  082B               	movf	main@k+1,w
   438     06BA  00FA               	movwf	quedled@x+1
   439     06BB  082A               	movf	main@k,w
   440     06BC  00F9               	movwf	quedled@x
   441     06BD  120A  118A  2760  120A  118A  	fcall	_quedled
   442     06C2                     l915:
   443                           
   444                           ;th bai 3.c: 74:             }
   445     06C2  3001               	movlw	1
   446     06C3  1283               	bcf	3,5	;RP0=0, select bank0
   447     06C4  1303               	bcf	3,6	;RP1=0, select bank0
   448     06C5  07AA               	addwf	main@k,f
   449     06C6  1803               	skipnc
   450     06C7  0AAB               	incf	main@k+1,f
   451     06C8  3000               	movlw	0
   452     06C9  07AB               	addwf	main@k+1,f
   453     06CA                     l917:
   454     06CA  1BAB               	btfsc	main@k+1,7
   455     06CB  2ECD               	goto	u501
   456     06CC  2ECE               	goto	u500
   457     06CD                     u501:
   458     06CD  2EB9               	goto	l913
   459     06CE                     u500:
   460     06CE                     l919:
   461                           
   462                           ;th bai 3.c: 76:         for(int i=0;i<100;i++)
   463     06CE  01AC               	clrf	main@i
   464     06CF  01AD               	clrf	main@i+1
   465     06D0                     l925:
   466                           
   467                           ;th bai 3.c: 77:         {;th bai 3.c: 78:             quedled(i);
   468     06D0  1283               	bcf	3,5	;RP0=0, select bank0
   469     06D1  1303               	bcf	3,6	;RP1=0, select bank0
   470     06D2  082D               	movf	main@i+1,w
   471     06D3  00FA               	movwf	quedled@x+1
   472     06D4  082C               	movf	main@i,w
   473     06D5  00F9               	movwf	quedled@x
   474     06D6  120A  118A  2760  120A  118A  	fcall	_quedled
   475     06DB                     l927:
   476                           
   477                           ;th bai 3.c: 79:             if(PORTDbits.RD5==0)
   478     06DB  1283               	bcf	3,5	;RP0=0, select bank0
   479     06DC  1303               	bcf	3,6	;RP1=0, select bank0
   480     06DD  1A88               	btfsc	8,5	;volatile
   481     06DE  2EE0               	goto	u511
   482     06DF  2EE1               	goto	u510
   483     06E0                     u511:
   484     06E0  2EE2               	goto	l931
   485     06E1                     u510:
   486     06E1  2EA2               	goto	l905
   487     06E2                     l931:
   488                           
   489                           ;th bai 3.c: 81:         }
   490     06E2  3001               	movlw	1
   491     06E3  07AC               	addwf	main@i,f
   492     06E4  1803               	skipnc
   493     06E5  0AAD               	incf	main@i+1,f
   494     06E6  3000               	movlw	0
   495     06E7  07AD               	addwf	main@i+1,f
   496     06E8                     l933:
   497     06E8  082D               	movf	main@i+1,w
   498     06E9  3A80               	xorlw	128
   499     06EA  00FF               	movwf	btemp+1
   500     06EB  3080               	movlw	128
   501     06EC  027F               	subwf	btemp+1,w
   502     06ED  1D03               	skipz
   503     06EE  2EF1               	goto	u525
   504     06EF  3064               	movlw	100
   505     06F0  022C               	subwf	main@i,w
   506     06F1                     u525:
   507     06F1  1C03               	skipc
   508     06F2  2EF4               	goto	u521
   509     06F3  2EF5               	goto	u520
   510     06F4                     u521:
   511     06F4  2ED0               	goto	l925
   512     06F5                     u520:
   513     06F5  2EA2               	goto	l905
   514     06F6  120A  118A  2800   	ljmp	start
   515     06F9                     __end_of_main:
   516                           
   517                           	psect	text1
   518     0760                     __ptext1:	
   519 ;; *************** function _quedled *****************
   520 ;; Defined at:
   521 ;;		line 26 in file "th bai 3.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;  x               2    9[COMMON] int 
   524 ;; Auto vars:     Size  Location     Type
   525 ;;  z               2    6[BANK0 ] int 
   526 ;;  y               2    4[BANK0 ] int 
   527 ;;  dv              2    2[BANK0 ] int 
   528 ;;  c               2    0[BANK0 ] int 
   529 ;; Return value:  Size  Location     Type
   530 ;;                  1    wreg      void 
   531 ;; Registers used:
   532 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   538 ;;      Params:         2       0       0       0       0
   539 ;;      Locals:         0       8       0       0       0
   540 ;;      Temps:          3       0       0       0       0
   541 ;;      Totals:         5       8       0       0       0
   542 ;;Total ram usage:       13 bytes
   543 ;; Hardware stack levels used: 1
   544 ;; Hardware stack levels required when called: 1
   545 ;; This function calls:
   546 ;;		___awdiv
   547 ;;		___awmod
   548 ;; This function is called by:
   549 ;;		_main
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553     0760                     _quedled:	
   554                           ;psect for function _quedled
   555                           
   556     0760                     l865:	
   557                           ;incstack = 0
   558                           ; Regs used in _quedled: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   559                           
   560                           
   561                           ;th bai 3.c: 26: void quedled(int x);th bai 3.c: 27: {;th bai 3.c: 28:     int c,dv;;th 
      +                          bai 3.c: 29:     if(x<0)
   562     0760  1FFA               	btfss	quedled@x+1,7
   563     0761  2F63               	goto	u461
   564     0762  2F64               	goto	u460
   565     0763                     u461:
   566     0763  2F86               	goto	l877
   567     0764                     u460:
   568     0764                     l867:
   569                           
   570                           ;th bai 3.c: 30:     {;th bai 3.c: 31:         int y=-x;
   571     0764  0979               	comf	quedled@x,w
   572     0765  00FB               	movwf	??_quedled
   573     0766  097A               	comf	quedled@x+1,w
   574     0767  00FC               	movwf	??_quedled+1
   575     0768  0AFB               	incf	??_quedled,f
   576     0769  1903               	skipnz
   577     076A  0AFC               	incf	??_quedled+1,f
   578     076B  087B               	movf	??_quedled,w
   579     076C  1283               	bcf	3,5	;RP0=0, select bank0
   580     076D  1303               	bcf	3,6	;RP1=0, select bank0
   581     076E  00A4               	movwf	quedled@y
   582     076F  087C               	movf	??_quedled+1,w
   583     0770  00A5               	movwf	quedled@y+1
   584     0771                     l869:
   585                           
   586                           ;th bai 3.c: 32:         RC1=0;
   587     0771  1087               	bcf	7,1	;volatile
   588     0772                     l871:
   589                           
   590                           ;th bai 3.c: 33:         RC4=0;
   591     0772  1207               	bcf	7,4	;volatile
   592     0773                     l873:
   593                           
   594                           ;th bai 3.c: 34:         PORTB=Ma[y];
   595     0773  0824               	movf	quedled@y,w
   596     0774  3E2E               	addlw	(low (_Ma| 0))& (0+255)
   597     0775  0084               	movwf	4
   598     0776  1383               	bcf	3,7	;select IRP bank0
   599     0777  0800               	movf	0,w
   600     0778  0086               	movwf	6	;volatile
   601     0779                     l875:
   602                           
   603                           ;th bai 3.c: 35:         _delay((unsigned long)((1000)*(16000000/4000.0)));
   604     0779  3015               	movlw	21
   605     077A  00FD               	movwf	??_quedled+2
   606     077B  304B               	movlw	75
   607     077C  00FC               	movwf	??_quedled+1
   608     077D  30BE               	movlw	190
   609     077E  00FB               	movwf	??_quedled
   610     077F                     u547:
   611     077F  0BFB               	decfsz	??_quedled,f
   612     0780  2F7F               	goto	u547
   613     0781  0BFC               	decfsz	??_quedled+1,f
   614     0782  2F7F               	goto	u547
   615     0783  0BFD               	decfsz	??_quedled+2,f
   616     0784  2F7F               	goto	u547
   617     0785  0000               	nop
   618     0786                     l877:
   619                           
   620                           ;th bai 3.c: 37:     if(x>=0)
   621     0786  1BFA               	btfsc	quedled@x+1,7
   622     0787  2F89               	goto	u471
   623     0788  2F8A               	goto	u470
   624     0789                     u471:
   625     0789  2FED               	goto	l25
   626     078A                     u470:
   627     078A                     l879:
   628                           
   629                           ;th bai 3.c: 38:     {;th bai 3.c: 39:         c=x/10;
   630     078A  300A               	movlw	10
   631     078B  00F0               	movwf	___awdiv@divisor
   632     078C  3000               	movlw	0
   633     078D  00F1               	movwf	___awdiv@divisor+1
   634     078E  087A               	movf	quedled@x+1,w
   635     078F  00F3               	movwf	___awdiv@dividend+1
   636     0790  0879               	movf	quedled@x,w
   637     0791  00F2               	movwf	___awdiv@dividend
   638     0792  120A  118A  26F9  120A  118A  	fcall	___awdiv
   639     0797  0871               	movf	?___awdiv+1,w
   640     0798  1283               	bcf	3,5	;RP0=0, select bank0
   641     0799  1303               	bcf	3,6	;RP1=0, select bank0
   642     079A  00A1               	movwf	quedled@c+1
   643     079B  0870               	movf	?___awdiv,w
   644     079C  00A0               	movwf	quedled@c
   645                           
   646                           ;th bai 3.c: 40:         dv=x%10;
   647     079D  300A               	movlw	10
   648     079E  00F0               	movwf	___awmod@divisor
   649     079F  3000               	movlw	0
   650     07A0  00F1               	movwf	___awmod@divisor+1
   651     07A1  087A               	movf	quedled@x+1,w
   652     07A2  00F3               	movwf	___awmod@dividend+1
   653     07A3  0879               	movf	quedled@x,w
   654     07A4  00F2               	movwf	___awmod@dividend
   655     07A5  120A  118A  2643  120A  118A  	fcall	___awmod
   656     07AA  0871               	movf	?___awmod+1,w
   657     07AB  1283               	bcf	3,5	;RP0=0, select bank0
   658     07AC  1303               	bcf	3,6	;RP1=0, select bank0
   659     07AD  00A3               	movwf	quedled@dv+1
   660     07AE  0870               	movf	?___awmod,w
   661     07AF  00A2               	movwf	quedled@dv
   662     07B0                     l881:
   663                           
   664                           ;th bai 3.c: 42:         for(int z=0;z<100;z++)
   665     07B0  01A6               	clrf	quedled@z
   666     07B1  01A7               	clrf	quedled@z+1
   667     07B2                     l23:
   668                           
   669                           ;th bai 3.c: 43:         {;th bai 3.c: 44:             RC1=0;
   670     07B2  1283               	bcf	3,5	;RP0=0, select bank0
   671     07B3  1303               	bcf	3,6	;RP1=0, select bank0
   672     07B4  1087               	bcf	7,1	;volatile
   673     07B5                     l887:
   674                           
   675                           ;th bai 3.c: 45:             PORTB=Ma[c];
   676     07B5  0820               	movf	quedled@c,w
   677     07B6  3E2E               	addlw	(low (_Ma| 0))& (0+255)
   678     07B7  0084               	movwf	4
   679     07B8  1383               	bcf	3,7	;select IRP bank0
   680     07B9  0800               	movf	0,w
   681     07BA  0086               	movwf	6	;volatile
   682     07BB                     l889:
   683                           
   684                           ;th bai 3.c: 46:             _delay((unsigned long)((5)*(16000000/4000.0)));
   685     07BB  301A               	movlw	26
   686     07BC  00FC               	movwf	??_quedled+1
   687     07BD  30F8               	movlw	248
   688     07BE  00FB               	movwf	??_quedled
   689     07BF                     u557:
   690     07BF  0BFB               	decfsz	??_quedled,f
   691     07C0  2FBF               	goto	u557
   692     07C1  0BFC               	decfsz	??_quedled+1,f
   693     07C2  2FBF               	goto	u557
   694     07C3  0000               	nop
   695     07C4                     l891:
   696                           
   697                           ;th bai 3.c: 47:             RC1=1;
   698     07C4  1283               	bcf	3,5	;RP0=0, select bank0
   699     07C5  1303               	bcf	3,6	;RP1=0, select bank0
   700     07C6  1487               	bsf	7,1	;volatile
   701     07C7                     l893:
   702                           
   703                           ;th bai 3.c: 48:             RC4=0;
   704     07C7  1207               	bcf	7,4	;volatile
   705     07C8                     l895:
   706                           
   707                           ;th bai 3.c: 49:             PORTB=Ma[dv];
   708     07C8  0822               	movf	quedled@dv,w
   709     07C9  3E2E               	addlw	(low (_Ma| 0))& (0+255)
   710     07CA  0084               	movwf	4
   711     07CB  1383               	bcf	3,7	;select IRP bank0
   712     07CC  0800               	movf	0,w
   713     07CD  0086               	movwf	6	;volatile
   714                           
   715                           ;th bai 3.c: 50:             _delay((unsigned long)((5)*(16000000/4000.0)));
   716     07CE  301A               	movlw	26
   717     07CF  00FC               	movwf	??_quedled+1
   718     07D0  30F8               	movlw	248
   719     07D1  00FB               	movwf	??_quedled
   720     07D2                     u567:
   721     07D2  0BFB               	decfsz	??_quedled,f
   722     07D3  2FD2               	goto	u567
   723     07D4  0BFC               	decfsz	??_quedled+1,f
   724     07D5  2FD2               	goto	u567
   725     07D6  0000               	nop
   726     07D7                     l897:
   727                           
   728                           ;th bai 3.c: 51:             RC4=1;
   729     07D7  1283               	bcf	3,5	;RP0=0, select bank0
   730     07D8  1303               	bcf	3,6	;RP1=0, select bank0
   731     07D9  1607               	bsf	7,4	;volatile
   732                           
   733                           ;th bai 3.c: 54:         }
   734     07DA  3001               	movlw	1
   735     07DB  07A6               	addwf	quedled@z,f
   736     07DC  1803               	skipnc
   737     07DD  0AA7               	incf	quedled@z+1,f
   738     07DE  3000               	movlw	0
   739     07DF  07A7               	addwf	quedled@z+1,f
   740     07E0                     l899:
   741     07E0  0827               	movf	quedled@z+1,w
   742     07E1  3A80               	xorlw	128
   743     07E2  00FF               	movwf	btemp+1
   744     07E3  3080               	movlw	128
   745     07E4  027F               	subwf	btemp+1,w
   746     07E5  1D03               	skipz
   747     07E6  2FE9               	goto	u485
   748     07E7  3064               	movlw	100
   749     07E8  0226               	subwf	quedled@z,w
   750     07E9                     u485:
   751     07E9  1C03               	skipc
   752     07EA  2FEC               	goto	u481
   753     07EB  2FED               	goto	u480
   754     07EC                     u481:
   755     07EC  2FB2               	goto	l23
   756     07ED                     u480:
   757     07ED                     l25:
   758     07ED  0008               	return
   759     07EE                     __end_of_quedled:
   760                           
   761                           	psect	text2
   762     0643                     __ptext2:	
   763 ;; *************** function ___awmod *****************
   764 ;; Defined at:
   765 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;  divisor         2    0[COMMON] int 
   768 ;;  dividend        2    2[COMMON] int 
   769 ;; Auto vars:     Size  Location     Type
   770 ;;  sign            1    6[COMMON] unsigned char 
   771 ;;  counter         1    5[COMMON] unsigned char 
   772 ;; Return value:  Size  Location     Type
   773 ;;                  2    0[COMMON] int 
   774 ;; Registers used:
   775 ;;		wreg, status,2, status,0
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   781 ;;      Params:         4       0       0       0       0
   782 ;;      Locals:         2       0       0       0       0
   783 ;;      Temps:          1       0       0       0       0
   784 ;;      Totals:         7       0       0       0       0
   785 ;;Total ram usage:        7 bytes
   786 ;; Hardware stack levels used: 1
   787 ;; This function calls:
   788 ;;		Nothing
   789 ;; This function is called by:
   790 ;;		_quedled
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794     0643                     ___awmod:	
   795                           ;psect for function ___awmod
   796                           
   797     0643                     l827:	
   798                           ;incstack = 0
   799                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   800                           
   801     0643  01F6               	clrf	___awmod@sign
   802     0644                     l829:
   803     0644  1FF3               	btfss	___awmod@dividend+1,7
   804     0645  2E47               	goto	u371
   805     0646  2E48               	goto	u370
   806     0647                     u371:
   807     0647  2E4F               	goto	l835
   808     0648                     u370:
   809     0648                     l831:
   810     0648  09F2               	comf	___awmod@dividend,f
   811     0649  09F3               	comf	___awmod@dividend+1,f
   812     064A  0AF2               	incf	___awmod@dividend,f
   813     064B  1903               	skipnz
   814     064C  0AF3               	incf	___awmod@dividend+1,f
   815     064D                     l833:
   816     064D  01F6               	clrf	___awmod@sign
   817     064E  0AF6               	incf	___awmod@sign,f
   818     064F                     l835:
   819     064F  1FF1               	btfss	___awmod@divisor+1,7
   820     0650  2E52               	goto	u381
   821     0651  2E53               	goto	u380
   822     0652                     u381:
   823     0652  2E58               	goto	l839
   824     0653                     u380:
   825     0653                     l837:
   826     0653  09F0               	comf	___awmod@divisor,f
   827     0654  09F1               	comf	___awmod@divisor+1,f
   828     0655  0AF0               	incf	___awmod@divisor,f
   829     0656  1903               	skipnz
   830     0657  0AF1               	incf	___awmod@divisor+1,f
   831     0658                     l839:
   832     0658  0870               	movf	___awmod@divisor,w
   833     0659  0471               	iorwf	___awmod@divisor+1,w
   834     065A  1903               	btfsc	3,2
   835     065B  2E5D               	goto	u391
   836     065C  2E5E               	goto	u390
   837     065D                     u391:
   838     065D  2E8D               	goto	l857
   839     065E                     u390:
   840     065E                     l841:
   841     065E  01F5               	clrf	___awmod@counter
   842     065F  0AF5               	incf	___awmod@counter,f
   843     0660  2E6C               	goto	l847
   844     0661                     l843:
   845     0661  3001               	movlw	1
   846     0662                     u405:
   847     0662  1003               	clrc
   848     0663  0DF0               	rlf	___awmod@divisor,f
   849     0664  0DF1               	rlf	___awmod@divisor+1,f
   850     0665  3EFF               	addlw	-1
   851     0666  1D03               	skipz
   852     0667  2E62               	goto	u405
   853     0668                     l845:
   854     0668  3001               	movlw	1
   855     0669  00F4               	movwf	??___awmod
   856     066A  0874               	movf	??___awmod,w
   857     066B  07F5               	addwf	___awmod@counter,f
   858     066C                     l847:
   859     066C  1FF1               	btfss	___awmod@divisor+1,7
   860     066D  2E6F               	goto	u411
   861     066E  2E70               	goto	u410
   862     066F                     u411:
   863     066F  2E61               	goto	l843
   864     0670                     u410:
   865     0670                     l849:
   866     0670  0871               	movf	___awmod@divisor+1,w
   867     0671  0273               	subwf	___awmod@dividend+1,w
   868     0672  1D03               	skipz
   869     0673  2E76               	goto	u425
   870     0674  0870               	movf	___awmod@divisor,w
   871     0675  0272               	subwf	___awmod@dividend,w
   872     0676                     u425:
   873     0676  1C03               	skipc
   874     0677  2E79               	goto	u421
   875     0678  2E7A               	goto	u420
   876     0679                     u421:
   877     0679  2E80               	goto	l853
   878     067A                     u420:
   879     067A                     l851:
   880     067A  0870               	movf	___awmod@divisor,w
   881     067B  02F2               	subwf	___awmod@dividend,f
   882     067C  0871               	movf	___awmod@divisor+1,w
   883     067D  1C03               	skipc
   884     067E  03F3               	decf	___awmod@dividend+1,f
   885     067F  02F3               	subwf	___awmod@dividend+1,f
   886     0680                     l853:
   887     0680  3001               	movlw	1
   888     0681                     u435:
   889     0681  1003               	clrc
   890     0682  0CF1               	rrf	___awmod@divisor+1,f
   891     0683  0CF0               	rrf	___awmod@divisor,f
   892     0684  3EFF               	addlw	-1
   893     0685  1D03               	skipz
   894     0686  2E81               	goto	u435
   895     0687                     l855:
   896     0687  3001               	movlw	1
   897     0688  02F5               	subwf	___awmod@counter,f
   898     0689  1D03               	btfss	3,2
   899     068A  2E8C               	goto	u441
   900     068B  2E8D               	goto	u440
   901     068C                     u441:
   902     068C  2E70               	goto	l849
   903     068D                     u440:
   904     068D                     l857:
   905     068D  0876               	movf	___awmod@sign,w
   906     068E  1903               	btfsc	3,2
   907     068F  2E91               	goto	u451
   908     0690  2E92               	goto	u450
   909     0691                     u451:
   910     0691  2E97               	goto	l861
   911     0692                     u450:
   912     0692                     l859:
   913     0692  09F2               	comf	___awmod@dividend,f
   914     0693  09F3               	comf	___awmod@dividend+1,f
   915     0694  0AF2               	incf	___awmod@dividend,f
   916     0695  1903               	skipnz
   917     0696  0AF3               	incf	___awmod@dividend+1,f
   918     0697                     l861:
   919     0697  0873               	movf	___awmod@dividend+1,w
   920     0698  00F1               	movwf	?___awmod+1
   921     0699  0872               	movf	___awmod@dividend,w
   922     069A  00F0               	movwf	?___awmod
   923     069B                     l291:
   924     069B  0008               	return
   925     069C                     __end_of___awmod:
   926                           
   927                           	psect	text3
   928     06F9                     __ptext3:	
   929 ;; *************** function ___awdiv *****************
   930 ;; Defined at:
   931 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;  divisor         2    0[COMMON] int 
   934 ;;  dividend        2    2[COMMON] int 
   935 ;; Auto vars:     Size  Location     Type
   936 ;;  quotient        2    7[COMMON] int 
   937 ;;  sign            1    6[COMMON] unsigned char 
   938 ;;  counter         1    5[COMMON] unsigned char 
   939 ;; Return value:  Size  Location     Type
   940 ;;                  2    0[COMMON] int 
   941 ;; Registers used:
   942 ;;		wreg, status,2, status,0
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   948 ;;      Params:         4       0       0       0       0
   949 ;;      Locals:         4       0       0       0       0
   950 ;;      Temps:          1       0       0       0       0
   951 ;;      Totals:         9       0       0       0       0
   952 ;;Total ram usage:        9 bytes
   953 ;; Hardware stack levels used: 1
   954 ;; This function calls:
   955 ;;		Nothing
   956 ;; This function is called by:
   957 ;;		_quedled
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961     06F9                     ___awdiv:	
   962                           ;psect for function ___awdiv
   963                           
   964     06F9                     l783:	
   965                           ;incstack = 0
   966                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   967                           
   968     06F9  01F6               	clrf	___awdiv@sign
   969     06FA                     l785:
   970     06FA  1FF1               	btfss	___awdiv@divisor+1,7
   971     06FB  2EFD               	goto	u271
   972     06FC  2EFE               	goto	u270
   973     06FD                     u271:
   974     06FD  2F05               	goto	l791
   975     06FE                     u270:
   976     06FE                     l787:
   977     06FE  09F0               	comf	___awdiv@divisor,f
   978     06FF  09F1               	comf	___awdiv@divisor+1,f
   979     0700  0AF0               	incf	___awdiv@divisor,f
   980     0701  1903               	skipnz
   981     0702  0AF1               	incf	___awdiv@divisor+1,f
   982     0703                     l789:
   983     0703  01F6               	clrf	___awdiv@sign
   984     0704  0AF6               	incf	___awdiv@sign,f
   985     0705                     l791:
   986     0705  1FF3               	btfss	___awdiv@dividend+1,7
   987     0706  2F08               	goto	u281
   988     0707  2F09               	goto	u280
   989     0708                     u281:
   990     0708  2F12               	goto	l797
   991     0709                     u280:
   992     0709                     l793:
   993     0709  09F2               	comf	___awdiv@dividend,f
   994     070A  09F3               	comf	___awdiv@dividend+1,f
   995     070B  0AF2               	incf	___awdiv@dividend,f
   996     070C  1903               	skipnz
   997     070D  0AF3               	incf	___awdiv@dividend+1,f
   998     070E                     l795:
   999     070E  3001               	movlw	1
  1000     070F  00F4               	movwf	??___awdiv
  1001     0710  0874               	movf	??___awdiv,w
  1002     0711  06F6               	xorwf	___awdiv@sign,f
  1003     0712                     l797:
  1004     0712  01F7               	clrf	___awdiv@quotient
  1005     0713  01F8               	clrf	___awdiv@quotient+1
  1006     0714                     l799:
  1007     0714  0870               	movf	___awdiv@divisor,w
  1008     0715  0471               	iorwf	___awdiv@divisor+1,w
  1009     0716  1903               	btfsc	3,2
  1010     0717  2F19               	goto	u291
  1011     0718  2F1A               	goto	u290
  1012     0719                     u291:
  1013     0719  2F51               	goto	l819
  1014     071A                     u290:
  1015     071A                     l801:
  1016     071A  01F5               	clrf	___awdiv@counter
  1017     071B  0AF5               	incf	___awdiv@counter,f
  1018     071C  2F28               	goto	l807
  1019     071D                     l803:
  1020     071D  3001               	movlw	1
  1021     071E                     u305:
  1022     071E  1003               	clrc
  1023     071F  0DF0               	rlf	___awdiv@divisor,f
  1024     0720  0DF1               	rlf	___awdiv@divisor+1,f
  1025     0721  3EFF               	addlw	-1
  1026     0722  1D03               	skipz
  1027     0723  2F1E               	goto	u305
  1028     0724                     l805:
  1029     0724  3001               	movlw	1
  1030     0725  00F4               	movwf	??___awdiv
  1031     0726  0874               	movf	??___awdiv,w
  1032     0727  07F5               	addwf	___awdiv@counter,f
  1033     0728                     l807:
  1034     0728  1FF1               	btfss	___awdiv@divisor+1,7
  1035     0729  2F2B               	goto	u311
  1036     072A  2F2C               	goto	u310
  1037     072B                     u311:
  1038     072B  2F1D               	goto	l803
  1039     072C                     u310:
  1040     072C                     l809:
  1041     072C  3001               	movlw	1
  1042     072D                     u325:
  1043     072D  1003               	clrc
  1044     072E  0DF7               	rlf	___awdiv@quotient,f
  1045     072F  0DF8               	rlf	___awdiv@quotient+1,f
  1046     0730  3EFF               	addlw	-1
  1047     0731  1D03               	skipz
  1048     0732  2F2D               	goto	u325
  1049     0733  0871               	movf	___awdiv@divisor+1,w
  1050     0734  0273               	subwf	___awdiv@dividend+1,w
  1051     0735  1D03               	skipz
  1052     0736  2F39               	goto	u335
  1053     0737  0870               	movf	___awdiv@divisor,w
  1054     0738  0272               	subwf	___awdiv@dividend,w
  1055     0739                     u335:
  1056     0739  1C03               	skipc
  1057     073A  2F3C               	goto	u331
  1058     073B  2F3D               	goto	u330
  1059     073C                     u331:
  1060     073C  2F44               	goto	l815
  1061     073D                     u330:
  1062     073D                     l811:
  1063     073D  0870               	movf	___awdiv@divisor,w
  1064     073E  02F2               	subwf	___awdiv@dividend,f
  1065     073F  0871               	movf	___awdiv@divisor+1,w
  1066     0740  1C03               	skipc
  1067     0741  03F3               	decf	___awdiv@dividend+1,f
  1068     0742  02F3               	subwf	___awdiv@dividend+1,f
  1069     0743                     l813:
  1070     0743  1477               	bsf	___awdiv@quotient,0
  1071     0744                     l815:
  1072     0744  3001               	movlw	1
  1073     0745                     u345:
  1074     0745  1003               	clrc
  1075     0746  0CF1               	rrf	___awdiv@divisor+1,f
  1076     0747  0CF0               	rrf	___awdiv@divisor,f
  1077     0748  3EFF               	addlw	-1
  1078     0749  1D03               	skipz
  1079     074A  2F45               	goto	u345
  1080     074B                     l817:
  1081     074B  3001               	movlw	1
  1082     074C  02F5               	subwf	___awdiv@counter,f
  1083     074D  1D03               	btfss	3,2
  1084     074E  2F50               	goto	u351
  1085     074F  2F51               	goto	u350
  1086     0750                     u351:
  1087     0750  2F2C               	goto	l809
  1088     0751                     u350:
  1089     0751                     l819:
  1090     0751  0876               	movf	___awdiv@sign,w
  1091     0752  1903               	btfsc	3,2
  1092     0753  2F55               	goto	u361
  1093     0754  2F56               	goto	u360
  1094     0755                     u361:
  1095     0755  2F5B               	goto	l823
  1096     0756                     u360:
  1097     0756                     l821:
  1098     0756  09F7               	comf	___awdiv@quotient,f
  1099     0757  09F8               	comf	___awdiv@quotient+1,f
  1100     0758  0AF7               	incf	___awdiv@quotient,f
  1101     0759  1903               	skipnz
  1102     075A  0AF8               	incf	___awdiv@quotient+1,f
  1103     075B                     l823:
  1104     075B  0878               	movf	___awdiv@quotient+1,w
  1105     075C  00F1               	movwf	?___awdiv+1
  1106     075D  0877               	movf	___awdiv@quotient,w
  1107     075E  00F0               	movwf	?___awdiv
  1108     075F                     l278:
  1109     075F  0008               	return
  1110     0760                     __end_of___awdiv:
  1111     007E                     btemp	set	126	;btemp
  1112     007E                     wtemp0	set	126
  1113                           
  1114                           	psect	idloc
  1115                           
  1116                           ;Config register IDLOC0 @ 0x2000
  1117                           ;	unspecified, using default values
  1118     2000                     	org	8192
  1119     2000  3FFF               	dw	16383
  1120                           
  1121                           ;Config register IDLOC1 @ 0x2001
  1122                           ;	unspecified, using default values
  1123     2001                     	org	8193
  1124     2001  3FFF               	dw	16383
  1125                           
  1126                           ;Config register IDLOC2 @ 0x2002
  1127                           ;	unspecified, using default values
  1128     2002                     	org	8194
  1129     2002  3FFF               	dw	16383
  1130                           
  1131                           ;Config register IDLOC3 @ 0x2003
  1132                           ;	unspecified, using default values
  1133     2003                     	org	8195
  1134     2003  3FFF               	dw	16383
  1135                           
  1136                           	psect	config
  1137                           
  1138                           ;Config register CONFIG @ 0x2007
  1139                           ;	Oscillator Selection bits
  1140                           ;	FOSC = HS, HS oscillator
  1141                           ;	Watchdog Timer Enable bit
  1142                           ;	WDTE = ON, WDT enabled
  1143                           ;	Power-up Timer Enable bit
  1144                           ;	PWRTE = OFF, PWRT disabled
  1145                           ;	Brown-out Reset Enable bit
  1146                           ;	BOREN = OFF, BOR disabled
  1147                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1148                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1149                           ;	Data EEPROM Memory Code Protection bit
  1150                           ;	CPD = OFF, Data EEPROM code protection off
  1151                           ;	Flash Program Memory Write Enable bits
  1152                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1153                           ;	In-Circuit Debugger Mode bit
  1154                           ;	DEBUG = 0x1, unprogrammed default
  1155                           ;	Flash Program Memory Code Protection bit
  1156                           ;	CP = OFF, Code protection off
  1157     2007                     	org	8199
  1158     2007  3F3E               	dw	16190

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     14      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_quedled
    _quedled->___awdiv

Critical Paths under _main in BANK0

    _main->_quedled

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    1413
                                              8 BANK0      6     6      0
                            _quedled
 ---------------------------------------------------------------------------------
 (1) _quedled                                             13    11      2    1277
                                              9 COMMON     5     3      2
                                              0 BANK0      8     8      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _quedled
     ___awdiv
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      E      18       5       30.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      26      12        0.0%
ABS                  0      0      26       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Nov 25 16:35:54 2022

                      pc 0002                       l23 07B2                       l25 07ED  
                     _Ma 002E             ___awdiv@sign 0076                       fsr 0004  
                    l291 069B                      l278 075F                      l801 071A  
                    l811 073D                      l803 071D                      l821 0756  
                    l813 0743                      l805 0724                      l901 069C  
                    l823 075B                      l815 0744                      l807 0728  
                    l831 0648                      l903 06A0                      l817 074B  
                    l809 072C                      l841 065E                      l833 064D  
                    l913 06B9                      l905 06A2                      l819 0751  
                    l851 067A                      l843 0661                      l835 064F  
                    l827 0643                      l931 06E2                      l915 06C2  
                    l907 06A8                      l861 0697                      l853 0680  
                    l845 0668                      l837 0653                      l829 0644  
                    l933 06E8                      l925 06D0                      l917 06CA  
                    l791 0705                      l783 06F9                      l855 0687  
                    l847 066C                      l839 0658                      l871 0772  
                    l927 06DB                      l919 06CE                      l793 0709  
                    l785 06FA                      l849 0670                      l857 068D  
                    l881 07B0                      l873 0773                      l865 0760  
                    l795 070E                      l787 06FE                      l859 0692  
                    l891 07C4                      l875 0779                      l867 0764  
                    l797 0712                      l789 0703                      l893 07C7  
                    l869 0771                      l877 0786                      l799 0714  
                    l895 07C8                      l887 07B5                      l879 078A  
                    l897 07D7                      l889 07BB                      l899 07E0  
                    _RC1 0039                      _RC4 003C                      u310 072C  
                    u311 072B                      u305 071E                      u330 073D  
                    u410 0670                      u331 073C                      u411 066F  
                    u420 067A                      u500 06CE                      u325 072D  
                    u421 0679                      u405 0662                      u501 06CD  
                    u350 0751                      u270 06FE                      u510 06E1  
                    u351 0750                      u335 0739                      u271 06FD  
                    u511 06E0                      u360 0756                      u280 0709  
                    u440 068D                      u520 06F5                      u361 0755  
                    u345 0745                      u281 0708                      u441 068C  
                    u425 0676                      u521 06F4                      u290 071A  
                    u450 0692                      u370 0648                      u291 0719  
                    u451 0691                      u435 0681                      u371 0647  
                    u380 0653                      u460 0764                      u381 0652  
                    u461 0763                      u525 06F1                      u390 065E  
                    u470 078A                      u391 065D                      u471 0789  
                    u480 07ED                      u481 07EC                      u537 06AE  
                    u490 06A8                      u547 077F                      u491 06A7  
                    u485 07E9                      u557 07BF                      u567 07D2  
                    fsr0 0004                      indf 0000             ___awmod@sign 0076  
                   _main 069C                     btemp 007E                     start 0000  
                  ?_main 0070          __end_of___awdiv 0760          __end_of___awmod 069C  
        ___awdiv@divisor 0070          ___awdiv@counter 0075                    _PORTB 0006  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  main@i 002C                    main@k 002A                    pclath 000A  
        __end_of_quedled 07EE                    status 0003                    wtemp0 007E  
        __initialization 07EE             __end_of_main 06F9                   ??_main 0028  
       ___awdiv@dividend 0072                ??___awdiv 0074                ??___awmod 0074  
       ___awdiv@quotient 0077          ___awmod@divisor 0070          ___awmod@counter 0075  
              ??_quedled 007B  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 0626               __pmaintext 069C                  ___awdiv 06F9  
                ___awmod 0643                  __ptext1 0760                  __ptext2 0643  
                __ptext3 06F9         ___awmod@dividend 0072                  _quedled 0760  
   end_of_initialization 07FC                _PORTDbits 0008      start_initialization 07EE  
             init_fetch0 0630              __pdataBANK0 002E                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0070                 ?___awmod 0070  
               ?_quedled 0079                quedled@dv 0022                 init_ram0 0634  
               quedled@c 0020                 quedled@x 0079                 quedled@y 0024  
               quedled@z 0026  
