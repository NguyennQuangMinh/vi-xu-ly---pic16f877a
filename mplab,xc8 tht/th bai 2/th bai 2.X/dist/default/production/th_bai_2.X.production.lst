

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Nov 24 22:36:57 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169                           
   170                           	psect	idataBANK0
   171     079F                     __pidataBANK0:
   172                           
   173                           ;initializer for _Ma
   174     079F  3440               	retlw	64
   175     07A0  3479               	retlw	121
   176     07A1  3424               	retlw	36
   177     07A2  3430               	retlw	48
   178     07A3  3419               	retlw	25
   179     07A4  3412               	retlw	18
   180     07A5  3402               	retlw	2
   181     07A6  3478               	retlw	120
   182     07A7  3400               	retlw	0
   183     07A8  3410               	retlw	16
   184     0006                     _PORTB	set	6
   185     0088                     _TRISD	set	136
   186     0087                     _TRISC	set	135
   187     0086                     _TRISB	set	134
   188                           
   189                           	psect	cinit
   190     07EE                     start_initialization:	
   191                           ; #config settings
   192                           
   193     07EE                     __initialization:
   194                           
   195                           ; Initialize objects allocated to BANK0
   196     07EE  1383               	bcf	3,7	;select IRP bank0
   197     07EF  302A               	movlw	low (__pdataBANK0+10)
   198     07F0  00FD               	movwf	btemp+-1
   199     07F1  3007               	movlw	high __pidataBANK0
   200     07F2  00FE               	movwf	btemp
   201     07F3  309F               	movlw	low __pidataBANK0
   202     07F4  00FF               	movwf	btemp+1
   203     07F5  3020               	movlw	low __pdataBANK0
   204     07F6  0084               	movwf	4
   205     07F7  120A  118A  27AD  120A  118A  	fcall	init_ram0
   206     07FC                     end_of_initialization:	
   207                           ;End of C runtime variable initialization code
   208                           
   209     07FC                     __end_of__initialization:
   210     07FC  0183               	clrf	3
   211     07FD  120A  118A  2FBC   	ljmp	_main	;jump to C main() function
   212                           
   213                           	psect	dataBANK0
   214     0020                     __pdataBANK0:
   215     0020                     _Ma:
   216     0020                     	ds	10
   217                           
   218                           	psect	inittext
   219     07A9                     init_fetch0:	
   220                           ;	Called with low address in FSR and high address in W
   221                           
   222     07A9  087E               	movf	btemp,w
   223     07AA  008A               	movwf	10
   224     07AB  087F               	movf	btemp+1,w
   225     07AC  0082               	movwf	2
   226     07AD                     init_ram0:	
   227                           ;Called with:
   228                           ;	high address of idata address in btemp 
   229                           ;	low address of idata address in btemp+1 
   230                           ;	low address of data in FSR
   231                           ;	high address + 1 of data in btemp-1
   232                           
   233     07AD  120A  118A  27A9  120A  118A  	fcall	init_fetch0
   234     07B2  0080               	movwf	0
   235     07B3  0A84               	incf	4,f
   236     07B4  0804               	movf	4,w
   237     07B5  067D               	xorwf	btemp+-1,w
   238     07B6  1903               	btfsc	3,2
   239     07B7  3400               	retlw	0
   240     07B8  0AFF               	incf	btemp+1,f
   241     07B9  1903               	btfsc	3,2
   242     07BA  0AFE               	incf	btemp,f
   243     07BB  2FAD               	goto	init_ram0
   244                           
   245                           	psect	cstackCOMMON
   246     0070                     __pcstackCOMMON:
   247     0070                     ?_main:
   248     0070                     ??_main:	
   249                           ; 1 bytes @ 0x0
   250                           
   251                           
   252                           ; 1 bytes @ 0x0
   253     0070                     	ds	3
   254     0073                     main@i:
   255                           
   256                           ; 2 bytes @ 0x3
   257     0073                     	ds	2
   258                           
   259                           	psect	maintext
   260     07BC                     __pmaintext:	
   261 ;;
   262 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   263 ;;
   264 ;; *************** function _main *****************
   265 ;; Defined at:
   266 ;;		line 30 in file "th bai 2.c"
   267 ;; Parameters:    Size  Location     Type
   268 ;;		None
   269 ;; Auto vars:     Size  Location     Type
   270 ;;  i               2    3[COMMON] int 
   271 ;; Return value:  Size  Location     Type
   272 ;;                  1    wreg      void 
   273 ;; Registers used:
   274 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   275 ;; Tracked objects:
   276 ;;		On entry : B00/0
   277 ;;		On exit  : 0/0
   278 ;;		Unchanged: 0/0
   279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   280 ;;      Params:         0       0       0       0       0
   281 ;;      Locals:         2       0       0       0       0
   282 ;;      Temps:          3       0       0       0       0
   283 ;;      Totals:         5       0       0       0       0
   284 ;;Total ram usage:        5 bytes
   285 ;; This function calls:
   286 ;;		Nothing
   287 ;; This function is called by:
   288 ;;		Startup code after reset
   289 ;; This function uses a non-reentrant model
   290 ;;
   291                           
   292     07BC                     _main:	
   293                           ;psect for function _main
   294                           
   295     07BC                     l628:	
   296                           ;incstack = 0
   297                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1]
   298                           
   299                           
   300                           ;th bai 2.c: 31:     TRISB=0;
   301     07BC  1683               	bsf	3,5	;RP0=1, select bank1
   302     07BD  1303               	bcf	3,6	;RP1=0, select bank1
   303     07BE  0186               	clrf	6	;volatile
   304                           
   305                           ;th bai 2.c: 32:     TRISC=0;
   306     07BF  0187               	clrf	7	;volatile
   307                           
   308                           ;th bai 2.c: 33:     TRISD=0;
   309     07C0  0188               	clrf	8	;volatile
   310     07C1                     l17:	
   311                           ;th bai 2.c: 34:     while(1)
   312                           
   313                           
   314                           ;th bai 2.c: 35:     {;th bai 2.c: 37:         for(int i=0;i<10;i++)
   315     07C1  01F3               	clrf	main@i
   316     07C2  01F4               	clrf	main@i+1
   317     07C3                     l634:
   318                           
   319                           ;th bai 2.c: 38:         {;th bai 2.c: 39:             PORTB=Ma[i];
   320     07C3  0873               	movf	main@i,w
   321     07C4  3E20               	addlw	(low (_Ma| 0))& (0+255)
   322     07C5  0084               	movwf	4
   323     07C6  1383               	bcf	3,7	;select IRP bank0
   324     07C7  0800               	movf	0,w
   325     07C8  1283               	bcf	3,5	;RP0=0, select bank0
   326     07C9  1303               	bcf	3,6	;RP1=0, select bank0
   327     07CA  0086               	movwf	6	;volatile
   328     07CB                     l636:
   329                           
   330                           ;th bai 2.c: 40:             _delay((unsigned long)((200)*(16000000/4000.0)));
   331     07CB  3005               	movlw	5
   332     07CC  00F2               	movwf	??_main+2
   333     07CD  300F               	movlw	15
   334     07CE  00F1               	movwf	??_main+1
   335     07CF  30F1               	movlw	241
   336     07D0  00F0               	movwf	??_main
   337     07D1                     u37:
   338     07D1  0BF0               	decfsz	??_main,f
   339     07D2  2FD1               	goto	u37
   340     07D3  0BF1               	decfsz	??_main+1,f
   341     07D4  2FD1               	goto	u37
   342     07D5  0BF2               	decfsz	??_main+2,f
   343     07D6  2FD1               	goto	u37
   344     07D7                     l638:
   345                           
   346                           ;th bai 2.c: 42:         }
   347     07D7  3001               	movlw	1
   348     07D8  07F3               	addwf	main@i,f
   349     07D9  1803               	skipnc
   350     07DA  0AF4               	incf	main@i+1,f
   351     07DB  3000               	movlw	0
   352     07DC  07F4               	addwf	main@i+1,f
   353     07DD                     l640:
   354     07DD  0874               	movf	main@i+1,w
   355     07DE  3A80               	xorlw	128
   356     07DF  00FF               	movwf	btemp+1
   357     07E0  3080               	movlw	128
   358     07E1  027F               	subwf	btemp+1,w
   359     07E2  1D03               	skipz
   360     07E3  2FE6               	goto	u25
   361     07E4  300A               	movlw	10
   362     07E5  0273               	subwf	main@i,w
   363     07E6                     u25:
   364     07E6  1C03               	skipc
   365     07E7  2FE9               	goto	u21
   366     07E8  2FEA               	goto	u20
   367     07E9                     u21:
   368     07E9  2FC3               	goto	l634
   369     07EA                     u20:
   370     07EA  2FC1               	goto	l17
   371     07EB  120A  118A  2800   	ljmp	start
   372     07EE                     __end_of_main:
   373     007E                     btemp	set	126	;btemp
   374     007E                     wtemp0	set	126
   375                           
   376                           	psect	idloc
   377                           
   378                           ;Config register IDLOC0 @ 0x2000
   379                           ;	unspecified, using default values
   380     2000                     	org	8192
   381     2000  3FFF               	dw	16383
   382                           
   383                           ;Config register IDLOC1 @ 0x2001
   384                           ;	unspecified, using default values
   385     2001                     	org	8193
   386     2001  3FFF               	dw	16383
   387                           
   388                           ;Config register IDLOC2 @ 0x2002
   389                           ;	unspecified, using default values
   390     2002                     	org	8194
   391     2002  3FFF               	dw	16383
   392                           
   393                           ;Config register IDLOC3 @ 0x2003
   394                           ;	unspecified, using default values
   395     2003                     	org	8195
   396     2003  3FFF               	dw	16383
   397                           
   398                           	psect	config
   399                           
   400                           ;Config register CONFIG @ 0x2007
   401                           ;	Oscillator Selection bits
   402                           ;	FOSC = HS, HS oscillator
   403                           ;	Watchdog Timer Enable bit
   404                           ;	WDTE = ON, WDT enabled
   405                           ;	Power-up Timer Enable bit
   406                           ;	PWRTE = OFF, PWRT disabled
   407                           ;	Brown-out Reset Enable bit
   408                           ;	BOREN = OFF, BOR disabled
   409                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   410                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   411                           ;	Data EEPROM Memory Code Protection bit
   412                           ;	CPD = OFF, Data EEPROM code protection off
   413                           ;	Flash Program Memory Write Enable bits
   414                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   415                           ;	In-Circuit Debugger Mode bit
   416                           ;	DEBUG = 0x1, unprogrammed default
   417                           ;	Flash Program Memory Code Protection bit
   418                           ;	CP = OFF, Code protection off
   419     2007                     	org	8199
   420     2007  3F3E               	dw	16190

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0      68
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       A       5       12.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       5       1       35.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       F      12        0.0%
ABS                  0      0       F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Nov 24 22:36:57 2022

                      pc 0002                       l17 07C1                       u20 07EA  
                     u21 07E9                       u25 07E6                       u37 07D1  
                     _Ma 0020                       fsr 0004                      l640 07DD  
                    l634 07C3                      l636 07CB                      l628 07BC  
                    l638 07D7                      fsr0 0004                      indf 0000  
                   _main 07BC                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTB 0006                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    main@i 0073  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07EE             __end_of_main 07EE                   ??_main 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 079F  
             __pmaintext 07BC     end_of_initialization 07FC      start_initialization 07EE  
             init_fetch0 07A9              __pdataBANK0 0020                ___latbits 0002  
               init_ram0 07AD  
