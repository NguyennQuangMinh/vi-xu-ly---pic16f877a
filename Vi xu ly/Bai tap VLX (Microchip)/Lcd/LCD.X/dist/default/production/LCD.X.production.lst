

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Sep 08 17:46:46 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.30
    35                           ; Generated 26/08/2020 GMT
    36                           ; 
    37                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F877A Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0098                     	;# 
   178  0099                     	;# 
   179  009C                     	;# 
   180  009D                     	;# 
   181  009E                     	;# 
   182  009F                     	;# 
   183  010C                     	;# 
   184  010D                     	;# 
   185  010E                     	;# 
   186  010F                     	;# 
   187  018C                     	;# 
   188  018D                     	;# 
   189  0000                     	;# 
   190  0001                     	;# 
   191  0002                     	;# 
   192  0003                     	;# 
   193  0004                     	;# 
   194  0005                     	;# 
   195  0006                     	;# 
   196  0007                     	;# 
   197  0008                     	;# 
   198  0009                     	;# 
   199  000A                     	;# 
   200  000B                     	;# 
   201  000C                     	;# 
   202  000D                     	;# 
   203  000E                     	;# 
   204  000E                     	;# 
   205  000F                     	;# 
   206  0010                     	;# 
   207  0011                     	;# 
   208  0012                     	;# 
   209  0013                     	;# 
   210  0014                     	;# 
   211  0015                     	;# 
   212  0015                     	;# 
   213  0016                     	;# 
   214  0017                     	;# 
   215  0018                     	;# 
   216  0019                     	;# 
   217  001A                     	;# 
   218  001B                     	;# 
   219  001B                     	;# 
   220  001C                     	;# 
   221  001D                     	;# 
   222  001E                     	;# 
   223  001F                     	;# 
   224  0081                     	;# 
   225  0085                     	;# 
   226  0086                     	;# 
   227  0087                     	;# 
   228  0088                     	;# 
   229  0089                     	;# 
   230  008C                     	;# 
   231  008D                     	;# 
   232  008E                     	;# 
   233  0091                     	;# 
   234  0092                     	;# 
   235  0093                     	;# 
   236  0094                     	;# 
   237  0098                     	;# 
   238  0099                     	;# 
   239  009C                     	;# 
   240  009D                     	;# 
   241  009E                     	;# 
   242  009F                     	;# 
   243  010C                     	;# 
   244  010D                     	;# 
   245  010E                     	;# 
   246  010F                     	;# 
   247  018C                     	;# 
   248  018D                     	;# 
   249  0000                     	;# 
   250  0001                     	;# 
   251  0002                     	;# 
   252  0003                     	;# 
   253  0004                     	;# 
   254  0005                     	;# 
   255  0006                     	;# 
   256  0007                     	;# 
   257  0008                     	;# 
   258  0009                     	;# 
   259  000A                     	;# 
   260  000B                     	;# 
   261  000C                     	;# 
   262  000D                     	;# 
   263  000E                     	;# 
   264  000E                     	;# 
   265  000F                     	;# 
   266  0010                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0013                     	;# 
   270  0014                     	;# 
   271  0015                     	;# 
   272  0015                     	;# 
   273  0016                     	;# 
   274  0017                     	;# 
   275  0018                     	;# 
   276  0019                     	;# 
   277  001A                     	;# 
   278  001B                     	;# 
   279  001B                     	;# 
   280  001C                     	;# 
   281  001D                     	;# 
   282  001E                     	;# 
   283  001F                     	;# 
   284  0081                     	;# 
   285  0085                     	;# 
   286  0086                     	;# 
   287  0087                     	;# 
   288  0088                     	;# 
   289  0089                     	;# 
   290  008C                     	;# 
   291  008D                     	;# 
   292  008E                     	;# 
   293  0091                     	;# 
   294  0092                     	;# 
   295  0093                     	;# 
   296  0094                     	;# 
   297  0098                     	;# 
   298  0099                     	;# 
   299  009C                     	;# 
   300  009D                     	;# 
   301  009E                     	;# 
   302  009F                     	;# 
   303  010C                     	;# 
   304  010D                     	;# 
   305  010E                     	;# 
   306  010F                     	;# 
   307  018C                     	;# 
   308  018D                     	;# 
   309                           
   310                           	psect	idataBANK1
   311  06F0                     __pidataBANK1:
   312                           
   313                           ;initializer for ___cgram
   314  06F0  340C               	retlw	12
   315  06F1  3412               	retlw	18
   316  06F2  3412               	retlw	18
   317  06F3  340C               	retlw	12
   318  06F4  3400               	retlw	0
   319  06F5  3400               	retlw	0
   320  06F6  3400               	retlw	0
   321  06F7  3400               	retlw	0
   322  06F8  3400               	retlw	0
   323  06F9  3404               	retlw	4
   324  06FA  340E               	retlw	14
   325  06FB  341F               	retlw	31
   326  06FC  340E               	retlw	14
   327  06FD  3404               	retlw	4
   328  06FE  3400               	retlw	0
   329  06FF  3400               	retlw	0
   330  0700  3404               	retlw	4
   331  0701  3404               	retlw	4
   332  0702  3404               	retlw	4
   333  0703  3404               	retlw	4
   334  0704  341F               	retlw	31
   335  0705  340E               	retlw	14
   336  0706  3404               	retlw	4
   337  0707  3400               	retlw	0
   338  0708  340A               	retlw	10
   339  0709  3415               	retlw	21
   340  070A  3411               	retlw	17
   341  070B  340A               	retlw	10
   342  070C  3404               	retlw	4
   343  070D  3400               	retlw	0
   344  070E  3400               	retlw	0
   345  070F  3400               	retlw	0
   346  0710  340A               	retlw	10
   347  0711  341F               	retlw	31
   348  0712  341F               	retlw	31
   349  0713  340E               	retlw	14
   350  0714  3404               	retlw	4
   351  0715  3400               	retlw	0
   352  0716  3400               	retlw	0
   353  0717  3400               	retlw	0
   354  0718  3400               	retlw	0
   355  0719  3400               	retlw	0
   356  071A  3400               	retlw	0
   357  071B  3400               	retlw	0
   358  071C  3400               	retlw	0
   359  071D  3400               	retlw	0
   360  071E  3400               	retlw	0
   361  071F  3400               	retlw	0
   362  0720  3400               	retlw	0
   363  0721  3400               	retlw	0
   364  0722  3400               	retlw	0
   365  0723  3400               	retlw	0
   366  0724  3400               	retlw	0
   367  0725  3400               	retlw	0
   368  0726  3400               	retlw	0
   369  0727  3400               	retlw	0
   370  0728  3400               	retlw	0
   371  0729  3400               	retlw	0
   372  072A  3400               	retlw	0
   373  072B  3400               	retlw	0
   374  072C  3400               	retlw	0
   375  072D  3400               	retlw	0
   376  072E  3400               	retlw	0
   377  072F  3400               	retlw	0
   378  0006                     _PORTB	set	6
   379  0007                     _PORTCbits	set	7
   380  0008                     _PORTD	set	8
   381  002A                     _RA2	set	42
   382  0029                     _RA1	set	41
   383  002B                     _RA3	set	43
   384  0061                     _TMR2IF	set	97
   385  005F                     _GIE	set	95
   386  005E                     _PEIE	set	94
   387  0092                     _TMR2ON	set	146
   388  0095                     _TOUTPS2	set	149
   389  0094                     _TOUTPS1	set	148
   390  0093                     _TOUTPS0	set	147
   391  0091                     _T2CKPS1	set	145
   392  0090                     _T2CKPS0	set	144
   393  0086                     _TRISB	set	134
   394  0087                     _TRISC	set	135
   395  0085                     _TRISAbits	set	133
   396  0088                     _TRISD	set	136
   397  009F                     _ADCON1	set	159
   398  0092                     _PR2	set	146
   399  0461                     _TMR2IE	set	1121
   400                           
   401                           	psect	strings
   402  07D0                     __pstrings:
   403  07D0                     stringtab:
   404  07D0                     __stringtab:
   405  07D0                     stringcode:	
   406                           ;	String table - string pointers are 1 byte each
   407                           
   408  07D0                     stringdir:
   409  07D0  3007               	movlw	high stringdir
   410  07D1  008A               	movwf	10
   411  07D2  0804               	movf	4,w
   412  07D3  0A84               	incf	4,f
   413  07D4  0782               	addwf	2,f
   414  07D5                     __stringbase:
   415  07D5  3400               	retlw	0
   416  07D6                     __end_of__stringtab:
   417  07D6                     STR_2:
   418  07D6  3447               	retlw	71	;'G'
   419  07D7  3469               	retlw	105	;'i'
   420  07D8  3461               	retlw	97	;'a'
   421  07D9  3420               	retlw	32	;' '
   422  07DA  3474               	retlw	116	;'t'
   423  07DB  3472               	retlw	114	;'r'
   424  07DC  3469               	retlw	105	;'i'
   425  07DD  3420               	retlw	32	;' '
   426  07DE  3449               	retlw	73	;'I'
   427  07DF  343D               	retlw	61	;'='
   428  07E0  3420               	retlw	32	;' '
   429  07E1  3400               	retlw	0
   430  07E2                     STR_3:
   431  07E2  3447               	retlw	71	;'G'
   432  07E3  3469               	retlw	105	;'i'
   433  07E4  3461               	retlw	97	;'a'
   434  07E5  3420               	retlw	32	;' '
   435  07E6  3474               	retlw	116	;'t'
   436  07E7  3472               	retlw	114	;'r'
   437  07E8  3469               	retlw	105	;'i'
   438  07E9  3420               	retlw	32	;' '
   439  07EA  3455               	retlw	85	;'U'
   440  07EB  343D               	retlw	61	;'='
   441  07EC  3420               	retlw	32	;' '
   442  07ED  3400               	retlw	0
   443  07EE                     STR_1:
   444  07EE  3444               	retlw	68	;'D'
   445  07EF  346F               	retlw	111	;'o'
   446  07F0  3420               	retlw	32	;' '
   447  07F1  3455               	retlw	85	;'U'
   448  07F2  342F               	retlw	47	;'/'
   449  07F3  3449               	retlw	73	;'I'
   450  07F4  3420               	retlw	32	;' '
   451  07F5  342E               	retlw	46	;'.'
   452  07F6  342E               	retlw	46	;'.'
   453  07F7  342E               	retlw	46	;'.'
   454  07F8  3400               	retlw	0
   455                           
   456                           	psect	cinit
   457  0013                     start_initialization:	
   458                           ; #config settings
   459                           
   460  0013                     __initialization:
   461                           
   462                           ; Initialize objects allocated to BANK1
   463  0013  1383               	bcf	3,7	;select IRP bank0
   464  0014  30E0               	movlw	low (__pdataBANK1+64)
   465  0015  00FD               	movwf	btemp+-1
   466  0016  3006               	movlw	high __pidataBANK1
   467  0017  00FE               	movwf	btemp
   468  0018  30F0               	movlw	low __pidataBANK1
   469  0019  00FF               	movwf	btemp+1
   470  001A  30A0               	movlw	low __pdataBANK1
   471  001B  0084               	movwf	4
   472  001C  120A  158A  27CA  120A  118A  	fcall	init_ram0
   473                           
   474                           ; Clear objects allocated to BANK0
   475  0021  3047               	movlw	low __pbssBANK0
   476  0022  0084               	movwf	4
   477  0023  305F               	movlw	low (__pbssBANK0+24)
   478  0024  120A  158A  27BE   	fcall	clear_ram0
   479  0027                     end_of_initialization:	
   480                           ;End of C runtime variable initialization code
   481                           
   482  0027                     __end_of__initialization:
   483  0027  0183               	clrf	3
   484  0028  120A  118A  282B   	ljmp	_main	;jump to C main() function
   485                           
   486                           	psect	bssBANK0
   487  0047                     __pbssBANK0:
   488  0047                     LCDWriteInt@F912:
   489  0047                     	ds	5
   490  004C                     main@F908:
   491  004C                     	ds	3
   492  004F                     _Dienap:
   493  004F                     	ds	3
   494  0052                     _Dong:
   495  0052                     	ds	3
   496  0055                     _count_s:
   497  0055                     	ds	2
   498  0057                     _count1:
   499  0057                     	ds	2
   500  0059                     _count:
   501  0059                     	ds	2
   502  005B                     _i:
   503  005B                     	ds	2
   504  005D                     _adc_ok:
   505  005D                     	ds	1
   506  005E                     _do_dienap:
   507  005E                     	ds	1
   508                           
   509                           	psect	dataBANK1
   510  00A0                     __pdataBANK1:
   511  00A0                     ___cgram:
   512  00A0                     	ds	64
   513                           
   514                           	psect	inittext
   515  0FC6                     init_fetch0:	
   516                           ;	Called with low address in FSR and high address in W
   517                           
   518  0FC6  087E               	movf	126,w
   519  0FC7  008A               	movwf	10
   520  0FC8  087F               	movf	127,w
   521  0FC9  0082               	movwf	2
   522  0FCA                     init_ram0:	
   523                           ;Called with:
   524                           ;	high address of idata address in btemp 
   525                           ;	low address of idata address in btemp+1 
   526                           ;	low address of data in FSR
   527                           ;	high address + 1 of data in btemp-1
   528                           
   529  0FCA  27C6  120A  158A   	fcall	init_fetch0
   530  0FCD  0080               	movwf	0
   531  0FCE  0A84               	incf	4,f
   532  0FCF  0804               	movf	4,w
   533  0FD0  067D               	xorwf	125,w
   534  0FD1  1903               	btfsc	3,2
   535  0FD2  3400               	retlw	0
   536  0FD3  0AFF               	incf	127,f
   537  0FD4  1903               	btfsc	3,2
   538  0FD5  0AFE               	incf	126,f
   539  0FD6  2FCA               	goto	init_ram0
   540                           
   541                           	psect	clrtext
   542  0FBE                     clear_ram0:	
   543                           ;	Called with FSR containing the base address, and
   544                           ;	W with the last address+1
   545                           
   546  0FBE  0064               	clrwdt	;clear the watchdog before getting into this loop
   547  0FBF                     clrloop0:
   548  0FBF  0180               	clrf	0	;clear RAM location pointed to by FSR
   549  0FC0  0A84               	incf	4,f	;increment pointer
   550  0FC1  0604               	xorwf	4,w	;XOR with final address
   551  0FC2  1903               	btfsc	3,2	;have we reached the end yet?
   552  0FC3  3400               	retlw	0	;all done for this memory range, return
   553  0FC4  0604               	xorwf	4,w	;XOR again to restore value
   554  0FC5  2FBF               	goto	clrloop0	;do the next byte
   555                           
   556                           	psect	cstackCOMMON
   557  0070                     __pcstackCOMMON:
   558  0070                     ?_LCDInit:
   559  0070                     ?_InitADC:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_LCDWriteString:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?_LCDBusyLoop:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_timer2_initialize:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_Count_Up:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_ReadADC:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_main:	
   578                           ; 2 bytes @ 0x0
   579                           
   580  0070                     ?___ftpack:	
   581                           ; 2 bytes @ 0x0
   582                           
   583  0070                     ___ftpack@arg:	
   584                           ; 3 bytes @ 0x0
   585                           
   586                           
   587                           ; 3 bytes @ 0x0
   588  0070                     	ds	2
   589  0072                     ??_ReadADC:
   590                           
   591                           ; 1 bytes @ 0x2
   592  0072                     	ds	1
   593  0073                     ___ftpack@exp:
   594                           
   595                           ; 1 bytes @ 0x3
   596  0073                     	ds	1
   597  0074                     ReadADC@Channel:
   598  0074                     ___ftpack@sign:	
   599                           ; 1 bytes @ 0x4
   600                           
   601                           
   602                           ; 1 bytes @ 0x4
   603  0074                     	ds	1
   604  0075                     ??___ftpack:
   605  0075                     ReadADC@ADC_value:	
   606                           ; 1 bytes @ 0x5
   607                           
   608                           
   609                           ; 2 bytes @ 0x5
   610  0075                     	ds	2
   611  0077                     ReadADC@i:
   612                           
   613                           ; 2 bytes @ 0x7
   614  0077                     	ds	1
   615  0078                     ?___ftdiv:
   616  0078                     ?___ftmul:	
   617                           ; 3 bytes @ 0x8
   618                           
   619  0078                     ___ftdiv@f2:	
   620                           ; 3 bytes @ 0x8
   621                           
   622  0078                     ___ftmul@f1:	
   623                           ; 3 bytes @ 0x8
   624                           
   625                           
   626                           ; 3 bytes @ 0x8
   627  0078                     	ds	1
   628  0079                     ?___lwtoft:
   629  0079                     ___lwtoft@c:	
   630                           ; 3 bytes @ 0x9
   631                           
   632                           
   633                           ; 2 bytes @ 0x9
   634  0079                     	ds	2
   635  007B                     ___ftdiv@f1:
   636  007B                     ___ftmul@f2:	
   637                           ; 3 bytes @ 0xB
   638                           
   639                           
   640                           ; 3 bytes @ 0xB
   641  007B                     	ds	1
   642  007C                     ??___lwtoft:
   643                           
   644                           ; 1 bytes @ 0xC
   645  007C                     	ds	2
   646                           
   647                           	psect	cstackBANK0
   648  0020                     __pcstackBANK0:
   649  0020                     ??___ftdiv:
   650  0020                     ??___ftmul:	
   651                           ; 1 bytes @ 0x0
   652                           
   653                           
   654                           ; 1 bytes @ 0x0
   655  0020                     	ds	4
   656  0024                     ___ftdiv@cntr:
   657  0024                     ___ftmul@exp:	
   658                           ; 1 bytes @ 0x4
   659                           
   660                           
   661                           ; 1 bytes @ 0x4
   662  0024                     	ds	1
   663  0025                     ___ftdiv@f3:
   664  0025                     ___ftmul@f3_as_product:	
   665                           ; 3 bytes @ 0x5
   666                           
   667                           
   668                           ; 3 bytes @ 0x5
   669  0025                     	ds	3
   670  0028                     ___ftdiv@exp:
   671  0028                     ___ftmul@cntr:	
   672                           ; 1 bytes @ 0x8
   673                           
   674                           
   675                           ; 1 bytes @ 0x8
   676  0028                     	ds	1
   677  0029                     ___ftdiv@sign:
   678  0029                     ___ftmul@sign:	
   679                           ; 1 bytes @ 0x9
   680                           
   681                           
   682                           ; 1 bytes @ 0x9
   683  0029                     	ds	1
   684  002A                     ??_Count_Up:
   685                           
   686                           ; 1 bytes @ 0xA
   687  002A                     	ds	3
   688  002D                     ??_InitADC:
   689  002D                     ??_LCDBusyLoop:	
   690                           ; 1 bytes @ 0xD
   691                           
   692  002D                     ??_timer2_initialize:	
   693                           ; 1 bytes @ 0xD
   694                           
   695  002D                     ?___lwmod:	
   696                           ; 1 bytes @ 0xD
   697                           
   698  002D                     ?___fttol:	
   699                           ; 2 bytes @ 0xD
   700                           
   701  002D                     ___lwmod@divisor:	
   702                           ; 4 bytes @ 0xD
   703                           
   704  002D                     ___fttol@f1:	
   705                           ; 2 bytes @ 0xD
   706                           
   707                           
   708                           ; 3 bytes @ 0xD
   709  002D                     	ds	2
   710  002F                     LCDBusyLoop@busy:
   711  002F                     ___lwmod@dividend:	
   712                           ; 1 bytes @ 0xF
   713                           
   714                           
   715                           ; 2 bytes @ 0xF
   716  002F                     	ds	1
   717  0030                     LCDBusyLoop@temp:
   718                           
   719                           ; 1 bytes @ 0x10
   720  0030                     	ds	1
   721  0031                     ??___fttol:
   722  0031                     ??___lwmod:	
   723                           ; 1 bytes @ 0x11
   724                           
   725  0031                     LCDBusyLoop@status:	
   726                           ; 1 bytes @ 0x11
   727                           
   728                           
   729                           ; 1 bytes @ 0x11
   730  0031                     	ds	1
   731  0032                     ?_LCDByte:
   732  0032                     LCDByte@isdata:	
   733                           ; 1 bytes @ 0x12
   734                           
   735  0032                     ___lwmod@counter:	
   736                           ; 1 bytes @ 0x12
   737                           
   738                           
   739                           ; 1 bytes @ 0x12
   740  0032                     	ds	1
   741  0033                     ??_LCDByte:
   742  0033                     ?___lwdiv:	
   743                           ; 1 bytes @ 0x13
   744                           
   745  0033                     ___lwdiv@divisor:	
   746                           ; 2 bytes @ 0x13
   747                           
   748                           
   749                           ; 2 bytes @ 0x13
   750  0033                     	ds	2
   751  0035                     LCDByte@hn:
   752  0035                     ___fttol@sign1:	
   753                           ; 1 bytes @ 0x15
   754                           
   755  0035                     ___lwdiv@dividend:	
   756                           ; 1 bytes @ 0x15
   757                           
   758                           
   759                           ; 2 bytes @ 0x15
   760  0035                     	ds	1
   761  0036                     LCDByte@ln:
   762  0036                     ___fttol@lval:	
   763                           ; 1 bytes @ 0x16
   764                           
   765                           
   766                           ; 4 bytes @ 0x16
   767  0036                     	ds	1
   768  0037                     ??___lwdiv:
   769  0037                     LCDByte@c:	
   770                           ; 1 bytes @ 0x17
   771                           
   772                           
   773                           ; 1 bytes @ 0x17
   774  0037                     	ds	1
   775  0038                     LCDByte@temp:
   776  0038                     ___lwdiv@quotient:	
   777                           ; 1 bytes @ 0x18
   778                           
   779                           
   780                           ; 2 bytes @ 0x18
   781  0038                     	ds	1
   782  0039                     ??_LCDInit:
   783  0039                     ??_LCDWriteString:	
   784                           ; 1 bytes @ 0x19
   785                           
   786  0039                     ?_LCDGotoXY:	
   787                           ; 1 bytes @ 0x19
   788                           
   789  0039                     LCDGotoXY@y:	
   790                           ; 1 bytes @ 0x19
   791                           
   792                           
   793                           ; 1 bytes @ 0x19
   794  0039                     	ds	1
   795  003A                     ??_LCDGotoXY:
   796  003A                     LCDWriteString@cc:	
   797                           ; 1 bytes @ 0x1A
   798                           
   799  003A                     ___fttol@exp1:	
   800                           ; 1 bytes @ 0x1A
   801                           
   802  003A                     ___lwdiv@counter:	
   803                           ; 1 bytes @ 0x1A
   804                           
   805                           
   806                           ; 1 bytes @ 0x1A
   807  003A                     	ds	1
   808  003B                     LCDInit@style:
   809  003B                     LCDWriteString@msg:	
   810                           ; 1 bytes @ 0x1B
   811                           
   812                           
   813                           ; 1 bytes @ 0x1B
   814  003B                     	ds	1
   815  003C                     LCDInit@__i:
   816  003C                     LCDGotoXY@x:	
   817                           ; 1 bytes @ 0x1C
   818                           
   819                           
   820                           ; 1 bytes @ 0x1C
   821  003C                     	ds	1
   822  003D                     ??_main:
   823                           
   824                           ; 1 bytes @ 0x1D
   825  003D                     	ds	3
   826  0040                     _main$751:
   827                           
   828                           ; 2 bytes @ 0x20
   829  0040                     	ds	2
   830  0042                     main@Digit:
   831                           
   832                           ; 3 bytes @ 0x22
   833  0042                     	ds	3
   834  0045                     main@ADC_Value:
   835                           
   836                           ; 2 bytes @ 0x25
   837  0045                     	ds	2
   838                           
   839                           	psect	maintext
   840  002B                     __pmaintext:	
   841 ;;
   842 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   843 ;;
   844 ;; *************** function _main *****************
   845 ;; Defined at:
   846 ;;		line 67 in file "main.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;		None
   849 ;; Auto vars:     Size  Location     Type
   850 ;;  Digit           3   34[BANK0 ] unsigned char [3]
   851 ;;  ADC_Value       2   37[BANK0 ] unsigned int 
   852 ;; Return value:  Size  Location     Type
   853 ;;                  2   74[None  ] int 
   854 ;; Registers used:
   855 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : B00/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   861 ;;      Params:         0       0       0       0       0
   862 ;;      Locals:         0       7       0       0       0
   863 ;;      Temps:          0       3       0       0       0
   864 ;;      Totals:         0      10       0       0       0
   865 ;;Total ram usage:       10 bytes
   866 ;; Hardware stack levels required when called:    6
   867 ;; This function calls:
   868 ;;		_InitADC
   869 ;;		_LCDByte
   870 ;;		_LCDGotoXY
   871 ;;		_LCDInit
   872 ;;		_LCDWriteString
   873 ;;		___fttol
   874 ;;		___lwdiv
   875 ;;		___lwmod
   876 ;;		_timer2_initialize
   877 ;; This function is called by:
   878 ;;		Startup code after reset
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           
   883                           ;psect for function _main
   884  002B                     _main:
   885                           
   886                           ;main.c: 69:     unsigned char Digit[3] = { 0,0,0 };
   887                           
   888                           ;incstack = 0
   889                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   890  002B  3000               	movlw	0
   891  002C  1283               	bcf	3,5	;RP0=0, select bank0
   892  002D  1303               	bcf	3,6	;RP1=0, select bank0
   893  002E  00C2               	movwf	main@Digit
   894  002F  3000               	movlw	0
   895  0030  00C3               	movwf	main@Digit+1
   896  0031  3000               	movlw	0
   897  0032  00C4               	movwf	main@Digit+2
   898                           
   899                           ;main.c: 73:     ADCON1 = 0x06;
   900  0033  3006               	movlw	6
   901  0034  1683               	bsf	3,5	;RP0=1, select bank1
   902  0035  1303               	bcf	3,6	;RP1=0, select bank1
   903  0036  009F               	movwf	31	;volatile
   904                           
   905                           ;main.c: 74:    LCDInit(0B00000000);
   906  0037  3000               	movlw	0
   907  0038  120A  118A  259F  120A  118A  	fcall	_LCDInit
   908                           
   909                           ;main.c: 75:    InitADC();
   910  003D  120A  118A  27F9  120A  118A  	fcall	_InitADC
   911                           
   912                           ;main.c: 76:    timer2_initialize ();
   913  0042  120A  158A  27EB  120A  118A  	fcall	_timer2_initialize
   914                           
   915                           ;main.c: 78:   (LCDByte(0b00000001,0));
   916  0047  1283               	bcf	3,5	;RP0=0, select bank0
   917  0048  1303               	bcf	3,6	;RP1=0, select bank0
   918  0049  01B2               	clrf	LCDByte@isdata
   919  004A  3001               	movlw	1
   920  004B  120A  118A  26AD  120A  118A  	fcall	_LCDByte
   921                           
   922                           ;main.c: 80:    LCDWriteString("Do U/I ...");
   923  0050  3019               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   924  0051  120A  118A  265D  120A  118A  	fcall	_LCDWriteString
   925                           
   926                           ;main.c: 82:     _delay((unsigned long)((100)*(16000000/4000.0)));
   927  0056  3003               	movlw	3
   928  0057  1283               	bcf	3,5	;RP0=0, select bank0
   929  0058  1303               	bcf	3,6	;RP1=0, select bank0
   930  0059  00BF               	movwf	??_main+2
   931  005A  3008               	movlw	8
   932  005B  00BE               	movwf	??_main+1
   933  005C  3076               	movlw	118
   934  005D  00BD               	movwf	??_main
   935  005E                     u1947:
   936  005E  0BBD               	decfsz	??_main,f
   937  005F  285E               	goto	u1947
   938  0060  0BBE               	decfsz	??_main+1,f
   939  0061  285E               	goto	u1947
   940  0062  0BBF               	decfsz	??_main+2,f
   941  0063  285E               	goto	u1947
   942  0064  0000               	nop
   943                           
   944                           ;main.c: 83:     (LCDByte(0b00000001,0));
   945  0065  1283               	bcf	3,5	;RP0=0, select bank0
   946  0066  1303               	bcf	3,6	;RP1=0, select bank0
   947  0067  01B2               	clrf	LCDByte@isdata
   948  0068  3001               	movlw	1
   949  0069                     L1:
   950  0069  120A  118A  26AD  120A  118A  	fcall	_LCDByte
   951  006E                     l1909:
   952                           
   953                           ;main.c: 85:  {;main.c: 86:        if(adc_ok&&count1==25)
   954  006E  1283               	bcf	3,5	;RP0=0, select bank0
   955  006F  1303               	bcf	3,6	;RP1=0, select bank0
   956  0070  085D               	movf	_adc_ok,w
   957  0071  1903               	btfsc	3,2
   958  0072  286E               	goto	l1909
   959  0073  3019               	movlw	25
   960  0074  0657               	xorwf	_count1,w
   961  0075  0458               	iorwf	_count1+1,w
   962  0076  1D03               	btfss	3,2
   963  0077  286E               	goto	l1909
   964                           
   965                           ;main.c: 87:        {;main.c: 88:          count1=0;
   966  0078  01D7               	clrf	_count1
   967  0079  01D8               	clrf	_count1+1
   968                           
   969                           ;main.c: 89:          ADC_Value=(unsigned int)Dong;
   970  007A  0852               	movf	_Dong,w
   971  007B  00AD               	movwf	___fttol@f1
   972  007C  0853               	movf	_Dong+1,w
   973  007D  00AE               	movwf	___fttol@f1+1
   974  007E  0854               	movf	_Dong+2,w
   975  007F  00AF               	movwf	___fttol@f1+2
   976  0080  120A  118A  24B6  120A  118A  	fcall	___fttol
   977  0085  1283               	bcf	3,5	;RP0=0, select bank0
   978  0086  1303               	bcf	3,6	;RP1=0, select bank0
   979  0087  082E               	movf	?___fttol+1,w
   980  0088  00C6               	movwf	main@ADC_Value+1
   981  0089  082D               	movf	?___fttol,w
   982  008A  00C5               	movwf	main@ADC_Value
   983                           
   984                           ;main.c: 90:   Digit[2] = (ADC_Value/100);
   985  008B  3064               	movlw	100
   986  008C  00B3               	movwf	___lwdiv@divisor
   987  008D  3000               	movlw	0
   988  008E  00B4               	movwf	___lwdiv@divisor+1
   989  008F  0846               	movf	main@ADC_Value+1,w
   990  0090  00B6               	movwf	___lwdiv@dividend+1
   991  0091  0845               	movf	main@ADC_Value,w
   992  0092  00B5               	movwf	___lwdiv@dividend
   993  0093  120A  118A  2730  120A  118A  	fcall	___lwdiv
   994  0098  1283               	bcf	3,5	;RP0=0, select bank0
   995  0099  1303               	bcf	3,6	;RP1=0, select bank0
   996  009A  0833               	movf	?___lwdiv,w
   997  009B  00BD               	movwf	??_main
   998  009C  083D               	movf	??_main,w
   999  009D  00C4               	movwf	main@Digit+2
  1000                           
  1001                           ;main.c: 91:   Digit[1] = (ADC_Value%100)/10;
  1002  009E  300A               	movlw	10
  1003  009F  00B3               	movwf	___lwdiv@divisor
  1004  00A0  3000               	movlw	0
  1005  00A1  00B4               	movwf	___lwdiv@divisor+1
  1006  00A2  0846               	movf	main@ADC_Value+1,w
  1007  00A3  00B0               	movwf	___lwmod@dividend+1
  1008  00A4  0845               	movf	main@ADC_Value,w
  1009  00A5  00AF               	movwf	___lwmod@dividend
  1010  00A6  3064               	movlw	100
  1011  00A7  00AD               	movwf	___lwmod@divisor
  1012  00A8  3000               	movlw	0
  1013  00A9  00AE               	movwf	___lwmod@divisor+1
  1014  00AA  120A  118A  276E  120A  118A  	fcall	___lwmod
  1015  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1016  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  1017  00B1  082E               	movf	?___lwmod+1,w
  1018  00B2  00B6               	movwf	___lwdiv@dividend+1
  1019  00B3  082D               	movf	?___lwmod,w
  1020  00B4  00B5               	movwf	___lwdiv@dividend
  1021  00B5  120A  118A  2730  120A  118A  	fcall	___lwdiv
  1022  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1023  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1024  00BC  0833               	movf	?___lwdiv,w
  1025  00BD  00BD               	movwf	??_main
  1026  00BE  083D               	movf	??_main,w
  1027  00BF  00C3               	movwf	main@Digit+1
  1028                           
  1029                           ;main.c: 92:   Digit[0] = (ADC_Value%100)%10;
  1030  00C0  0846               	movf	main@ADC_Value+1,w
  1031  00C1  00B0               	movwf	___lwmod@dividend+1
  1032  00C2  0845               	movf	main@ADC_Value,w
  1033  00C3  00AF               	movwf	___lwmod@dividend
  1034  00C4  3064               	movlw	100
  1035  00C5  00AD               	movwf	___lwmod@divisor
  1036  00C6  3000               	movlw	0
  1037  00C7  00AE               	movwf	___lwmod@divisor+1
  1038  00C8  120A  118A  276E  120A  118A  	fcall	___lwmod
  1039  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1040  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1041  00CF  082E               	movf	?___lwmod+1,w
  1042  00D0  00C1               	movwf	_main$751+1
  1043  00D1  082D               	movf	?___lwmod,w
  1044  00D2  00C0               	movwf	_main$751
  1045                           
  1046                           ;main.c: 92:   Digit[0] = (ADC_Value%100)%10;
  1047  00D3  300A               	movlw	10
  1048  00D4  00AD               	movwf	___lwmod@divisor
  1049  00D5  3000               	movlw	0
  1050  00D6  00AE               	movwf	___lwmod@divisor+1
  1051  00D7  0841               	movf	_main$751+1,w
  1052  00D8  00B0               	movwf	___lwmod@dividend+1
  1053  00D9  0840               	movf	_main$751,w
  1054  00DA  00AF               	movwf	___lwmod@dividend
  1055  00DB  120A  118A  276E  120A  118A  	fcall	___lwmod
  1056  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1057  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1058  00E2  082D               	movf	?___lwmod,w
  1059  00E3  00BD               	movwf	??_main
  1060  00E4  083D               	movf	??_main,w
  1061  00E5  00C2               	movwf	main@Digit
  1062                           
  1063                           ;main.c: 95:       LCDGotoXY(1,0);
  1064  00E6  01B9               	clrf	LCDGotoXY@y
  1065  00E7  3001               	movlw	1
  1066  00E8  120A  118A  27A2  120A  118A  	fcall	_LCDGotoXY
  1067                           
  1068                           ;main.c: 96:  LCDWriteString("Gia tri I= ");
  1069  00ED  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1070  00EE  120A  118A  265D  120A  118A  	fcall	_LCDWriteString
  1071                           
  1072                           ;main.c: 97:  (LCDByte(Digit[2]+0x30,1));
  1073  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1074  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1075  00F5  01B2               	clrf	LCDByte@isdata
  1076  00F6  0AB2               	incf	LCDByte@isdata,f
  1077  00F7  0844               	movf	main@Digit+2,w
  1078  00F8  3E30               	addlw	48
  1079  00F9  120A  118A  26AD  120A  118A  	fcall	_LCDByte
  1080                           
  1081                           ;main.c: 98:  (LCDByte('.',1));
  1082  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1083  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1084  0100  01B2               	clrf	LCDByte@isdata
  1085  0101  0AB2               	incf	LCDByte@isdata,f
  1086  0102  302E               	movlw	46
  1087  0103  120A  118A  26AD  120A  118A  	fcall	_LCDByte
  1088                           
  1089                           ;main.c: 99:  (LCDByte(Digit[1]+0x30,1));
  1090  0108  1283               	bcf	3,5	;RP0=0, select bank0
  1091  0109  1303               	bcf	3,6	;RP1=0, select bank0
  1092  010A  01B2               	clrf	LCDByte@isdata
  1093  010B  0AB2               	incf	LCDByte@isdata,f
  1094  010C  0843               	movf	main@Digit+1,w
  1095  010D  3E30               	addlw	48
  1096  010E  120A  118A  26AD  120A  118A  	fcall	_LCDByte
  1097                           
  1098                           ;main.c: 100:  (LCDByte(Digit[0]+0x30,1));
  1099  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1100  0114  1303               	bcf	3,6	;RP1=0, select bank0
  1101  0115  01B2               	clrf	LCDByte@isdata
  1102  0116  0AB2               	incf	LCDByte@isdata,f
  1103  0117  0842               	movf	main@Digit,w
  1104  0118  3E30               	addlw	48
  1105  0119  120A  118A  26AD  120A  118A  	fcall	_LCDByte
  1106                           
  1107                           ;main.c: 104:   ADC_Value=(unsigned int)Dienap;
  1108  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1109  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1110  0120  084F               	movf	_Dienap,w
  1111  0121  00AD               	movwf	___fttol@f1
  1112  0122  0850               	movf	_Dienap+1,w
  1113  0123  00AE               	movwf	___fttol@f1+1
  1114  0124  0851               	movf	_Dienap+2,w
  1115  0125  00AF               	movwf	___fttol@f1+2
  1116  0126  120A  118A  24B6  120A  118A  	fcall	___fttol
  1117  012B  1283               	bcf	3,5	;RP0=0, select bank0
  1118  012C  1303               	bcf	3,6	;RP1=0, select bank0
  1119  012D  082E               	movf	?___fttol+1,w
  1120  012E  00C6               	movwf	main@ADC_Value+1
  1121  012F  082D               	movf	?___fttol,w
  1122  0130  00C5               	movwf	main@ADC_Value
  1123                           
  1124                           ;main.c: 105:   Digit[2] = (ADC_Value/100);
  1125  0131  3064               	movlw	100
  1126  0132  00B3               	movwf	___lwdiv@divisor
  1127  0133  3000               	movlw	0
  1128  0134  00B4               	movwf	___lwdiv@divisor+1
  1129  0135  0846               	movf	main@ADC_Value+1,w
  1130  0136  00B6               	movwf	___lwdiv@dividend+1
  1131  0137  0845               	movf	main@ADC_Value,w
  1132  0138  00B5               	movwf	___lwdiv@dividend
  1133  0139  120A  118A  2730  120A  118A  	fcall	___lwdiv
  1134  013E  1283               	bcf	3,5	;RP0=0, select bank0
  1135  013F  1303               	bcf	3,6	;RP1=0, select bank0
  1136  0140  0833               	movf	?___lwdiv,w
  1137  0141  00BD               	movwf	??_main
  1138  0142  083D               	movf	??_main,w
  1139  0143  00C4               	movwf	main@Digit+2
  1140                           
  1141                           ;main.c: 106:   Digit[1] = (ADC_Value%100)/10;
  1142  0144  300A               	movlw	10
  1143  0145  00B3               	movwf	___lwdiv@divisor
  1144  0146  3000               	movlw	0
  1145  0147  00B4               	movwf	___lwdiv@divisor+1
  1146  0148  0846               	movf	main@ADC_Value+1,w
  1147  0149  00B0               	movwf	___lwmod@dividend+1
  1148  014A  0845               	movf	main@ADC_Value,w
  1149  014B  00AF               	movwf	___lwmod@dividend
  1150  014C  3064               	movlw	100
  1151  014D  00AD               	movwf	___lwmod@divisor
  1152  014E  3000               	movlw	0
  1153  014F  00AE               	movwf	___lwmod@divisor+1
  1154  0150  120A  118A  276E  120A  118A  	fcall	___lwmod
  1155  0155  1283               	bcf	3,5	;RP0=0, select bank0
  1156  0156  1303               	bcf	3,6	;RP1=0, select bank0
  1157  0157  082E               	movf	?___lwmod+1,w
  1158  0158  00B6               	movwf	___lwdiv@dividend+1
  1159  0159  082D               	movf	?___lwmod,w
  1160  015A  00B5               	movwf	___lwdiv@dividend
  1161  015B  120A  118A  2730  120A  118A  	fcall	___lwdiv
  1162  0160  1283               	bcf	3,5	;RP0=0, select bank0
  1163  0161  1303               	bcf	3,6	;RP1=0, select bank0
  1164  0162  0833               	movf	?___lwdiv,w
  1165  0163  00BD               	movwf	??_main
  1166  0164  083D               	movf	??_main,w
  1167  0165  00C3               	movwf	main@Digit+1
  1168                           
  1169                           ;main.c: 107:   Digit[0] = (ADC_Value%100)%10;
  1170  0166  0846               	movf	main@ADC_Value+1,w
  1171  0167  00B0               	movwf	___lwmod@dividend+1
  1172  0168  0845               	movf	main@ADC_Value,w
  1173  0169  00AF               	movwf	___lwmod@dividend
  1174  016A  3064               	movlw	100
  1175  016B  00AD               	movwf	___lwmod@divisor
  1176  016C  3000               	movlw	0
  1177  016D  00AE               	movwf	___lwmod@divisor+1
  1178  016E  120A  118A  276E  120A  118A  	fcall	___lwmod
  1179  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1180  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1181  0175  082E               	movf	?___lwmod+1,w
  1182  0176  00C1               	movwf	_main$751+1
  1183  0177  082D               	movf	?___lwmod,w
  1184  0178  00C0               	movwf	_main$751
  1185                           
  1186                           ;main.c: 107:   Digit[0] = (ADC_Value%100)%10;
  1187  0179  300A               	movlw	10
  1188  017A  00AD               	movwf	___lwmod@divisor
  1189  017B  3000               	movlw	0
  1190  017C  00AE               	movwf	___lwmod@divisor+1
  1191  017D  0841               	movf	_main$751+1,w
  1192  017E  00B0               	movwf	___lwmod@dividend+1
  1193  017F  0840               	movf	_main$751,w
  1194  0180  00AF               	movwf	___lwmod@dividend
  1195  0181  120A  118A  276E  120A  118A  	fcall	___lwmod
  1196  0186  1283               	bcf	3,5	;RP0=0, select bank0
  1197  0187  1303               	bcf	3,6	;RP1=0, select bank0
  1198  0188  082D               	movf	?___lwmod,w
  1199  0189  00BD               	movwf	??_main
  1200  018A  083D               	movf	??_main,w
  1201  018B  00C2               	movwf	main@Digit
  1202                           
  1203                           ;main.c: 109:      LCDGotoXY(1,1);
  1204  018C  01B9               	clrf	LCDGotoXY@y
  1205  018D  0AB9               	incf	LCDGotoXY@y,f
  1206  018E  3001               	movlw	1
  1207  018F  120A  118A  27A2  120A  118A  	fcall	_LCDGotoXY
  1208                           
  1209                           ;main.c: 110:  LCDWriteString("Gia tri U= ");
  1210  0194  300D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1211  0195  120A  118A  265D  120A  118A  	fcall	_LCDWriteString
  1212                           
  1213                           ;main.c: 111:  (LCDByte(Digit[2]+0x30,1));
  1214  019A  1283               	bcf	3,5	;RP0=0, select bank0
  1215  019B  1303               	bcf	3,6	;RP1=0, select bank0
  1216  019C  01B2               	clrf	LCDByte@isdata
  1217  019D  0AB2               	incf	LCDByte@isdata,f
  1218  019E  0844               	movf	main@Digit+2,w
  1219  019F  3E30               	addlw	48
  1220  01A0  120A  118A  26AD  120A  118A  	fcall	_LCDByte
  1221                           
  1222                           ;main.c: 112:  (LCDByte('.',1));
  1223  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  1224  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  1225  01A7  01B2               	clrf	LCDByte@isdata
  1226  01A8  0AB2               	incf	LCDByte@isdata,f
  1227  01A9  302E               	movlw	46
  1228  01AA  120A  118A  26AD  120A  118A  	fcall	_LCDByte
  1229                           
  1230                           ;main.c: 113:  (LCDByte(Digit[1]+0x30,1));
  1231  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1232  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1233  01B1  01B2               	clrf	LCDByte@isdata
  1234  01B2  0AB2               	incf	LCDByte@isdata,f
  1235  01B3  0843               	movf	main@Digit+1,w
  1236  01B4  3E30               	addlw	48
  1237  01B5  120A  118A  26AD  120A  118A  	fcall	_LCDByte
  1238                           
  1239                           ;main.c: 114:  (LCDByte(Digit[0]+0x30,1));
  1240  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1241  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  1242  01BC  01B2               	clrf	LCDByte@isdata
  1243  01BD  0AB2               	incf	LCDByte@isdata,f
  1244  01BE  0842               	movf	main@Digit,w
  1245  01BF  3E30               	addlw	48
  1246  01C0  2869               	goto	L1
  1247  01C1                     __end_of_main:
  1248                           
  1249                           	psect	text1
  1250  0FEB                     __ptext1:	
  1251 ;; *************** function _timer2_initialize *****************
  1252 ;; Defined at:
  1253 ;;		line 27 in file "main.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;		None
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;		None
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  1    wreg      void 
  1260 ;; Registers used:
  1261 ;;		wreg
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1267 ;;      Params:         0       0       0       0       0
  1268 ;;      Locals:         0       0       0       0       0
  1269 ;;      Temps:          0       0       0       0       0
  1270 ;;      Totals:         0       0       0       0       0
  1271 ;;Total ram usage:        0 bytes
  1272 ;; Hardware stack levels used:    1
  1273 ;; Hardware stack levels required when called:    3
  1274 ;; This function calls:
  1275 ;;		Nothing
  1276 ;; This function is called by:
  1277 ;;		_main
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           
  1282                           ;psect for function _timer2_initialize
  1283  0FEB                     _timer2_initialize:
  1284                           
  1285                           ;main.c: 29:     T2CKPS0=1;
  1286                           
  1287                           ;incstack = 0
  1288                           ; Regs used in _timer2_initialize: [wreg]
  1289  0FEB  1283               	bcf	3,5	;RP0=0, select bank0
  1290  0FEC  1303               	bcf	3,6	;RP1=0, select bank0
  1291  0FED  1412               	bsf	18,0	;volatile
  1292                           
  1293                           ;main.c: 30:     T2CKPS1=0;
  1294  0FEE  1092               	bcf	18,1	;volatile
  1295                           
  1296                           ;main.c: 31:     PR2=100;
  1297  0FEF  3064               	movlw	100
  1298  0FF0  1683               	bsf	3,5	;RP0=1, select bank1
  1299  0FF1  1303               	bcf	3,6	;RP1=0, select bank1
  1300  0FF2  0092               	movwf	18	;volatile
  1301                           
  1302                           ;main.c: 32:     TOUTPS0=1;
  1303  0FF3  1283               	bcf	3,5	;RP0=0, select bank0
  1304  0FF4  1303               	bcf	3,6	;RP1=0, select bank0
  1305  0FF5  1592               	bsf	18,3	;volatile
  1306                           
  1307                           ;main.c: 33:     TOUTPS1=1;
  1308  0FF6  1612               	bsf	18,4	;volatile
  1309                           
  1310                           ;main.c: 34:     TOUTPS2=1;
  1311  0FF7  1692               	bsf	18,5	;volatile
  1312                           
  1313                           ;main.c: 35:     TOUTPS2=1;
  1314  0FF8  1692               	bsf	18,5	;volatile
  1315                           
  1316                           ;main.c: 36:     TMR2ON=1;
  1317  0FF9  1512               	bsf	18,2	;volatile
  1318                           
  1319                           ;main.c: 37:     TMR2IE=1;
  1320  0FFA  1683               	bsf	3,5	;RP0=1, select bank1
  1321  0FFB  1303               	bcf	3,6	;RP1=0, select bank1
  1322  0FFC  148C               	bsf	12,1	;volatile
  1323                           
  1324                           ;main.c: 38:     PEIE=1;
  1325  0FFD  170B               	bsf	11,6	;volatile
  1326                           
  1327                           ;main.c: 39:     GIE=1;
  1328  0FFE  178B               	bsf	11,7	;volatile
  1329  0FFF  0008               	return
  1330  1000                     __end_of_timer2_initialize:
  1331                           
  1332                           	psect	text2
  1333  076E                     __ptext2:	
  1334 ;; *************** function ___lwmod *****************
  1335 ;; Defined at:
  1336 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;  divisor         2   13[BANK0 ] unsigned int 
  1339 ;;  dividend        2   15[BANK0 ] unsigned int 
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;  counter         1   18[BANK0 ] unsigned char 
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  2   13[BANK0 ] unsigned int 
  1344 ;; Registers used:
  1345 ;;		wreg, status,2, status,0
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1351 ;;      Params:         0       4       0       0       0
  1352 ;;      Locals:         0       1       0       0       0
  1353 ;;      Temps:          0       1       0       0       0
  1354 ;;      Totals:         0       6       0       0       0
  1355 ;;Total ram usage:        6 bytes
  1356 ;; Hardware stack levels used:    1
  1357 ;; Hardware stack levels required when called:    3
  1358 ;; This function calls:
  1359 ;;		Nothing
  1360 ;; This function is called by:
  1361 ;;		_main
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           
  1366                           ;psect for function ___lwmod
  1367  076E                     ___lwmod:
  1368                           
  1369                           ;incstack = 0
  1370                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1371  076E  1283               	bcf	3,5	;RP0=0, select bank0
  1372  076F  1303               	bcf	3,6	;RP1=0, select bank0
  1373  0770  082D               	movf	___lwmod@divisor,w
  1374  0771  042E               	iorwf	___lwmod@divisor+1,w
  1375  0772  1903               	btfsc	3,2
  1376  0773  2F9D               	goto	l1853
  1377  0774  01B2               	clrf	___lwmod@counter
  1378  0775  0AB2               	incf	___lwmod@counter,f
  1379  0776                     l1843:
  1380  0776  1BAE               	btfsc	___lwmod@divisor+1,7
  1381  0777  2F84               	goto	l1845
  1382  0778  3001               	movlw	1
  1383  0779                     u1585:
  1384  0779  1003               	clrc
  1385  077A  0DAD               	rlf	___lwmod@divisor,f
  1386  077B  0DAE               	rlf	___lwmod@divisor+1,f
  1387  077C  3EFF               	addlw	-1
  1388  077D  1D03               	skipz
  1389  077E  2F79               	goto	u1585
  1390  077F  3001               	movlw	1
  1391  0780  00B1               	movwf	??___lwmod
  1392  0781  0831               	movf	??___lwmod,w
  1393  0782  07B2               	addwf	___lwmod@counter,f
  1394  0783  2F76               	goto	l1843
  1395  0784                     l1845:
  1396  0784  082E               	movf	___lwmod@divisor+1,w
  1397  0785  0230               	subwf	___lwmod@dividend+1,w
  1398  0786  1D03               	skipz
  1399  0787  2F8A               	goto	u1605
  1400  0788  082D               	movf	___lwmod@divisor,w
  1401  0789  022F               	subwf	___lwmod@dividend,w
  1402  078A                     u1605:
  1403  078A  1C03               	skipc
  1404  078B  2F92               	goto	l1849
  1405  078C  082D               	movf	___lwmod@divisor,w
  1406  078D  02AF               	subwf	___lwmod@dividend,f
  1407  078E  082E               	movf	___lwmod@divisor+1,w
  1408  078F  1C03               	skipc
  1409  0790  03B0               	decf	___lwmod@dividend+1,f
  1410  0791  02B0               	subwf	___lwmod@dividend+1,f
  1411  0792                     l1849:
  1412  0792  3001               	movlw	1
  1413  0793                     u1615:
  1414  0793  1003               	clrc
  1415  0794  0CAE               	rrf	___lwmod@divisor+1,f
  1416  0795  0CAD               	rrf	___lwmod@divisor,f
  1417  0796  3EFF               	addlw	-1
  1418  0797  1D03               	skipz
  1419  0798  2F93               	goto	u1615
  1420  0799  3001               	movlw	1
  1421  079A  02B2               	subwf	___lwmod@counter,f
  1422  079B  1D03               	btfss	3,2
  1423  079C  2F84               	goto	l1845
  1424  079D                     l1853:
  1425  079D  0830               	movf	___lwmod@dividend+1,w
  1426  079E  00AE               	movwf	?___lwmod+1
  1427  079F  082F               	movf	___lwmod@dividend,w
  1428  07A0  00AD               	movwf	?___lwmod
  1429  07A1  0008               	return
  1430  07A2                     __end_of___lwmod:
  1431                           
  1432                           	psect	text3
  1433  0730                     __ptext3:	
  1434 ;; *************** function ___lwdiv *****************
  1435 ;; Defined at:
  1436 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;  divisor         2   19[BANK0 ] unsigned int 
  1439 ;;  dividend        2   21[BANK0 ] unsigned int 
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;  quotient        2   24[BANK0 ] unsigned int 
  1442 ;;  counter         1   26[BANK0 ] unsigned char 
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  2   19[BANK0 ] unsigned int 
  1445 ;; Registers used:
  1446 ;;		wreg, status,2, status,0
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1452 ;;      Params:         0       4       0       0       0
  1453 ;;      Locals:         0       3       0       0       0
  1454 ;;      Temps:          0       1       0       0       0
  1455 ;;      Totals:         0       8       0       0       0
  1456 ;;Total ram usage:        8 bytes
  1457 ;; Hardware stack levels used:    1
  1458 ;; Hardware stack levels required when called:    3
  1459 ;; This function calls:
  1460 ;;		Nothing
  1461 ;; This function is called by:
  1462 ;;		_main
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           
  1467                           ;psect for function ___lwdiv
  1468  0730                     ___lwdiv:
  1469                           
  1470                           ;incstack = 0
  1471                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1472  0730  1283               	bcf	3,5	;RP0=0, select bank0
  1473  0731  1303               	bcf	3,6	;RP1=0, select bank0
  1474  0732  01B8               	clrf	___lwdiv@quotient
  1475  0733  01B9               	clrf	___lwdiv@quotient+1
  1476  0734  0833               	movf	___lwdiv@divisor,w
  1477  0735  0434               	iorwf	___lwdiv@divisor+1,w
  1478  0736  1903               	btfsc	3,2
  1479  0737  2F69               	goto	l1831
  1480  0738  01BA               	clrf	___lwdiv@counter
  1481  0739  0ABA               	incf	___lwdiv@counter,f
  1482  073A                     l1819:
  1483  073A  1BB4               	btfsc	___lwdiv@divisor+1,7
  1484  073B  2F48               	goto	l1821
  1485  073C  3001               	movlw	1
  1486  073D                     u1515:
  1487  073D  1003               	clrc
  1488  073E  0DB3               	rlf	___lwdiv@divisor,f
  1489  073F  0DB4               	rlf	___lwdiv@divisor+1,f
  1490  0740  3EFF               	addlw	-1
  1491  0741  1D03               	skipz
  1492  0742  2F3D               	goto	u1515
  1493  0743  3001               	movlw	1
  1494  0744  00B7               	movwf	??___lwdiv
  1495  0745  0837               	movf	??___lwdiv,w
  1496  0746  07BA               	addwf	___lwdiv@counter,f
  1497  0747  2F3A               	goto	l1819
  1498  0748                     l1821:
  1499  0748  3001               	movlw	1
  1500  0749                     u1535:
  1501  0749  1003               	clrc
  1502  074A  0DB8               	rlf	___lwdiv@quotient,f
  1503  074B  0DB9               	rlf	___lwdiv@quotient+1,f
  1504  074C  3EFF               	addlw	-1
  1505  074D  1D03               	skipz
  1506  074E  2F49               	goto	u1535
  1507  074F  0834               	movf	___lwdiv@divisor+1,w
  1508  0750  0236               	subwf	___lwdiv@dividend+1,w
  1509  0751  1D03               	skipz
  1510  0752  2F55               	goto	u1545
  1511  0753  0833               	movf	___lwdiv@divisor,w
  1512  0754  0235               	subwf	___lwdiv@dividend,w
  1513  0755                     u1545:
  1514  0755  1C03               	skipc
  1515  0756  2F5E               	goto	l1827
  1516  0757  0833               	movf	___lwdiv@divisor,w
  1517  0758  02B5               	subwf	___lwdiv@dividend,f
  1518  0759  0834               	movf	___lwdiv@divisor+1,w
  1519  075A  1C03               	skipc
  1520  075B  03B6               	decf	___lwdiv@dividend+1,f
  1521  075C  02B6               	subwf	___lwdiv@dividend+1,f
  1522  075D  1438               	bsf	___lwdiv@quotient,0
  1523  075E                     l1827:
  1524  075E  3001               	movlw	1
  1525  075F                     u1555:
  1526  075F  1003               	clrc
  1527  0760  0CB4               	rrf	___lwdiv@divisor+1,f
  1528  0761  0CB3               	rrf	___lwdiv@divisor,f
  1529  0762  3EFF               	addlw	-1
  1530  0763  1D03               	skipz
  1531  0764  2F5F               	goto	u1555
  1532  0765  3001               	movlw	1
  1533  0766  02BA               	subwf	___lwdiv@counter,f
  1534  0767  1D03               	btfss	3,2
  1535  0768  2F48               	goto	l1821
  1536  0769                     l1831:
  1537  0769  0839               	movf	___lwdiv@quotient+1,w
  1538  076A  00B4               	movwf	?___lwdiv+1
  1539  076B  0838               	movf	___lwdiv@quotient,w
  1540  076C  00B3               	movwf	?___lwdiv
  1541  076D  0008               	return
  1542  076E                     __end_of___lwdiv:
  1543                           
  1544                           	psect	text4
  1545  04B6                     __ptext4:	
  1546 ;; *************** function ___fttol *****************
  1547 ;; Defined at:
  1548 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fttol.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;  f1              3   13[BANK0 ] float 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;  lval            4   22[BANK0 ] unsigned long 
  1553 ;;  exp1            1   26[BANK0 ] unsigned char 
  1554 ;;  sign1           1   21[BANK0 ] unsigned char 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  4   13[BANK0 ] long 
  1557 ;; Registers used:
  1558 ;;		wreg, status,2, status,0
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1564 ;;      Params:         0       4       0       0       0
  1565 ;;      Locals:         0       6       0       0       0
  1566 ;;      Temps:          0       4       0       0       0
  1567 ;;      Totals:         0      14       0       0       0
  1568 ;;Total ram usage:       14 bytes
  1569 ;; Hardware stack levels used:    1
  1570 ;; Hardware stack levels required when called:    3
  1571 ;; This function calls:
  1572 ;;		Nothing
  1573 ;; This function is called by:
  1574 ;;		_main
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           
  1579                           ;psect for function ___fttol
  1580  04B6                     ___fttol:
  1581                           
  1582                           ;incstack = 0
  1583                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1584  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  1585  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  1586  04B8  082D               	movf	___fttol@f1,w
  1587  04B9  00B1               	movwf	??___fttol
  1588  04BA  082E               	movf	___fttol@f1+1,w
  1589  04BB  00B2               	movwf	??___fttol+1
  1590  04BC  082F               	movf	___fttol@f1+2,w
  1591  04BD  00B3               	movwf	??___fttol+2
  1592  04BE  1003               	clrc
  1593  04BF  0D32               	rlf	??___fttol+1,w
  1594  04C0  0D33               	rlf	??___fttol+2,w
  1595  04C1  00B4               	movwf	??___fttol+3
  1596  04C2  0834               	movf	??___fttol+3,w
  1597  04C3  00BA               	movwf	___fttol@exp1
  1598  04C4  083A               	movf	___fttol@exp1,w
  1599  04C5  1D03               	btfss	3,2
  1600  04C6  2CD0               	goto	l1773
  1601  04C7                     l1769:
  1602  04C7  3000               	movlw	0
  1603  04C8  00B0               	movwf	?___fttol+3
  1604  04C9  3000               	movlw	0
  1605  04CA  00AF               	movwf	?___fttol+2
  1606  04CB  3000               	movlw	0
  1607  04CC  00AE               	movwf	?___fttol+1
  1608  04CD  3000               	movlw	0
  1609  04CE  00AD               	movwf	?___fttol
  1610  04CF  0008               	return
  1611  04D0                     l1773:
  1612  04D0  082D               	movf	___fttol@f1,w
  1613  04D1  00B1               	movwf	??___fttol
  1614  04D2  082E               	movf	___fttol@f1+1,w
  1615  04D3  00B2               	movwf	??___fttol+1
  1616  04D4  082F               	movf	___fttol@f1+2,w
  1617  04D5  00B3               	movwf	??___fttol+2
  1618  04D6  3017               	movlw	23
  1619  04D7                     u1415:
  1620  04D7  1003               	clrc
  1621  04D8  0CB3               	rrf	??___fttol+2,f
  1622  04D9  0CB2               	rrf	??___fttol+1,f
  1623  04DA  0CB1               	rrf	??___fttol,f
  1624  04DB  3EFF               	addlw	-1
  1625  04DC  1D03               	skipz
  1626  04DD  2CD7               	goto	u1415
  1627  04DE  0831               	movf	??___fttol,w
  1628  04DF  00B4               	movwf	??___fttol+3
  1629  04E0  0834               	movf	??___fttol+3,w
  1630  04E1  00B5               	movwf	___fttol@sign1
  1631  04E2  17AE               	bsf	___fttol@f1+1,7
  1632  04E3  30FF               	movlw	255
  1633  04E4  05AD               	andwf	___fttol@f1,f
  1634  04E5  30FF               	movlw	255
  1635  04E6  05AE               	andwf	___fttol@f1+1,f
  1636  04E7  3000               	movlw	0
  1637  04E8  05AF               	andwf	___fttol@f1+2,f
  1638  04E9  082D               	movf	___fttol@f1,w
  1639  04EA  00B6               	movwf	___fttol@lval
  1640  04EB  082E               	movf	___fttol@f1+1,w
  1641  04EC  00B7               	movwf	___fttol@lval+1
  1642  04ED  082F               	movf	___fttol@f1+2,w
  1643  04EE  00B8               	movwf	___fttol@lval+2
  1644  04EF  01B9               	clrf	___fttol@lval+3
  1645  04F0  308E               	movlw	142
  1646  04F1  02BA               	subwf	___fttol@exp1,f
  1647  04F2  1FBA               	btfss	___fttol@exp1,7
  1648  04F3  2D09               	goto	l1793
  1649  04F4  083A               	movf	___fttol@exp1,w
  1650  04F5  3A80               	xorlw	128
  1651  04F6  3E8F               	addlw	143
  1652  04F7  1C03               	btfss	3,0
  1653  04F8  2CC7               	goto	l1769
  1654  04F9                     l1791:
  1655  04F9  3001               	movlw	1
  1656  04FA                     u1445:
  1657  04FA  1003               	clrc
  1658  04FB  0CB9               	rrf	___fttol@lval+3,f
  1659  04FC  0CB8               	rrf	___fttol@lval+2,f
  1660  04FD  0CB7               	rrf	___fttol@lval+1,f
  1661  04FE  0CB6               	rrf	___fttol@lval,f
  1662  04FF  3EFF               	addlw	-1
  1663  0500  1D03               	skipz
  1664  0501  2CFA               	goto	u1445
  1665  0502  3001               	movlw	1
  1666  0503  00B1               	movwf	??___fttol
  1667  0504  0831               	movf	??___fttol,w
  1668  0505  07BA               	addwf	___fttol@exp1,f
  1669  0506  1903               	btfsc	3,2
  1670  0507  2D1C               	goto	l1801
  1671  0508  2CF9               	goto	l1791
  1672  0509                     l1793:
  1673  0509  3018               	movlw	24
  1674  050A  023A               	subwf	___fttol@exp1,w
  1675  050B  1803               	btfsc	3,0
  1676  050C  2CC7               	goto	l1769
  1677  050D                     l571:
  1678  050D  083A               	movf	___fttol@exp1,w
  1679  050E  1903               	btfsc	3,2
  1680  050F  2D1C               	goto	l1801
  1681  0510  3001               	movlw	1
  1682  0511  00B1               	movwf	??___fttol
  1683  0512                     u1475:
  1684  0512  1003               	clrc
  1685  0513  0DB6               	rlf	___fttol@lval,f
  1686  0514  0DB7               	rlf	___fttol@lval+1,f
  1687  0515  0DB8               	rlf	___fttol@lval+2,f
  1688  0516  0DB9               	rlf	___fttol@lval+3,f
  1689  0517  0BB1               	decfsz	??___fttol,f
  1690  0518  2D12               	goto	u1475
  1691  0519  3001               	movlw	1
  1692  051A  02BA               	subwf	___fttol@exp1,f
  1693  051B  2D0D               	goto	l571
  1694  051C                     l1801:
  1695  051C  0835               	movf	___fttol@sign1,w
  1696  051D  1903               	btfsc	3,2
  1697  051E  2D2A               	goto	l1805
  1698  051F  09B6               	comf	___fttol@lval,f
  1699  0520  09B7               	comf	___fttol@lval+1,f
  1700  0521  09B8               	comf	___fttol@lval+2,f
  1701  0522  09B9               	comf	___fttol@lval+3,f
  1702  0523  0AB6               	incf	___fttol@lval,f
  1703  0524  1903               	skipnz
  1704  0525  0AB7               	incf	___fttol@lval+1,f
  1705  0526  1903               	skipnz
  1706  0527  0AB8               	incf	___fttol@lval+2,f
  1707  0528  1903               	skipnz
  1708  0529  0AB9               	incf	___fttol@lval+3,f
  1709  052A                     l1805:
  1710  052A  0839               	movf	___fttol@lval+3,w
  1711  052B  00B0               	movwf	?___fttol+3
  1712  052C  0838               	movf	___fttol@lval+2,w
  1713  052D  00AF               	movwf	?___fttol+2
  1714  052E  0837               	movf	___fttol@lval+1,w
  1715  052F  00AE               	movwf	?___fttol+1
  1716  0530  0836               	movf	___fttol@lval,w
  1717  0531  00AD               	movwf	?___fttol
  1718  0532  0008               	return
  1719  0533                     __end_of___fttol:
  1720                           
  1721                           	psect	text5
  1722  065D                     __ptext5:	
  1723 ;; *************** function _LCDWriteString *****************
  1724 ;; Defined at:
  1725 ;;		line 212 in file "lcd_hd44780_pic16.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  msg             1    wreg     PTR const unsigned char 
  1728 ;;		 -> STR_3(12), STR_2(12), STR_1(11), 
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;  msg             1   27[BANK0 ] PTR const unsigned char 
  1731 ;;		 -> STR_3(12), STR_2(12), STR_1(11), 
  1732 ;;  cc              1   26[BANK0 ] char 
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      void 
  1735 ;; Registers used:
  1736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1742 ;;      Params:         0       0       0       0       0
  1743 ;;      Locals:         0       2       0       0       0
  1744 ;;      Temps:          0       1       0       0       0
  1745 ;;      Totals:         0       3       0       0       0
  1746 ;;Total ram usage:        3 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; Hardware stack levels required when called:    5
  1749 ;; This function calls:
  1750 ;;		_LCDByte
  1751 ;; This function is called by:
  1752 ;;		_main
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           
  1757                           ;psect for function _LCDWriteString
  1758  065D                     _LCDWriteString:
  1759                           
  1760                           ;incstack = 0
  1761                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1762                           ;LCDWriteString@msg stored from wreg
  1763  065D  1283               	bcf	3,5	;RP0=0, select bank0
  1764  065E  1303               	bcf	3,6	;RP1=0, select bank0
  1765  065F  00BB               	movwf	LCDWriteString@msg
  1766  0660                     l1655:	
  1767                           ;lcd_hd44780_pic16.c: 212: void LCDWriteString(const char *msg);lcd_hd44780_pic16.c: 213
      +                          : {;lcd_hd44780_pic16.c: 242:  while(*msg!='\0')
  1768                           
  1769                           
  1770                           ;lcd_hd44780_pic16.c: 242:  while(*msg!='\0')
  1771  0660  083B               	movf	LCDWriteString@msg,w
  1772  0661  0084               	movwf	4
  1773  0662  120A  118A  27D0  120A  118A  	fcall	stringdir
  1774  0667  3A00               	xorlw	0
  1775  0668  1903               	btfsc	3,2
  1776  0669  0008               	return
  1777                           
  1778                           ;lcd_hd44780_pic16.c: 243:  {;lcd_hd44780_pic16.c: 245:  if(*msg=='%')
  1779  066A  083B               	movf	LCDWriteString@msg,w
  1780  066B  0084               	movwf	4
  1781  066C  120A  118A  27D0  120A  118A  	fcall	stringdir
  1782  0671  3A25               	xorlw	37
  1783  0672  1D03               	skipz
  1784  0673  2E98               	goto	l1651
  1785                           
  1786                           ;lcd_hd44780_pic16.c: 246:  {;lcd_hd44780_pic16.c: 247:   msg++;
  1787  0674  3001               	movlw	1
  1788  0675  00B9               	movwf	??_LCDWriteString
  1789  0676  0839               	movf	??_LCDWriteString,w
  1790  0677  07BB               	addwf	LCDWriteString@msg,f
  1791                           
  1792                           ;lcd_hd44780_pic16.c: 248:   int8_t cc=*msg-'0';
  1793  0678  083B               	movf	LCDWriteString@msg,w
  1794  0679  0084               	movwf	4
  1795  067A  120A  118A  27D0  120A  118A  	fcall	stringdir
  1796  067F  3ED0               	addlw	-48
  1797  0680  00B9               	movwf	??_LCDWriteString
  1798  0681  0839               	movf	??_LCDWriteString,w
  1799  0682  00BA               	movwf	LCDWriteString@cc
  1800                           
  1801                           ;lcd_hd44780_pic16.c: 250:   if(cc>=0 && cc<=7)
  1802  0683  1BBA               	btfsc	LCDWriteString@cc,7
  1803  0684  2E8E               	goto	l1647
  1804  0685  083A               	movf	LCDWriteString@cc,w
  1805  0686  3A80               	xorlw	128
  1806  0687  3E78               	addlw	-136
  1807  0688  1803               	skipnc
  1808  0689  2E8E               	goto	l1647
  1809                           
  1810                           ;lcd_hd44780_pic16.c: 251:   {;lcd_hd44780_pic16.c: 252:    (LCDByte(cc,1));
  1811  068A  01B2               	clrf	LCDByte@isdata
  1812  068B  0AB2               	incf	LCDByte@isdata,f
  1813  068C  083A               	movf	LCDWriteString@cc,w
  1814  068D  2EA1               	goto	L2
  1815  068E                     l1647:	
  1816                           ;lcd_hd44780_pic16.c: 253:   }
  1817                           
  1818                           
  1819                           ;lcd_hd44780_pic16.c: 255:   {;lcd_hd44780_pic16.c: 256:    (LCDByte('%',1));
  1820  068E  01B2               	clrf	LCDByte@isdata
  1821  068F  0AB2               	incf	LCDByte@isdata,f
  1822  0690  3025               	movlw	37
  1823  0691  120A  118A  26AD  120A  118A  	fcall	_LCDByte
  1824                           
  1825                           ;lcd_hd44780_pic16.c: 257:    (LCDByte(*msg,1));
  1826  0696  1283               	bcf	3,5	;RP0=0, select bank0
  1827  0697  1303               	bcf	3,6	;RP1=0, select bank0
  1828  0698                     l1651:
  1829                           
  1830                           ;lcd_hd44780_pic16.c: 261:  {;lcd_hd44780_pic16.c: 262:   (LCDByte(*msg,1));
  1831  0698  01B2               	clrf	LCDByte@isdata
  1832  0699  0AB2               	incf	LCDByte@isdata,f
  1833  069A  083B               	movf	LCDWriteString@msg,w
  1834  069B  0084               	movwf	4
  1835  069C  120A  118A  27D0  120A  118A  	fcall	stringdir
  1836  06A1                     L2:
  1837  06A1  120A  118A  26AD  120A  118A  	fcall	_LCDByte
  1838                           
  1839                           ;lcd_hd44780_pic16.c: 264:  msg++;
  1840  06A6  3001               	movlw	1
  1841  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  1842  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  1843  06A9  00B9               	movwf	??_LCDWriteString
  1844  06AA  0839               	movf	??_LCDWriteString,w
  1845  06AB  07BB               	addwf	LCDWriteString@msg,f
  1846  06AC  2E60               	goto	l1655
  1847  06AD                     __end_of_LCDWriteString:
  1848                           
  1849                           	psect	text6
  1850  059F                     __ptext6:	
  1851 ;; *************** function _LCDInit *****************
  1852 ;; Defined at:
  1853 ;;		line 154 in file "lcd_hd44780_pic16.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;  style           1    wreg     unsigned char 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;  style           1   27[BANK0 ] unsigned char 
  1858 ;;  __i             1   28[BANK0 ] unsigned char 
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  1    wreg      void 
  1861 ;; Registers used:
  1862 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1868 ;;      Params:         0       0       0       0       0
  1869 ;;      Locals:         0       2       0       0       0
  1870 ;;      Temps:          0       2       0       0       0
  1871 ;;      Totals:         0       4       0       0       0
  1872 ;;Total ram usage:        4 bytes
  1873 ;; Hardware stack levels used:    1
  1874 ;; Hardware stack levels required when called:    5
  1875 ;; This function calls:
  1876 ;;		_LCDBusyLoop
  1877 ;;		_LCDByte
  1878 ;; This function is called by:
  1879 ;;		_main
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           
  1884                           ;psect for function _LCDInit
  1885  059F                     _LCDInit:
  1886                           
  1887                           ;incstack = 0
  1888                           ; Regs used in _LCDInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1889                           ;LCDInit@style stored from wreg
  1890  059F  1283               	bcf	3,5	;RP0=0, select bank0
  1891  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  1892  05A1  00BB               	movwf	LCDInit@style
  1893                           
  1894                           ;lcd_hd44780_pic16.c: 154: void LCDInit(uint8_t style);lcd_hd44780_pic16.c: 155: {;lcd_h
      +                          d44780_pic16.c: 170:   _delay((unsigned long)((30)*(16000000/4000.0)));
  1895  05A2  309C               	movlw	156
  1896  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  1897  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  1898  05A5  00BA               	movwf	??_LCDInit+1
  1899  05A6  30D6               	movlw	214
  1900  05A7  00B9               	movwf	??_LCDInit
  1901  05A8                     u1957:
  1902  05A8  0BB9               	decfsz	??_LCDInit,f
  1903  05A9  2DA8               	goto	u1957
  1904  05AA  0BBA               	decfsz	??_LCDInit+1,f
  1905  05AB  2DA8               	goto	u1957
  1906  05AC  0000               	nop
  1907                           
  1908                           ;lcd_hd44780_pic16.c: 173:  TRISD&=(~(0x0F<<0));
  1909  05AD  30F0               	movlw	240
  1910  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  1911  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  1912  05B0  00B9               	movwf	??_LCDInit
  1913  05B1  0839               	movf	??_LCDInit,w
  1914  05B2  1683               	bsf	3,5	;RP0=1, select bank1
  1915  05B3  1303               	bcf	3,6	;RP1=0, select bank1
  1916  05B4  0588               	andwf	8,f	;volatile
  1917                           
  1918                           ;lcd_hd44780_pic16.c: 175:         TRISAbits.TRISA1=0;
  1919  05B5  1085               	bcf	5,1	;volatile
  1920                           
  1921                           ;lcd_hd44780_pic16.c: 176:         TRISAbits.TRISA3=0;
  1922  05B6  1185               	bcf	5,3	;volatile
  1923                           
  1924                           ;lcd_hd44780_pic16.c: 177:         TRISAbits.TRISA2=0;
  1925  05B7  1105               	bcf	5,2	;volatile
  1926                           
  1927                           ;lcd_hd44780_pic16.c: 179:  PORTD&=(~(0x0F<<0));
  1928  05B8  30F0               	movlw	240
  1929  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  1930  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  1931  05BB  00B9               	movwf	??_LCDInit
  1932  05BC  0839               	movf	??_LCDInit,w
  1933  05BD  0588               	andwf	8,f	;volatile
  1934                           
  1935                           ;lcd_hd44780_pic16.c: 181:         (RA1=0);
  1936  05BE  1085               	bcf	5,1	;volatile
  1937                           
  1938                           ;lcd_hd44780_pic16.c: 182:  (RA2=0);
  1939  05BF  1105               	bcf	5,2	;volatile
  1940                           
  1941                           ;lcd_hd44780_pic16.c: 183:  (RA3=0);
  1942  05C0  1185               	bcf	5,3	;volatile
  1943                           
  1944                           ;lcd_hd44780_pic16.c: 186:  _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  1945  05C1  2DC2               	nop2	;2 cycle nop
  1946                           
  1947                           ;lcd_hd44780_pic16.c: 188:  (RA1=1);
  1948  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  1949  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  1950  05C4  1485               	bsf	5,1	;volatile
  1951                           
  1952                           ;lcd_hd44780_pic16.c: 189:  PORTD|=((0b00000010)<<0);
  1953  05C5  1488               	bsf	8,1	;volatile
  1954                           
  1955                           ;lcd_hd44780_pic16.c: 190:  _delay((unsigned long)((1)*(16000000/4000000.0)));
  1956  05C6  2DC7               	nop2	;2 cycle nop
  1957  05C7  2DC8               	nop2	;2 cycle nop
  1958                           
  1959                           ;lcd_hd44780_pic16.c: 191:  (RA1=0);
  1960  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  1961  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  1962  05CA  1085               	bcf	5,1	;volatile
  1963                           
  1964                           ;lcd_hd44780_pic16.c: 192:  _delay((unsigned long)((1)*(16000000/4000000.0)));
  1965  05CB  2DCC               	nop2	;2 cycle nop
  1966  05CC  2DCD               	nop2	;2 cycle nop
  1967                           
  1968                           ;lcd_hd44780_pic16.c: 195:  LCDBusyLoop();
  1969  05CD  120A  118A  2608  120A  118A  	fcall	_LCDBusyLoop
  1970                           
  1971                           ;lcd_hd44780_pic16.c: 200:  (LCDByte(0b00101000,0));
  1972  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  1973  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  1974  05D4  01B2               	clrf	LCDByte@isdata
  1975  05D5  3028               	movlw	40
  1976  05D6  120A  118A  26AD  120A  118A  	fcall	_LCDByte
  1977                           
  1978                           ;lcd_hd44780_pic16.c: 201:         (LCDByte(0b00001100|style,0));
  1979  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  1980  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  1981  05DD  01B2               	clrf	LCDByte@isdata
  1982  05DE  083B               	movf	LCDInit@style,w
  1983  05DF  380C               	iorlw	12
  1984  05E0  120A  118A  26AD  120A  118A  	fcall	_LCDByte
  1985                           
  1986                           ;lcd_hd44780_pic16.c: 204:         (LCDByte(0b01000000,0));
  1987  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  1988  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  1989  05E7  01B2               	clrf	LCDByte@isdata
  1990  05E8  3040               	movlw	64
  1991  05E9  120A  118A  26AD  120A  118A  	fcall	_LCDByte
  1992                           
  1993                           ;lcd_hd44780_pic16.c: 206:  uint8_t __i;;lcd_hd44780_pic16.c: 207:  for(__i=0;__i<sizeof
      +                          (__cgram);__i++)
  1994  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  1995  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  1996  05F0  01BC               	clrf	LCDInit@__i
  1997  05F1                     l1625:
  1998                           
  1999                           ;lcd_hd44780_pic16.c: 208:   (LCDByte(__cgram[__i],1));
  2000  05F1  01B2               	clrf	LCDByte@isdata
  2001  05F2  0AB2               	incf	LCDByte@isdata,f
  2002  05F3  083C               	movf	LCDInit@__i,w
  2003  05F4  3EA0               	addlw	(low (___cgram| 0))& (0+255)
  2004  05F5  0084               	movwf	4
  2005  05F6  1383               	bcf	3,7	;select IRP bank1
  2006  05F7  0800               	movf	0,w
  2007  05F8  120A  118A  26AD  120A  118A  	fcall	_LCDByte
  2008  05FD  3001               	movlw	1
  2009  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  2010  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  2011  0600  00B9               	movwf	??_LCDInit
  2012  0601  0839               	movf	??_LCDInit,w
  2013  0602  07BC               	addwf	LCDInit@__i,f
  2014  0603  3040               	movlw	64
  2015  0604  023C               	subwf	LCDInit@__i,w
  2016  0605  1803               	btfsc	3,0
  2017  0606  0008               	return
  2018  0607  2DF1               	goto	l1625
  2019  0608                     __end_of_LCDInit:
  2020                           
  2021                           	psect	text7
  2022  07A2                     __ptext7:	
  2023 ;; *************** function _LCDGotoXY *****************
  2024 ;; Defined at:
  2025 ;;		line 313 in file "lcd_hd44780_pic16.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;  x               1    wreg     unsigned char 
  2028 ;;  y               1   25[BANK0 ] unsigned char 
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;  x               1   28[BANK0 ] unsigned char 
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  1    wreg      void 
  2033 ;; Registers used:
  2034 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2040 ;;      Params:         0       1       0       0       0
  2041 ;;      Locals:         0       1       0       0       0
  2042 ;;      Temps:          0       2       0       0       0
  2043 ;;      Totals:         0       4       0       0       0
  2044 ;;Total ram usage:        4 bytes
  2045 ;; Hardware stack levels used:    1
  2046 ;; Hardware stack levels required when called:    5
  2047 ;; This function calls:
  2048 ;;		_LCDByte
  2049 ;; This function is called by:
  2050 ;;		_main
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           
  2055                           ;psect for function _LCDGotoXY
  2056  07A2                     _LCDGotoXY:
  2057                           
  2058                           ;incstack = 0
  2059                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2060                           ;LCDGotoXY@x stored from wreg
  2061  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  2062  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  2063  07A4  00BC               	movwf	LCDGotoXY@x
  2064                           
  2065                           ;lcd_hd44780_pic16.c: 313: void LCDGotoXY(uint8_t x,uint8_t y);lcd_hd44780_pic16.c: 314:
      +                           {;lcd_hd44780_pic16.c: 315:   if(x>=20) return;
  2066  07A5  3014               	movlw	20
  2067  07A6  023C               	subwf	LCDGotoXY@x,w
  2068  07A7  1803               	btfsc	3,0
  2069  07A8  0008               	return
  2070  07A9  2FB3               	goto	l1667
  2071  07AA                     l148:	
  2072                           ;lcd_hd44780_pic16.c: 323:   case 1:
  2073                           
  2074                           
  2075                           ;lcd_hd44780_pic16.c: 324:    x|=0b01000000;
  2076  07AA  173C               	bsf	LCDGotoXY@x,6
  2077                           
  2078                           ;lcd_hd44780_pic16.c: 325:    break;
  2079  07AB  2FC9               	goto	l147
  2080  07AC                     l1661:
  2081                           
  2082                           ;lcd_hd44780_pic16.c: 327:    x+=0x14;
  2083  07AC  3014               	movlw	20
  2084  07AD  2FAF               	goto	L3
  2085  07AE                     l1663:	
  2086                           ;lcd_hd44780_pic16.c: 328:    break;
  2087                           
  2088                           
  2089                           ;lcd_hd44780_pic16.c: 330:    x+=0x54;
  2090  07AE  3054               	movlw	84
  2091  07AF                     L3:
  2092  07AF  00BA               	movwf	??_LCDGotoXY
  2093  07B0  083A               	movf	??_LCDGotoXY,w
  2094  07B1  07BC               	addwf	LCDGotoXY@x,f
  2095                           
  2096                           ;lcd_hd44780_pic16.c: 331:    break;
  2097  07B2  2FC9               	goto	l147
  2098  07B3                     l1667:
  2099  07B3  0839               	movf	LCDGotoXY@y,w
  2100  07B4  00BA               	movwf	??_LCDGotoXY
  2101  07B5  01BB               	clrf	??_LCDGotoXY+1
  2102                           
  2103                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2104                           ; Switch size 1, requested type "simple"
  2105                           ; Number of cases is 1, Range of values is 0 to 0
  2106                           ; switch strategies available:
  2107                           ; Name         Instructions Cycles
  2108                           ; simple_byte            4     3 (average)
  2109                           ; direct_byte           11     8 (fixed)
  2110                           ; jumptable            260     6 (fixed)
  2111                           ;	Chosen strategy is simple_byte
  2112  07B6  083B               	movf	??_LCDGotoXY+1,w
  2113  07B7  3A00               	xorlw	0	; case 0
  2114  07B8  1903               	skipnz
  2115  07B9  2FBB               	goto	l2119
  2116  07BA  2FC9               	goto	l147
  2117  07BB                     l2119:
  2118                           
  2119                           ; Switch size 1, requested type "simple"
  2120                           ; Number of cases is 4, Range of values is 0 to 3
  2121                           ; switch strategies available:
  2122                           ; Name         Instructions Cycles
  2123                           ; simple_byte           13     7 (average)
  2124                           ; direct_byte           20     8 (fixed)
  2125                           ; jumptable            260     6 (fixed)
  2126                           ;	Chosen strategy is simple_byte
  2127  07BB  083A               	movf	??_LCDGotoXY,w
  2128  07BC  3A00               	xorlw	0	; case 0
  2129  07BD  1903               	skipnz
  2130  07BE  2FC9               	goto	l147
  2131  07BF  3A01               	xorlw	1	; case 1
  2132  07C0  1903               	skipnz
  2133  07C1  2FAA               	goto	l148
  2134  07C2  3A03               	xorlw	3	; case 2
  2135  07C3  1903               	skipnz
  2136  07C4  2FAC               	goto	l1661
  2137  07C5  3A01               	xorlw	1	; case 3
  2138  07C6  1903               	skipnz
  2139  07C7  2FAE               	goto	l1663
  2140  07C8  2FC9               	goto	l147
  2141  07C9                     l147:
  2142                           
  2143                           ;lcd_hd44780_pic16.c: 354:  x|=0b10000000;
  2144  07C9  17BC               	bsf	LCDGotoXY@x,7
  2145                           
  2146                           ;lcd_hd44780_pic16.c: 355:    (LCDByte(x,0));
  2147  07CA  01B2               	clrf	LCDByte@isdata
  2148  07CB  083C               	movf	LCDGotoXY@x,w
  2149  07CC  120A  118A  26AD   	fcall	_LCDByte
  2150  07CF  0008               	return
  2151  07D0                     __end_of_LCDGotoXY:
  2152                           
  2153                           	psect	text8
  2154  06AD                     __ptext8:	
  2155 ;; *************** function _LCDByte *****************
  2156 ;; Defined at:
  2157 ;;		line 41 in file "lcd_hd44780_pic16.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  c               1    wreg     unsigned char 
  2160 ;;  isdata          1   18[BANK0 ] unsigned char 
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;  c               1   23[BANK0 ] unsigned char 
  2163 ;;  temp            1   24[BANK0 ] unsigned char 
  2164 ;;  ln              1   22[BANK0 ] unsigned char 
  2165 ;;  hn              1   21[BANK0 ] unsigned char 
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  1    wreg      void 
  2168 ;; Registers used:
  2169 ;;		wreg, status,2, status,0, pclath, cstack
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2175 ;;      Params:         0       1       0       0       0
  2176 ;;      Locals:         0       4       0       0       0
  2177 ;;      Temps:          0       2       0       0       0
  2178 ;;      Totals:         0       7       0       0       0
  2179 ;;Total ram usage:        7 bytes
  2180 ;; Hardware stack levels used:    1
  2181 ;; Hardware stack levels required when called:    4
  2182 ;; This function calls:
  2183 ;;		_LCDBusyLoop
  2184 ;; This function is called by:
  2185 ;;		_main
  2186 ;;		_LCDInit
  2187 ;;		_LCDWriteString
  2188 ;;		_LCDGotoXY
  2189 ;;		_LCDWriteInt
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           
  2194                           ;psect for function _LCDByte
  2195  06AD                     _LCDByte:
  2196                           
  2197                           ;incstack = 0
  2198                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  2199                           ;LCDByte@c stored from wreg
  2200  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  2201  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  2202  06AF  00B7               	movwf	LCDByte@c
  2203                           
  2204                           ;lcd_hd44780_pic16.c: 41: void LCDByte(uint8_t c,uint8_t isdata);lcd_hd44780_pic16.c: 42
      +                          : {;lcd_hd44780_pic16.c: 50: uint8_t hn,ln;;lcd_hd44780_pic16.c: 51: uint8_t temp;;lcd_h
      +                          d44780_pic16.c: 53: hn=c>>4;
  2205  06B0  0837               	movf	LCDByte@c,w
  2206  06B1  00B3               	movwf	??_LCDByte
  2207  06B2  3004               	movlw	4
  2208  06B3                     u905:
  2209  06B3  1003               	clrc
  2210  06B4  0CB3               	rrf	??_LCDByte,f
  2211  06B5  3EFF               	addlw	-1
  2212  06B6  1D03               	skipz
  2213  06B7  2EB3               	goto	u905
  2214  06B8  0833               	movf	??_LCDByte,w
  2215  06B9  00B4               	movwf	??_LCDByte+1
  2216  06BA  0834               	movf	??_LCDByte+1,w
  2217  06BB  00B5               	movwf	LCDByte@hn
  2218                           
  2219                           ;lcd_hd44780_pic16.c: 54: ln=(c & 0x0F);
  2220  06BC  0837               	movf	LCDByte@c,w
  2221  06BD  390F               	andlw	15
  2222  06BE  00B3               	movwf	??_LCDByte
  2223  06BF  0833               	movf	??_LCDByte,w
  2224  06C0  00B6               	movwf	LCDByte@ln
  2225                           
  2226                           ;lcd_hd44780_pic16.c: 56: if(isdata==0)
  2227  06C1  0832               	movf	LCDByte@isdata,w
  2228  06C2  1D03               	btfss	3,2
  2229  06C3  2EC6               	goto	l102
  2230                           
  2231                           ;lcd_hd44780_pic16.c: 57:  (RA3=0);
  2232  06C4  1185               	bcf	5,3	;volatile
  2233  06C5  2EC7               	goto	l103
  2234  06C6                     l102:	
  2235                           ;lcd_hd44780_pic16.c: 58: else
  2236                           
  2237                           
  2238                           ;lcd_hd44780_pic16.c: 59:  (RA3=1);
  2239  06C6  1585               	bsf	5,3	;volatile
  2240  06C7                     l103:
  2241                           
  2242                           ;lcd_hd44780_pic16.c: 61: _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  2243  06C7  2EC8               	nop2	;2 cycle nop
  2244                           
  2245                           ;lcd_hd44780_pic16.c: 63: (RA1=1);
  2246  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  2247  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  2248  06CA  1485               	bsf	5,1	;volatile
  2249                           
  2250                           ;lcd_hd44780_pic16.c: 67: temp=(PORTD & (~(0X0F<<0)))|((hn<<0));
  2251  06CB  0808               	movf	8,w	;volatile
  2252  06CC  39F0               	andlw	240
  2253  06CD  0435               	iorwf	LCDByte@hn,w
  2254  06CE  00B3               	movwf	??_LCDByte
  2255  06CF  0833               	movf	??_LCDByte,w
  2256  06D0  00B8               	movwf	LCDByte@temp
  2257                           
  2258                           ;lcd_hd44780_pic16.c: 68: PORTD=temp;
  2259  06D1  0838               	movf	LCDByte@temp,w
  2260  06D2  0088               	movwf	8	;volatile
  2261                           
  2262                           ;lcd_hd44780_pic16.c: 70: _delay((unsigned long)((1)*(16000000/4000000.0)));
  2263  06D3  2ED4               	nop2	;2 cycle nop
  2264  06D4  2ED5               	nop2	;2 cycle nop
  2265                           
  2266                           ;lcd_hd44780_pic16.c: 74: (RA1=0);
  2267  06D5  1283               	bcf	3,5	;RP0=0, select bank0
  2268  06D6  1303               	bcf	3,6	;RP1=0, select bank0
  2269  06D7  1085               	bcf	5,1	;volatile
  2270                           
  2271                           ;lcd_hd44780_pic16.c: 76: _delay((unsigned long)((1)*(16000000/4000000.0)));
  2272  06D8  2ED9               	nop2	;2 cycle nop
  2273  06D9  2EDA               	nop2	;2 cycle nop
  2274                           
  2275                           ;lcd_hd44780_pic16.c: 79: (RA1=1);
  2276  06DA  1283               	bcf	3,5	;RP0=0, select bank0
  2277  06DB  1303               	bcf	3,6	;RP1=0, select bank0
  2278  06DC  1485               	bsf	5,1	;volatile
  2279                           
  2280                           ;lcd_hd44780_pic16.c: 81: temp=(PORTD & (~(0X0F<<0)))|((ln<<0));
  2281  06DD  0808               	movf	8,w	;volatile
  2282  06DE  39F0               	andlw	240
  2283  06DF  0436               	iorwf	LCDByte@ln,w
  2284  06E0  00B3               	movwf	??_LCDByte
  2285  06E1  0833               	movf	??_LCDByte,w
  2286  06E2  00B8               	movwf	LCDByte@temp
  2287                           
  2288                           ;lcd_hd44780_pic16.c: 83: PORTD=temp;
  2289  06E3  0838               	movf	LCDByte@temp,w
  2290  06E4  0088               	movwf	8	;volatile
  2291                           
  2292                           ;lcd_hd44780_pic16.c: 85: _delay((unsigned long)((1)*(16000000/4000000.0)));
  2293  06E5  2EE6               	nop2	;2 cycle nop
  2294  06E6  2EE7               	nop2	;2 cycle nop
  2295                           
  2296                           ;lcd_hd44780_pic16.c: 89: (RA1=0);
  2297  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  2298  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  2299  06E9  1085               	bcf	5,1	;volatile
  2300                           
  2301                           ;lcd_hd44780_pic16.c: 91: _delay((unsigned long)((1)*(16000000/4000000.0)));
  2302  06EA  2EEB               	nop2	;2 cycle nop
  2303  06EB  2EEC               	nop2	;2 cycle nop
  2304                           
  2305                           ;lcd_hd44780_pic16.c: 93: LCDBusyLoop();
  2306  06EC  120A  118A  2608   	fcall	_LCDBusyLoop
  2307  06EF  0008               	return
  2308  06F0                     __end_of_LCDByte:
  2309                           
  2310                           	psect	text9
  2311  0608                     __ptext9:	
  2312 ;; *************** function _LCDBusyLoop *****************
  2313 ;; Defined at:
  2314 ;;		line 96 in file "lcd_hd44780_pic16.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;		None
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;  status          1   17[BANK0 ] unsigned char 
  2319 ;;  temp            1   16[BANK0 ] unsigned char 
  2320 ;;  busy            1   15[BANK0 ] unsigned char 
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  1    wreg      void 
  2323 ;; Registers used:
  2324 ;;		wreg, status,2, status,0
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2330 ;;      Params:         0       0       0       0       0
  2331 ;;      Locals:         0       3       0       0       0
  2332 ;;      Temps:          0       2       0       0       0
  2333 ;;      Totals:         0       5       0       0       0
  2334 ;;Total ram usage:        5 bytes
  2335 ;; Hardware stack levels used:    1
  2336 ;; Hardware stack levels required when called:    3
  2337 ;; This function calls:
  2338 ;;		Nothing
  2339 ;; This function is called by:
  2340 ;;		_LCDByte
  2341 ;;		_LCDInit
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345                           
  2346                           ;psect for function _LCDBusyLoop
  2347  0608                     _LCDBusyLoop:
  2348                           
  2349                           ;lcd_hd44780_pic16.c: 103:  TRISD|=(0x0f<<0);
  2350                           
  2351                           ;incstack = 0
  2352                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  2353  0608  300F               	movlw	15
  2354  0609  1283               	bcf	3,5	;RP0=0, select bank0
  2355  060A  1303               	bcf	3,6	;RP1=0, select bank0
  2356  060B  00AD               	movwf	??_LCDBusyLoop
  2357  060C  082D               	movf	??_LCDBusyLoop,w
  2358  060D  1683               	bsf	3,5	;RP0=1, select bank1
  2359  060E  1303               	bcf	3,6	;RP1=0, select bank1
  2360  060F  0488               	iorwf	8,f	;volatile
  2361                           
  2362                           ;lcd_hd44780_pic16.c: 106:  (RA2=1);
  2363  0610  1283               	bcf	3,5	;RP0=0, select bank0
  2364  0611  1303               	bcf	3,6	;RP1=0, select bank0
  2365  0612  1505               	bsf	5,2	;volatile
  2366                           
  2367                           ;lcd_hd44780_pic16.c: 107:  (RA3=0);
  2368  0613  1185               	bcf	5,3	;volatile
  2369                           
  2370                           ;lcd_hd44780_pic16.c: 111:  _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  2371  0614  2E15               	nop2	;2 cycle nop
  2372  0615                     l1387:
  2373                           
  2374                           ;lcd_hd44780_pic16.c: 115:  {;lcd_hd44780_pic16.c: 117:   (RA1=1);
  2375  0615  1283               	bcf	3,5	;RP0=0, select bank0
  2376  0616  1303               	bcf	3,6	;RP1=0, select bank0
  2377  0617  1485               	bsf	5,1	;volatile
  2378                           
  2379                           ;lcd_hd44780_pic16.c: 120:   _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  2380  0618  2E19               	nop2	;2 cycle nop
  2381                           
  2382                           ;lcd_hd44780_pic16.c: 122:   status=(PORTD>>0);
  2383  0619  1283               	bcf	3,5	;RP0=0, select bank0
  2384  061A  1303               	bcf	3,6	;RP1=0, select bank0
  2385  061B  0808               	movf	8,w	;volatile
  2386  061C  00AD               	movwf	??_LCDBusyLoop
  2387  061D  082D               	movf	??_LCDBusyLoop,w
  2388  061E  00B1               	movwf	LCDBusyLoop@status
  2389                           
  2390                           ;lcd_hd44780_pic16.c: 123:   status=status<<4;
  2391  061F  0831               	movf	LCDBusyLoop@status,w
  2392  0620  00AD               	movwf	??_LCDBusyLoop
  2393  0621  3003               	movlw	3
  2394  0622                     u885:
  2395  0622  1003               	clrc
  2396  0623  0DAD               	rlf	??_LCDBusyLoop,f
  2397  0624  3EFF               	addlw	-1
  2398  0625  1D03               	skipz
  2399  0626  2E22               	goto	u885
  2400  0627  1003               	clrc
  2401  0628  0D2D               	rlf	??_LCDBusyLoop,w
  2402  0629  00AE               	movwf	??_LCDBusyLoop+1
  2403  062A  082E               	movf	??_LCDBusyLoop+1,w
  2404  062B  00B1               	movwf	LCDBusyLoop@status
  2405                           
  2406                           ;lcd_hd44780_pic16.c: 125:   _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  2407  062C  2E2D               	nop2	;2 cycle nop
  2408                           
  2409                           ;lcd_hd44780_pic16.c: 128:   (RA1=0);
  2410  062D  1283               	bcf	3,5	;RP0=0, select bank0
  2411  062E  1303               	bcf	3,6	;RP1=0, select bank0
  2412  062F  1085               	bcf	5,1	;volatile
  2413                           
  2414                           ;lcd_hd44780_pic16.c: 129:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  2415  0630  2E31               	nop2	;2 cycle nop
  2416  0631  2E32               	nop2	;2 cycle nop
  2417                           
  2418                           ;lcd_hd44780_pic16.c: 131:   (RA1=1);
  2419  0632  1283               	bcf	3,5	;RP0=0, select bank0
  2420  0633  1303               	bcf	3,6	;RP1=0, select bank0
  2421  0634  1485               	bsf	5,1	;volatile
  2422                           
  2423                           ;lcd_hd44780_pic16.c: 132:   _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  2424  0635  2E36               	nop2	;2 cycle nop
  2425                           
  2426                           ;lcd_hd44780_pic16.c: 134:   temp=(PORTD>>0);
  2427  0636  1283               	bcf	3,5	;RP0=0, select bank0
  2428  0637  1303               	bcf	3,6	;RP1=0, select bank0
  2429  0638  0808               	movf	8,w	;volatile
  2430  0639  00AD               	movwf	??_LCDBusyLoop
  2431  063A  082D               	movf	??_LCDBusyLoop,w
  2432  063B  00B0               	movwf	LCDBusyLoop@temp
  2433                           
  2434                           ;lcd_hd44780_pic16.c: 135:   temp&=0x0F;
  2435  063C  300F               	movlw	15
  2436  063D  00AD               	movwf	??_LCDBusyLoop
  2437  063E  082D               	movf	??_LCDBusyLoop,w
  2438  063F  05B0               	andwf	LCDBusyLoop@temp,f
  2439                           
  2440                           ;lcd_hd44780_pic16.c: 137:   status=status|temp;
  2441  0640  0831               	movf	LCDBusyLoop@status,w
  2442  0641  0430               	iorwf	LCDBusyLoop@temp,w
  2443  0642  00AD               	movwf	??_LCDBusyLoop
  2444  0643  082D               	movf	??_LCDBusyLoop,w
  2445  0644  00B1               	movwf	LCDBusyLoop@status
  2446                           
  2447                           ;lcd_hd44780_pic16.c: 139:   busy=status & 0b10000000;
  2448  0645  0831               	movf	LCDBusyLoop@status,w
  2449  0646  3980               	andlw	128
  2450  0647  00AD               	movwf	??_LCDBusyLoop
  2451  0648  082D               	movf	??_LCDBusyLoop,w
  2452  0649  00AF               	movwf	LCDBusyLoop@busy
  2453                           
  2454                           ;lcd_hd44780_pic16.c: 141:   _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  2455  064A  2E4B               	nop2	;2 cycle nop
  2456                           
  2457                           ;lcd_hd44780_pic16.c: 143:                 (RA1=0);
  2458  064B  1283               	bcf	3,5	;RP0=0, select bank0
  2459  064C  1303               	bcf	3,6	;RP1=0, select bank0
  2460  064D  1085               	bcf	5,1	;volatile
  2461                           
  2462                           ;lcd_hd44780_pic16.c: 144:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  2463  064E  2E4F               	nop2	;2 cycle nop
  2464  064F  2E50               	nop2	;2 cycle nop
  2465                           
  2466                           ;lcd_hd44780_pic16.c: 145:  }while(busy);
  2467  0650  1283               	bcf	3,5	;RP0=0, select bank0
  2468  0651  1303               	bcf	3,6	;RP1=0, select bank0
  2469  0652  082F               	movf	LCDBusyLoop@busy,w
  2470  0653  1D03               	btfss	3,2
  2471  0654  2E15               	goto	l1387
  2472                           
  2473                           ;lcd_hd44780_pic16.c: 147:  (RA2=0);
  2474  0655  1105               	bcf	5,2	;volatile
  2475                           
  2476                           ;lcd_hd44780_pic16.c: 150:  TRISD&=(~(0x0F<<0));
  2477  0656  30F0               	movlw	240
  2478  0657  00AD               	movwf	??_LCDBusyLoop
  2479  0658  082D               	movf	??_LCDBusyLoop,w
  2480  0659  1683               	bsf	3,5	;RP0=1, select bank1
  2481  065A  1303               	bcf	3,6	;RP1=0, select bank1
  2482  065B  0588               	andwf	8,f	;volatile
  2483  065C  0008               	return
  2484  065D                     __end_of_LCDBusyLoop:
  2485                           
  2486                           	psect	text10
  2487  07F9                     __ptext10:	
  2488 ;; *************** function _InitADC *****************
  2489 ;; Defined at:
  2490 ;;		line 4 in file "ADC0808.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;		None
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;		None
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  1    wreg      void 
  2497 ;; Registers used:
  2498 ;;		wreg
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2504 ;;      Params:         0       0       0       0       0
  2505 ;;      Locals:         0       0       0       0       0
  2506 ;;      Temps:          0       0       0       0       0
  2507 ;;      Totals:         0       0       0       0       0
  2508 ;;Total ram usage:        0 bytes
  2509 ;; Hardware stack levels used:    1
  2510 ;; Hardware stack levels required when called:    3
  2511 ;; This function calls:
  2512 ;;		Nothing
  2513 ;; This function is called by:
  2514 ;;		_main
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518                           
  2519                           ;psect for function _InitADC
  2520  07F9                     _InitADC:
  2521                           
  2522                           ;ADC0808.c: 6:  TRISC=0b00001000;
  2523                           
  2524                           ;incstack = 0
  2525                           ; Regs used in _InitADC: [wreg]
  2526  07F9  3008               	movlw	8
  2527  07FA  1683               	bsf	3,5	;RP0=1, select bank1
  2528  07FB  1303               	bcf	3,6	;RP1=0, select bank1
  2529  07FC  0087               	movwf	7	;volatile
  2530                           
  2531                           ;ADC0808.c: 7:  TRISB=0xff;
  2532  07FD  30FF               	movlw	255
  2533  07FE  0086               	movwf	6	;volatile
  2534  07FF  0008               	return
  2535  0800                     __end_of_InitADC:
  2536                           
  2537                           	psect	text11
  2538  0429                     __ptext11:	
  2539 ;; *************** function _Count_Up *****************
  2540 ;; Defined at:
  2541 ;;		line 41 in file "main.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;		None
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;		None
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  1    wreg      void 
  2548 ;; Registers used:
  2549 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2555 ;;      Params:         0       0       0       0       0
  2556 ;;      Locals:         0       0       0       0       0
  2557 ;;      Temps:          0       3       0       0       0
  2558 ;;      Totals:         0       3       0       0       0
  2559 ;;Total ram usage:        3 bytes
  2560 ;; Hardware stack levels used:    1
  2561 ;; Hardware stack levels required when called:    2
  2562 ;; This function calls:
  2563 ;;		_ReadADC
  2564 ;;		___ftdiv
  2565 ;;		___ftmul
  2566 ;;		___lwtoft
  2567 ;; This function is called by:
  2568 ;;		Interrupt level 1
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572                           
  2573                           ;psect for function _Count_Up
  2574  0429                     _Count_Up:
  2575                           
  2576                           ;main.c: 43:   if (TMR2IE && TMR2IF)
  2577  0429  1683               	bsf	3,5	;RP0=1, select bank1
  2578  042A  1303               	bcf	3,6	;RP1=0, select bank1
  2579  042B  1C8C               	btfss	12,1	;volatile
  2580  042C  2CAC               	goto	i1l70
  2581  042D  1283               	bcf	3,5	;RP0=0, select bank0
  2582  042E  1303               	bcf	3,6	;RP1=0, select bank0
  2583  042F  1C8C               	btfss	12,1	;volatile
  2584  0430  2CAC               	goto	i1l70
  2585                           
  2586                           ;main.c: 44:    {;main.c: 45:   TMR2IF=0;
  2587  0431  108C               	bcf	12,1	;volatile
  2588                           
  2589                           ;main.c: 46:     count++;
  2590  0432  3001               	movlw	1
  2591  0433  07D9               	addwf	_count,f
  2592  0434  1803               	skipnc
  2593  0435  0ADA               	incf	_count+1,f
  2594  0436  3000               	movlw	0
  2595  0437  07DA               	addwf	_count+1,f
  2596                           
  2597                           ;main.c: 47:        if(count==20)
  2598  0438  3014               	movlw	20
  2599  0439  0659               	xorwf	_count,w
  2600  043A  045A               	iorwf	_count+1,w
  2601  043B  1D03               	btfss	3,2
  2602  043C  2CAC               	goto	i1l70
  2603                           
  2604                           ;main.c: 48:        {;main.c: 49:          count=0;
  2605  043D  01D9               	clrf	_count
  2606  043E  01DA               	clrf	_count+1
  2607                           
  2608                           ;main.c: 50:          count1++;
  2609  043F  3001               	movlw	1
  2610  0440  07D7               	addwf	_count1,f
  2611  0441  1803               	skipnc
  2612  0442  0AD8               	incf	_count1+1,f
  2613  0443  3000               	movlw	0
  2614  0444  07D8               	addwf	_count1+1,f
  2615                           
  2616                           ;main.c: 51:         if(do_dienap)
  2617  0445  085E               	movf	_do_dienap,w
  2618  0446  1903               	btfsc	3,2
  2619  0447  2C7B               	goto	i1l1883
  2620                           
  2621                           ;main.c: 52:         {;main.c: 53:           Dienap=(float)(ReadADC(0));
  2622  0448  3000               	movlw	0
  2623  0449  120A  118A  21C1  120A  118A  	fcall	_ReadADC
  2624  044E  0871               	movf	?_ReadADC+1,w
  2625  044F  00FA               	movwf	___lwtoft@c+1
  2626  0450  0870               	movf	?_ReadADC,w
  2627  0451  00F9               	movwf	___lwtoft@c
  2628  0452  120A  158A  27D7  120A  118A  	fcall	___lwtoft
  2629  0457  0879               	movf	?___lwtoft,w
  2630  0458  1283               	bcf	3,5	;RP0=0, select bank0
  2631  0459  1303               	bcf	3,6	;RP1=0, select bank0
  2632  045A  00CF               	movwf	_Dienap
  2633  045B  087A               	movf	?___lwtoft+1,w
  2634  045C  00D0               	movwf	_Dienap+1
  2635  045D  087B               	movf	?___lwtoft+2,w
  2636  045E  00D1               	movwf	_Dienap+2
  2637                           
  2638                           ;main.c: 54:           Dienap=Dienap*1.962;
  2639  045F  3023               	movlw	35
  2640  0460  00F8               	movwf	___ftmul@f1
  2641  0461  30FB               	movlw	251
  2642  0462  00F9               	movwf	___ftmul@f1+1
  2643  0463  303F               	movlw	63
  2644  0464  00FA               	movwf	___ftmul@f1+2
  2645  0465  084F               	movf	_Dienap,w
  2646  0466  00FB               	movwf	___ftmul@f2
  2647  0467  0850               	movf	_Dienap+1,w
  2648  0468  00FC               	movwf	___ftmul@f2+1
  2649  0469  0851               	movf	_Dienap+2,w
  2650  046A  00FD               	movwf	___ftmul@f2+2
  2651  046B  120A  118A  22A2  120A  118A  	fcall	___ftmul
  2652  0470  0878               	movf	?___ftmul,w
  2653  0471  1283               	bcf	3,5	;RP0=0, select bank0
  2654  0472  1303               	bcf	3,6	;RP1=0, select bank0
  2655  0473  00CF               	movwf	_Dienap
  2656  0474  0879               	movf	?___ftmul+1,w
  2657  0475  00D0               	movwf	_Dienap+1
  2658  0476  087A               	movf	?___ftmul+2,w
  2659  0477  00D1               	movwf	_Dienap+2
  2660                           
  2661                           ;main.c: 55:           adc_ok=1;
  2662  0478  01DD               	clrf	_adc_ok
  2663  0479  0ADD               	incf	_adc_ok,f
  2664                           
  2665                           ;main.c: 56:         }
  2666  047A  2CAB               	goto	i1l1887
  2667  047B                     i1l1883:
  2668                           
  2669                           ;main.c: 58:          {;main.c: 59:          Dong = (float)(ReadADC(1));
  2670  047B  3001               	movlw	1
  2671  047C  120A  118A  21C1  120A  118A  	fcall	_ReadADC
  2672  0481  0871               	movf	?_ReadADC+1,w
  2673  0482  00FA               	movwf	___lwtoft@c+1
  2674  0483  0870               	movf	?_ReadADC,w
  2675  0484  00F9               	movwf	___lwtoft@c
  2676  0485  120A  158A  27D7  120A  118A  	fcall	___lwtoft
  2677  048A  0879               	movf	?___lwtoft,w
  2678  048B  1283               	bcf	3,5	;RP0=0, select bank0
  2679  048C  1303               	bcf	3,6	;RP1=0, select bank0
  2680  048D  00D2               	movwf	_Dong
  2681  048E  087A               	movf	?___lwtoft+1,w
  2682  048F  00D3               	movwf	_Dong+1
  2683  0490  087B               	movf	?___lwtoft+2,w
  2684  0491  00D4               	movwf	_Dong+2
  2685                           
  2686                           ;main.c: 60:          Dong=Dong/2.55;
  2687  0492  3033               	movlw	51
  2688  0493  00F8               	movwf	___ftdiv@f2
  2689  0494  3023               	movlw	35
  2690  0495  00F9               	movwf	___ftdiv@f2+1
  2691  0496  3040               	movlw	64
  2692  0497  00FA               	movwf	___ftdiv@f2+2
  2693  0498  0852               	movf	_Dong,w
  2694  0499  00FB               	movwf	___ftdiv@f1
  2695  049A  0853               	movf	_Dong+1,w
  2696  049B  00FC               	movwf	___ftdiv@f1+1
  2697  049C  0854               	movf	_Dong+2,w
  2698  049D  00FD               	movwf	___ftdiv@f1+2
  2699  049E  120A  118A  2373  120A  118A  	fcall	___ftdiv
  2700  04A3  0878               	movf	?___ftdiv,w
  2701  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  2702  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  2703  04A6  00D2               	movwf	_Dong
  2704  04A7  0879               	movf	?___ftdiv+1,w
  2705  04A8  00D3               	movwf	_Dong+1
  2706  04A9  087A               	movf	?___ftdiv+2,w
  2707  04AA  00D4               	movwf	_Dong+2
  2708  04AB                     i1l1887:
  2709                           
  2710                           ;main.c: 62:          do_dienap=~do_dienap;
  2711  04AB  09DE               	comf	_do_dienap,f
  2712  04AC                     i1l70:
  2713  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  2714  04AD  082C               	movf	??_Count_Up+2,w
  2715  04AE  008A               	movwf	10
  2716  04AF  082B               	movf	??_Count_Up+1,w
  2717  04B0  0084               	movwf	4
  2718  04B1  0E2A               	swapf	??_Count_Up,w
  2719  04B2  0083               	movwf	3
  2720  04B3  0EFE               	swapf	126,f
  2721  04B4  0E7E               	swapf	126,w
  2722  04B5  0009               	retfie
  2723  04B6                     __end_of_Count_Up:
  2724                           
  2725                           	psect	intentry
  2726  0004                     __pintentry:	
  2727                           ;incstack = 0
  2728                           ; Regs used in _Count_Up: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2729                           
  2730  0004                     interrupt_function:
  2731  007E                     saved_w	set	btemp
  2732  0004  00FE               	movwf	btemp
  2733  0005  0E03               	swapf	3,w
  2734  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2735  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2736  0008  00AA               	movwf	??_Count_Up
  2737  0009  0804               	movf	4,w
  2738  000A  00AB               	movwf	??_Count_Up+1
  2739  000B  080A               	movf	10,w
  2740  000C  00AC               	movwf	??_Count_Up+2
  2741  000D  120A  118A  2C29   	ljmp	_Count_Up
  2742                           
  2743                           	psect	text12
  2744  0FD7                     __ptext12:	
  2745 ;; *************** function ___lwtoft *****************
  2746 ;; Defined at:
  2747 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwtoft.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;  c               2    9[COMMON] unsigned int 
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;		None
  2752 ;; Return value:  Size  Location     Type
  2753 ;;                  3    9[COMMON] float 
  2754 ;; Registers used:
  2755 ;;		wreg, status,2, status,0, pclath, cstack
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/0
  2758 ;;		On exit  : 0/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2761 ;;      Params:         3       0       0       0       0
  2762 ;;      Locals:         0       0       0       0       0
  2763 ;;      Temps:          1       0       0       0       0
  2764 ;;      Totals:         4       0       0       0       0
  2765 ;;Total ram usage:        4 bytes
  2766 ;; Hardware stack levels used:    1
  2767 ;; Hardware stack levels required when called:    1
  2768 ;; This function calls:
  2769 ;;		___ftpack
  2770 ;; This function is called by:
  2771 ;;		_Count_Up
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775                           
  2776                           ;psect for function ___lwtoft
  2777  0FD7                     ___lwtoft:
  2778                           
  2779                           ;incstack = 0
  2780                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  2781  0FD7  0879               	movf	___lwtoft@c,w
  2782  0FD8  00F0               	movwf	___ftpack@arg
  2783  0FD9  087A               	movf	___lwtoft@c+1,w
  2784  0FDA  00F1               	movwf	___ftpack@arg+1
  2785  0FDB  01F2               	clrf	___ftpack@arg+2
  2786  0FDC  308E               	movlw	142
  2787  0FDD  00FC               	movwf	??___lwtoft
  2788  0FDE  087C               	movf	??___lwtoft,w
  2789  0FDF  00F3               	movwf	___ftpack@exp
  2790  0FE0  01F4               	clrf	___ftpack@sign
  2791  0FE1  120A  118A  2533   	fcall	___ftpack
  2792  0FE4  0870               	movf	?___ftpack,w
  2793  0FE5  00F9               	movwf	?___lwtoft
  2794  0FE6  0871               	movf	?___ftpack+1,w
  2795  0FE7  00FA               	movwf	?___lwtoft+1
  2796  0FE8  0872               	movf	?___ftpack+2,w
  2797  0FE9  00FB               	movwf	?___lwtoft+2
  2798  0FEA  0008               	return
  2799  0FEB                     __end_of___lwtoft:
  2800                           
  2801                           	psect	text13
  2802  02A2                     __ptext13:	
  2803 ;; *************** function ___ftmul *****************
  2804 ;; Defined at:
  2805 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ftmul.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;  f1              3    8[COMMON] float 
  2808 ;;  f2              3   11[COMMON] float 
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  2811 ;;  sign            1    9[BANK0 ] unsigned char 
  2812 ;;  cntr            1    8[BANK0 ] unsigned char 
  2813 ;;  exp             1    4[BANK0 ] unsigned char 
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  3    8[COMMON] float 
  2816 ;; Registers used:
  2817 ;;		wreg, status,2, status,0, pclath, cstack
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2823 ;;      Params:         6       0       0       0       0
  2824 ;;      Locals:         0       6       0       0       0
  2825 ;;      Temps:          0       4       0       0       0
  2826 ;;      Totals:         6      10       0       0       0
  2827 ;;Total ram usage:       16 bytes
  2828 ;; Hardware stack levels used:    1
  2829 ;; Hardware stack levels required when called:    1
  2830 ;; This function calls:
  2831 ;;		___ftpack
  2832 ;; This function is called by:
  2833 ;;		_Count_Up
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           
  2838                           ;psect for function ___ftmul
  2839  02A2                     ___ftmul:
  2840                           
  2841                           ;incstack = 0
  2842                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2843  02A2  0878               	movf	___ftmul@f1,w
  2844  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  2845  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  2846  02A5  00A0               	movwf	??___ftmul
  2847  02A6  0879               	movf	___ftmul@f1+1,w
  2848  02A7  00A1               	movwf	??___ftmul+1
  2849  02A8  087A               	movf	___ftmul@f1+2,w
  2850  02A9  00A2               	movwf	??___ftmul+2
  2851  02AA  1003               	clrc
  2852  02AB  0D21               	rlf	??___ftmul+1,w
  2853  02AC  0D22               	rlf	??___ftmul+2,w
  2854  02AD  00A3               	movwf	??___ftmul+3
  2855  02AE  0823               	movf	??___ftmul+3,w
  2856  02AF  00A4               	movwf	___ftmul@exp
  2857  02B0  0824               	movf	___ftmul@exp,w
  2858  02B1  1D03               	btfss	3,2
  2859  02B2  2ABA               	goto	i1l1723
  2860  02B3  3000               	movlw	0
  2861  02B4  00F8               	movwf	?___ftmul
  2862  02B5  3000               	movlw	0
  2863  02B6  00F9               	movwf	?___ftmul+1
  2864  02B7  3000               	movlw	0
  2865  02B8  00FA               	movwf	?___ftmul+2
  2866  02B9  0008               	return
  2867  02BA                     i1l1723:
  2868  02BA  087B               	movf	___ftmul@f2,w
  2869  02BB  00A0               	movwf	??___ftmul
  2870  02BC  087C               	movf	___ftmul@f2+1,w
  2871  02BD  00A1               	movwf	??___ftmul+1
  2872  02BE  087D               	movf	___ftmul@f2+2,w
  2873  02BF  00A2               	movwf	??___ftmul+2
  2874  02C0  1003               	clrc
  2875  02C1  0D21               	rlf	??___ftmul+1,w
  2876  02C2  0D22               	rlf	??___ftmul+2,w
  2877  02C3  00A3               	movwf	??___ftmul+3
  2878  02C4  0823               	movf	??___ftmul+3,w
  2879  02C5  00A9               	movwf	___ftmul@sign
  2880  02C6  0829               	movf	___ftmul@sign,w
  2881  02C7  1D03               	btfss	3,2
  2882  02C8  2AD0               	goto	i1l1729
  2883  02C9  3000               	movlw	0
  2884  02CA  00F8               	movwf	?___ftmul
  2885  02CB  3000               	movlw	0
  2886  02CC  00F9               	movwf	?___ftmul+1
  2887  02CD  3000               	movlw	0
  2888  02CE  00FA               	movwf	?___ftmul+2
  2889  02CF  0008               	return
  2890  02D0                     i1l1729:
  2891  02D0  0829               	movf	___ftmul@sign,w
  2892  02D1  3E7B               	addlw	123
  2893  02D2  00A0               	movwf	??___ftmul
  2894  02D3  0820               	movf	??___ftmul,w
  2895  02D4  07A4               	addwf	___ftmul@exp,f
  2896  02D5  0878               	movf	___ftmul@f1,w
  2897  02D6  00A0               	movwf	??___ftmul
  2898  02D7  0879               	movf	___ftmul@f1+1,w
  2899  02D8  00A1               	movwf	??___ftmul+1
  2900  02D9  087A               	movf	___ftmul@f1+2,w
  2901  02DA  00A2               	movwf	??___ftmul+2
  2902  02DB  3010               	movlw	16
  2903  02DC                     u128_25:
  2904  02DC  1003               	clrc
  2905  02DD  0CA2               	rrf	??___ftmul+2,f
  2906  02DE  0CA1               	rrf	??___ftmul+1,f
  2907  02DF  0CA0               	rrf	??___ftmul,f
  2908  02E0  3EFF               	addlw	-1
  2909  02E1  1D03               	skipz
  2910  02E2  2ADC               	goto	u128_25
  2911  02E3  0820               	movf	??___ftmul,w
  2912  02E4  00A3               	movwf	??___ftmul+3
  2913  02E5  0823               	movf	??___ftmul+3,w
  2914  02E6  00A9               	movwf	___ftmul@sign
  2915  02E7  087B               	movf	___ftmul@f2,w
  2916  02E8  00A0               	movwf	??___ftmul
  2917  02E9  087C               	movf	___ftmul@f2+1,w
  2918  02EA  00A1               	movwf	??___ftmul+1
  2919  02EB  087D               	movf	___ftmul@f2+2,w
  2920  02EC  00A2               	movwf	??___ftmul+2
  2921  02ED  3010               	movlw	16
  2922  02EE                     u129_25:
  2923  02EE  1003               	clrc
  2924  02EF  0CA2               	rrf	??___ftmul+2,f
  2925  02F0  0CA1               	rrf	??___ftmul+1,f
  2926  02F1  0CA0               	rrf	??___ftmul,f
  2927  02F2  3EFF               	addlw	-1
  2928  02F3  1D03               	skipz
  2929  02F4  2AEE               	goto	u129_25
  2930  02F5  0820               	movf	??___ftmul,w
  2931  02F6  00A3               	movwf	??___ftmul+3
  2932  02F7  0823               	movf	??___ftmul+3,w
  2933  02F8  06A9               	xorwf	___ftmul@sign,f
  2934  02F9  3080               	movlw	128
  2935  02FA  00A0               	movwf	??___ftmul
  2936  02FB  0820               	movf	??___ftmul,w
  2937  02FC  05A9               	andwf	___ftmul@sign,f
  2938  02FD  17F9               	bsf	___ftmul@f1+1,7
  2939  02FE  17FC               	bsf	___ftmul@f2+1,7
  2940  02FF  30FF               	movlw	255
  2941  0300  05FB               	andwf	___ftmul@f2,f
  2942  0301  30FF               	movlw	255
  2943  0302  05FC               	andwf	___ftmul@f2+1,f
  2944  0303  3000               	movlw	0
  2945  0304  05FD               	andwf	___ftmul@f2+2,f
  2946  0305  3000               	movlw	0
  2947  0306  00A5               	movwf	___ftmul@f3_as_product
  2948  0307  3000               	movlw	0
  2949  0308  00A6               	movwf	___ftmul@f3_as_product+1
  2950  0309  3000               	movlw	0
  2951  030A  00A7               	movwf	___ftmul@f3_as_product+2
  2952  030B  3007               	movlw	7
  2953  030C  00A0               	movwf	??___ftmul
  2954  030D  0820               	movf	??___ftmul,w
  2955  030E  00A8               	movwf	___ftmul@cntr
  2956  030F                     i1l1741:
  2957  030F  1C78               	btfss	___ftmul@f1,0
  2958  0310  2B1F               	goto	i1l1745
  2959  0311  087B               	movf	___ftmul@f2,w
  2960  0312  07A5               	addwf	___ftmul@f3_as_product,f
  2961  0313  087C               	movf	___ftmul@f2+1,w
  2962  0314  1103               	clrz
  2963  0315  1803               	skipnc
  2964  0316  0A7C               	incf	___ftmul@f2+1,w
  2965  0317  1D03               	btfss	3,2
  2966  0318  07A6               	addwf	___ftmul@f3_as_product+1,f
  2967  0319  087D               	movf	___ftmul@f2+2,w
  2968  031A  1103               	clrz
  2969  031B  1803               	skipnc
  2970  031C  0A7D               	incf	___ftmul@f2+2,w
  2971  031D  1D03               	btfss	3,2
  2972  031E  07A7               	addwf	___ftmul@f3_as_product+2,f
  2973  031F                     i1l1745:
  2974  031F  3001               	movlw	1
  2975  0320                     u132_25:
  2976  0320  1003               	clrc
  2977  0321  0CFA               	rrf	___ftmul@f1+2,f
  2978  0322  0CF9               	rrf	___ftmul@f1+1,f
  2979  0323  0CF8               	rrf	___ftmul@f1,f
  2980  0324  3EFF               	addlw	-1
  2981  0325  1D03               	skipz
  2982  0326  2B20               	goto	u132_25
  2983  0327  3001               	movlw	1
  2984  0328                     u133_25:
  2985  0328  1003               	clrc
  2986  0329  0DFB               	rlf	___ftmul@f2,f
  2987  032A  0DFC               	rlf	___ftmul@f2+1,f
  2988  032B  0DFD               	rlf	___ftmul@f2+2,f
  2989  032C  3EFF               	addlw	-1
  2990  032D  1D03               	skipz
  2991  032E  2B28               	goto	u133_25
  2992  032F  3001               	movlw	1
  2993  0330  02A8               	subwf	___ftmul@cntr,f
  2994  0331  1D03               	btfss	3,2
  2995  0332  2B0F               	goto	i1l1741
  2996  0333  3009               	movlw	9
  2997  0334  00A0               	movwf	??___ftmul
  2998  0335  0820               	movf	??___ftmul,w
  2999  0336  00A8               	movwf	___ftmul@cntr
  3000  0337                     i1l1753:
  3001  0337  1C78               	btfss	___ftmul@f1,0
  3002  0338  2B47               	goto	i1l1757
  3003  0339  087B               	movf	___ftmul@f2,w
  3004  033A  07A5               	addwf	___ftmul@f3_as_product,f
  3005  033B  087C               	movf	___ftmul@f2+1,w
  3006  033C  1103               	clrz
  3007  033D  1803               	skipnc
  3008  033E  0A7C               	incf	___ftmul@f2+1,w
  3009  033F  1D03               	btfss	3,2
  3010  0340  07A6               	addwf	___ftmul@f3_as_product+1,f
  3011  0341  087D               	movf	___ftmul@f2+2,w
  3012  0342  1103               	clrz
  3013  0343  1803               	skipnc
  3014  0344  0A7D               	incf	___ftmul@f2+2,w
  3015  0345  1D03               	btfss	3,2
  3016  0346  07A7               	addwf	___ftmul@f3_as_product+2,f
  3017  0347                     i1l1757:
  3018  0347  3001               	movlw	1
  3019  0348                     u137_25:
  3020  0348  1003               	clrc
  3021  0349  0CFA               	rrf	___ftmul@f1+2,f
  3022  034A  0CF9               	rrf	___ftmul@f1+1,f
  3023  034B  0CF8               	rrf	___ftmul@f1,f
  3024  034C  3EFF               	addlw	-1
  3025  034D  1D03               	skipz
  3026  034E  2B48               	goto	u137_25
  3027  034F  3001               	movlw	1
  3028  0350                     u138_25:
  3029  0350  1003               	clrc
  3030  0351  0CA7               	rrf	___ftmul@f3_as_product+2,f
  3031  0352  0CA6               	rrf	___ftmul@f3_as_product+1,f
  3032  0353  0CA5               	rrf	___ftmul@f3_as_product,f
  3033  0354  3EFF               	addlw	-1
  3034  0355  1D03               	skipz
  3035  0356  2B50               	goto	u138_25
  3036  0357  3001               	movlw	1
  3037  0358  02A8               	subwf	___ftmul@cntr,f
  3038  0359  1D03               	btfss	3,2
  3039  035A  2B37               	goto	i1l1753
  3040  035B  0825               	movf	___ftmul@f3_as_product,w
  3041  035C  00F0               	movwf	___ftpack@arg
  3042  035D  0826               	movf	___ftmul@f3_as_product+1,w
  3043  035E  00F1               	movwf	___ftpack@arg+1
  3044  035F  0827               	movf	___ftmul@f3_as_product+2,w
  3045  0360  00F2               	movwf	___ftpack@arg+2
  3046  0361  0824               	movf	___ftmul@exp,w
  3047  0362  00A0               	movwf	??___ftmul
  3048  0363  0820               	movf	??___ftmul,w
  3049  0364  00F3               	movwf	___ftpack@exp
  3050  0365  0829               	movf	___ftmul@sign,w
  3051  0366  00A1               	movwf	??___ftmul+1
  3052  0367  0821               	movf	??___ftmul+1,w
  3053  0368  00F4               	movwf	___ftpack@sign
  3054  0369  120A  118A  2533   	fcall	___ftpack
  3055  036C  0870               	movf	?___ftpack,w
  3056  036D  00F8               	movwf	?___ftmul
  3057  036E  0871               	movf	?___ftpack+1,w
  3058  036F  00F9               	movwf	?___ftmul+1
  3059  0370  0872               	movf	?___ftpack+2,w
  3060  0371  00FA               	movwf	?___ftmul+2
  3061  0372  0008               	return
  3062  0373                     __end_of___ftmul:
  3063                           
  3064                           	psect	text14
  3065  0373                     __ptext14:	
  3066 ;; *************** function ___ftdiv *****************
  3067 ;; Defined at:
  3068 ;;		line 56 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ftdiv.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;  f2              3    8[COMMON] float 
  3071 ;;  f1              3   11[COMMON] float 
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;  f3              3    5[BANK0 ] float 
  3074 ;;  sign            1    9[BANK0 ] unsigned char 
  3075 ;;  exp             1    8[BANK0 ] unsigned char 
  3076 ;;  cntr            1    4[BANK0 ] unsigned char 
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  3    8[COMMON] float 
  3079 ;; Registers used:
  3080 ;;		wreg, status,2, status,0, pclath, cstack
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3086 ;;      Params:         6       0       0       0       0
  3087 ;;      Locals:         0       6       0       0       0
  3088 ;;      Temps:          0       4       0       0       0
  3089 ;;      Totals:         6      10       0       0       0
  3090 ;;Total ram usage:       16 bytes
  3091 ;; Hardware stack levels used:    1
  3092 ;; Hardware stack levels required when called:    1
  3093 ;; This function calls:
  3094 ;;		___ftpack
  3095 ;; This function is called by:
  3096 ;;		_Count_Up
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           
  3101                           ;psect for function ___ftdiv
  3102  0373                     ___ftdiv:
  3103                           
  3104                           ;incstack = 0
  3105                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3106  0373  087B               	movf	___ftdiv@f1,w
  3107  0374  1283               	bcf	3,5	;RP0=0, select bank0
  3108  0375  1303               	bcf	3,6	;RP1=0, select bank0
  3109  0376  00A0               	movwf	??___ftdiv
  3110  0377  087C               	movf	___ftdiv@f1+1,w
  3111  0378  00A1               	movwf	??___ftdiv+1
  3112  0379  087D               	movf	___ftdiv@f1+2,w
  3113  037A  00A2               	movwf	??___ftdiv+2
  3114  037B  1003               	clrc
  3115  037C  0D21               	rlf	??___ftdiv+1,w
  3116  037D  0D22               	rlf	??___ftdiv+2,w
  3117  037E  00A3               	movwf	??___ftdiv+3
  3118  037F  0823               	movf	??___ftdiv+3,w
  3119  0380  00A8               	movwf	___ftdiv@exp
  3120  0381  0828               	movf	___ftdiv@exp,w
  3121  0382  1D03               	btfss	3,2
  3122  0383  2B8B               	goto	i1l1681
  3123  0384  3000               	movlw	0
  3124  0385  00F8               	movwf	?___ftdiv
  3125  0386  3000               	movlw	0
  3126  0387  00F9               	movwf	?___ftdiv+1
  3127  0388  3000               	movlw	0
  3128  0389  00FA               	movwf	?___ftdiv+2
  3129  038A  0008               	return
  3130  038B                     i1l1681:
  3131  038B  0878               	movf	___ftdiv@f2,w
  3132  038C  00A0               	movwf	??___ftdiv
  3133  038D  0879               	movf	___ftdiv@f2+1,w
  3134  038E  00A1               	movwf	??___ftdiv+1
  3135  038F  087A               	movf	___ftdiv@f2+2,w
  3136  0390  00A2               	movwf	??___ftdiv+2
  3137  0391  1003               	clrc
  3138  0392  0D21               	rlf	??___ftdiv+1,w
  3139  0393  0D22               	rlf	??___ftdiv+2,w
  3140  0394  00A3               	movwf	??___ftdiv+3
  3141  0395  0823               	movf	??___ftdiv+3,w
  3142  0396  00A9               	movwf	___ftdiv@sign
  3143  0397  0829               	movf	___ftdiv@sign,w
  3144  0398  1D03               	btfss	3,2
  3145  0399  2BA1               	goto	i1l1687
  3146  039A  3000               	movlw	0
  3147  039B  00F8               	movwf	?___ftdiv
  3148  039C  3000               	movlw	0
  3149  039D  00F9               	movwf	?___ftdiv+1
  3150  039E  3000               	movlw	0
  3151  039F  00FA               	movwf	?___ftdiv+2
  3152  03A0  0008               	return
  3153  03A1                     i1l1687:
  3154  03A1  3000               	movlw	0
  3155  03A2  00A5               	movwf	___ftdiv@f3
  3156  03A3  3000               	movlw	0
  3157  03A4  00A6               	movwf	___ftdiv@f3+1
  3158  03A5  3000               	movlw	0
  3159  03A6  00A7               	movwf	___ftdiv@f3+2
  3160  03A7  3089               	movlw	137
  3161  03A8  0729               	addwf	___ftdiv@sign,w
  3162  03A9  00A0               	movwf	??___ftdiv
  3163  03AA  0820               	movf	??___ftdiv,w
  3164  03AB  02A8               	subwf	___ftdiv@exp,f
  3165  03AC  087B               	movf	___ftdiv@f1,w
  3166  03AD  00A0               	movwf	??___ftdiv
  3167  03AE  087C               	movf	___ftdiv@f1+1,w
  3168  03AF  00A1               	movwf	??___ftdiv+1
  3169  03B0  087D               	movf	___ftdiv@f1+2,w
  3170  03B1  00A2               	movwf	??___ftdiv+2
  3171  03B2  3010               	movlw	16
  3172  03B3                     u120_25:
  3173  03B3  1003               	clrc
  3174  03B4  0CA2               	rrf	??___ftdiv+2,f
  3175  03B5  0CA1               	rrf	??___ftdiv+1,f
  3176  03B6  0CA0               	rrf	??___ftdiv,f
  3177  03B7  3EFF               	addlw	-1
  3178  03B8  1D03               	skipz
  3179  03B9  2BB3               	goto	u120_25
  3180  03BA  0820               	movf	??___ftdiv,w
  3181  03BB  00A3               	movwf	??___ftdiv+3
  3182  03BC  0823               	movf	??___ftdiv+3,w
  3183  03BD  00A9               	movwf	___ftdiv@sign
  3184  03BE  0878               	movf	___ftdiv@f2,w
  3185  03BF  00A0               	movwf	??___ftdiv
  3186  03C0  0879               	movf	___ftdiv@f2+1,w
  3187  03C1  00A1               	movwf	??___ftdiv+1
  3188  03C2  087A               	movf	___ftdiv@f2+2,w
  3189  03C3  00A2               	movwf	??___ftdiv+2
  3190  03C4  3010               	movlw	16
  3191  03C5                     u121_25:
  3192  03C5  1003               	clrc
  3193  03C6  0CA2               	rrf	??___ftdiv+2,f
  3194  03C7  0CA1               	rrf	??___ftdiv+1,f
  3195  03C8  0CA0               	rrf	??___ftdiv,f
  3196  03C9  3EFF               	addlw	-1
  3197  03CA  1D03               	skipz
  3198  03CB  2BC5               	goto	u121_25
  3199  03CC  0820               	movf	??___ftdiv,w
  3200  03CD  00A3               	movwf	??___ftdiv+3
  3201  03CE  0823               	movf	??___ftdiv+3,w
  3202  03CF  06A9               	xorwf	___ftdiv@sign,f
  3203  03D0  3080               	movlw	128
  3204  03D1  00A0               	movwf	??___ftdiv
  3205  03D2  0820               	movf	??___ftdiv,w
  3206  03D3  05A9               	andwf	___ftdiv@sign,f
  3207  03D4  17FC               	bsf	___ftdiv@f1+1,7
  3208  03D5  30FF               	movlw	255
  3209  03D6  05FB               	andwf	___ftdiv@f1,f
  3210  03D7  30FF               	movlw	255
  3211  03D8  05FC               	andwf	___ftdiv@f1+1,f
  3212  03D9  3000               	movlw	0
  3213  03DA  05FD               	andwf	___ftdiv@f1+2,f
  3214  03DB  17F9               	bsf	___ftdiv@f2+1,7
  3215  03DC  30FF               	movlw	255
  3216  03DD  05F8               	andwf	___ftdiv@f2,f
  3217  03DE  30FF               	movlw	255
  3218  03DF  05F9               	andwf	___ftdiv@f2+1,f
  3219  03E0  3000               	movlw	0
  3220  03E1  05FA               	andwf	___ftdiv@f2+2,f
  3221  03E2  3018               	movlw	24
  3222  03E3  00A0               	movwf	??___ftdiv
  3223  03E4  0820               	movf	??___ftdiv,w
  3224  03E5  00A4               	movwf	___ftdiv@cntr
  3225  03E6                     i1l1701:
  3226  03E6  3001               	movlw	1
  3227  03E7                     u122_25:
  3228  03E7  1003               	clrc
  3229  03E8  0DA5               	rlf	___ftdiv@f3,f
  3230  03E9  0DA6               	rlf	___ftdiv@f3+1,f
  3231  03EA  0DA7               	rlf	___ftdiv@f3+2,f
  3232  03EB  3EFF               	addlw	-1
  3233  03EC  1D03               	skipz
  3234  03ED  2BE7               	goto	u122_25
  3235  03EE  087A               	movf	___ftdiv@f2+2,w
  3236  03EF  027D               	subwf	___ftdiv@f1+2,w
  3237  03F0  1D03               	skipz
  3238  03F1  2BF8               	goto	u123_25
  3239  03F2  0879               	movf	___ftdiv@f2+1,w
  3240  03F3  027C               	subwf	___ftdiv@f1+1,w
  3241  03F4  1D03               	skipz
  3242  03F5  2BF8               	goto	u123_25
  3243  03F6  0878               	movf	___ftdiv@f2,w
  3244  03F7  027B               	subwf	___ftdiv@f1,w
  3245  03F8                     u123_25:
  3246  03F8  1C03               	skipc
  3247  03F9  2C05               	goto	i1l1709
  3248  03FA  0878               	movf	___ftdiv@f2,w
  3249  03FB  02FB               	subwf	___ftdiv@f1,f
  3250  03FC  0879               	movf	___ftdiv@f2+1,w
  3251  03FD  1C03               	skipc
  3252  03FE  0F79               	incfsz	___ftdiv@f2+1,w
  3253  03FF  02FC               	subwf	___ftdiv@f1+1,f
  3254  0400  087A               	movf	___ftdiv@f2+2,w
  3255  0401  1C03               	skipc
  3256  0402  0A7A               	incf	___ftdiv@f2+2,w
  3257  0403  02FD               	subwf	___ftdiv@f1+2,f
  3258  0404  1425               	bsf	___ftdiv@f3,0
  3259  0405                     i1l1709:
  3260  0405  3001               	movlw	1
  3261  0406                     u124_25:
  3262  0406  1003               	clrc
  3263  0407  0DFB               	rlf	___ftdiv@f1,f
  3264  0408  0DFC               	rlf	___ftdiv@f1+1,f
  3265  0409  0DFD               	rlf	___ftdiv@f1+2,f
  3266  040A  3EFF               	addlw	-1
  3267  040B  1D03               	skipz
  3268  040C  2C06               	goto	u124_25
  3269  040D  3001               	movlw	1
  3270  040E  02A4               	subwf	___ftdiv@cntr,f
  3271  040F  1D03               	btfss	3,2
  3272  0410  2BE6               	goto	i1l1701
  3273  0411  0825               	movf	___ftdiv@f3,w
  3274  0412  00F0               	movwf	___ftpack@arg
  3275  0413  0826               	movf	___ftdiv@f3+1,w
  3276  0414  00F1               	movwf	___ftpack@arg+1
  3277  0415  0827               	movf	___ftdiv@f3+2,w
  3278  0416  00F2               	movwf	___ftpack@arg+2
  3279  0417  0828               	movf	___ftdiv@exp,w
  3280  0418  00A0               	movwf	??___ftdiv
  3281  0419  0820               	movf	??___ftdiv,w
  3282  041A  00F3               	movwf	___ftpack@exp
  3283  041B  0829               	movf	___ftdiv@sign,w
  3284  041C  00A1               	movwf	??___ftdiv+1
  3285  041D  0821               	movf	??___ftdiv+1,w
  3286  041E  00F4               	movwf	___ftpack@sign
  3287  041F  120A  118A  2533   	fcall	___ftpack
  3288  0422  0870               	movf	?___ftpack,w
  3289  0423  00F8               	movwf	?___ftdiv
  3290  0424  0871               	movf	?___ftpack+1,w
  3291  0425  00F9               	movwf	?___ftdiv+1
  3292  0426  0872               	movf	?___ftpack+2,w
  3293  0427  00FA               	movwf	?___ftdiv+2
  3294  0428  0008               	return
  3295  0429                     __end_of___ftdiv:
  3296                           
  3297                           	psect	text15
  3298  0533                     __ptext15:	
  3299 ;; *************** function ___ftpack *****************
  3300 ;; Defined at:
  3301 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\float.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;  arg             3    0[COMMON] unsigned um
  3304 ;;  exp             1    3[COMMON] unsigned char 
  3305 ;;  sign            1    4[COMMON] unsigned char 
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;		None
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  3    0[COMMON] float 
  3310 ;; Registers used:
  3311 ;;		wreg, status,2, status,0
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3317 ;;      Params:         5       0       0       0       0
  3318 ;;      Locals:         0       0       0       0       0
  3319 ;;      Temps:          3       0       0       0       0
  3320 ;;      Totals:         8       0       0       0       0
  3321 ;;Total ram usage:        8 bytes
  3322 ;; Hardware stack levels used:    1
  3323 ;; This function calls:
  3324 ;;		Nothing
  3325 ;; This function is called by:
  3326 ;;		___ftdiv
  3327 ;;		___ftmul
  3328 ;;		___lwtoft
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332                           
  3333                           ;psect for function ___ftpack
  3334  0533                     ___ftpack:
  3335                           
  3336                           ;incstack = 0
  3337                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3338  0533  0873               	movf	___ftpack@exp,w
  3339  0534  1903               	btfsc	3,2
  3340  0535  2D3B               	goto	i1l1457
  3341  0536  0872               	movf	___ftpack@arg+2,w
  3342  0537  0471               	iorwf	___ftpack@arg+1,w
  3343  0538  0470               	iorwf	___ftpack@arg,w
  3344  0539  1D03               	skipz
  3345  053A  2D4E               	goto	i1l1463
  3346  053B                     i1l1457:
  3347  053B  3000               	movlw	0
  3348  053C  00F0               	movwf	?___ftpack
  3349  053D  3000               	movlw	0
  3350  053E  00F1               	movwf	?___ftpack+1
  3351  053F  3000               	movlw	0
  3352  0540  00F2               	movwf	?___ftpack+2
  3353  0541  0008               	return
  3354  0542                     i1l1461:
  3355  0542  3001               	movlw	1
  3356  0543  00F5               	movwf	??___ftpack
  3357  0544  0875               	movf	??___ftpack,w
  3358  0545  07F3               	addwf	___ftpack@exp,f
  3359  0546  3001               	movlw	1
  3360  0547                     u94_25:
  3361  0547  1003               	clrc
  3362  0548  0CF2               	rrf	___ftpack@arg+2,f
  3363  0549  0CF1               	rrf	___ftpack@arg+1,f
  3364  054A  0CF0               	rrf	___ftpack@arg,f
  3365  054B  3EFF               	addlw	-1
  3366  054C  1D03               	skipz
  3367  054D  2D47               	goto	u94_25
  3368  054E                     i1l1463:
  3369  054E  30FE               	movlw	254
  3370  054F  0572               	andwf	___ftpack@arg+2,w
  3371  0550  1903               	btfsc	3,2
  3372  0551  2D69               	goto	i1l480
  3373  0552  2D42               	goto	i1l1461
  3374  0553                     i1l1465:
  3375  0553  3001               	movlw	1
  3376  0554  00F5               	movwf	??___ftpack
  3377  0555  0875               	movf	??___ftpack,w
  3378  0556  07F3               	addwf	___ftpack@exp,f
  3379  0557  3001               	movlw	1
  3380  0558  07F0               	addwf	___ftpack@arg,f
  3381  0559  3000               	movlw	0
  3382  055A  1803               	skipnc
  3383  055B  3001               	movlw	1
  3384  055C  07F1               	addwf	___ftpack@arg+1,f
  3385  055D  3000               	movlw	0
  3386  055E  1803               	skipnc
  3387  055F  3001               	movlw	1
  3388  0560  07F2               	addwf	___ftpack@arg+2,f
  3389  0561  3001               	movlw	1
  3390  0562                     u96_25:
  3391  0562  1003               	clrc
  3392  0563  0CF2               	rrf	___ftpack@arg+2,f
  3393  0564  0CF1               	rrf	___ftpack@arg+1,f
  3394  0565  0CF0               	rrf	___ftpack@arg,f
  3395  0566  3EFF               	addlw	-1
  3396  0567  1D03               	skipz
  3397  0568  2D62               	goto	u96_25
  3398  0569                     i1l480:
  3399  0569  30FF               	movlw	255
  3400  056A  0572               	andwf	___ftpack@arg+2,w
  3401  056B  1903               	btfsc	3,2
  3402  056C  2D7C               	goto	i1l1473
  3403  056D  2D53               	goto	i1l1465
  3404  056E                     i1l1475:
  3405  056E  3002               	movlw	2
  3406  056F  0273               	subwf	___ftpack@exp,w
  3407  0570  1C03               	btfss	3,0
  3408  0571  2D7E               	goto	i1l487
  3409  0572  3001               	movlw	1
  3410  0573  02F3               	subwf	___ftpack@exp,f
  3411  0574  3001               	movlw	1
  3412  0575                     u98_25:
  3413  0575  1003               	clrc
  3414  0576  0DF0               	rlf	___ftpack@arg,f
  3415  0577  0DF1               	rlf	___ftpack@arg+1,f
  3416  0578  0DF2               	rlf	___ftpack@arg+2,f
  3417  0579  3EFF               	addlw	-1
  3418  057A  1D03               	skipz
  3419  057B  2D75               	goto	u98_25
  3420  057C                     i1l1473:
  3421  057C  1FF1               	btfss	___ftpack@arg+1,7
  3422  057D  2D6E               	goto	i1l1475
  3423  057E                     i1l487:
  3424  057E  1873               	btfsc	___ftpack@exp,0
  3425  057F  2D86               	goto	i1l488
  3426  0580  30FF               	movlw	255
  3427  0581  05F0               	andwf	___ftpack@arg,f
  3428  0582  307F               	movlw	127
  3429  0583  05F1               	andwf	___ftpack@arg+1,f
  3430  0584  30FF               	movlw	255
  3431  0585  05F2               	andwf	___ftpack@arg+2,f
  3432  0586                     i1l488:
  3433  0586  1003               	clrc
  3434  0587  0CF3               	rrf	___ftpack@exp,f
  3435  0588  0873               	movf	___ftpack@exp,w
  3436  0589  00F5               	movwf	??___ftpack
  3437  058A  01F6               	clrf	??___ftpack+1
  3438  058B  01F7               	clrf	??___ftpack+2
  3439  058C  3010               	movlw	16
  3440  058D                     u102_25:
  3441  058D  1003               	clrc
  3442  058E  0DF5               	rlf	??___ftpack,f
  3443  058F  0DF6               	rlf	??___ftpack+1,f
  3444  0590  0DF7               	rlf	??___ftpack+2,f
  3445  0591  3EFF               	addlw	-1
  3446  0592  1D03               	skipz
  3447  0593  2D8D               	goto	u102_25
  3448  0594  0875               	movf	??___ftpack,w
  3449  0595  04F0               	iorwf	___ftpack@arg,f
  3450  0596  0876               	movf	??___ftpack+1,w
  3451  0597  04F1               	iorwf	___ftpack@arg+1,f
  3452  0598  0877               	movf	??___ftpack+2,w
  3453  0599  04F2               	iorwf	___ftpack@arg+2,f
  3454  059A  0874               	movf	___ftpack@sign,w
  3455  059B  1903               	btfsc	3,2
  3456  059C  0008               	return
  3457  059D  17F2               	bsf	___ftpack@arg+2,7
  3458  059E  0008               	return
  3459  059F                     __end_of___ftpack:
  3460                           
  3461                           	psect	text16
  3462  01C1                     __ptext16:	
  3463 ;; *************** function _ReadADC *****************
  3464 ;; Defined at:
  3465 ;;		line 12 in file "ADC0808.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;  Channel         1    wreg     unsigned char 
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;  Channel         1    4[COMMON] unsigned char 
  3470 ;;  i               2    7[COMMON] unsigned int 
  3471 ;;  ADC_value       2    5[COMMON] unsigned int 
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  2    0[COMMON] unsigned int 
  3474 ;; Registers used:
  3475 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3481 ;;      Params:         2       0       0       0       0
  3482 ;;      Locals:         5       0       0       0       0
  3483 ;;      Temps:          2       0       0       0       0
  3484 ;;      Totals:         9       0       0       0       0
  3485 ;;Total ram usage:        9 bytes
  3486 ;; Hardware stack levels used:    1
  3487 ;; This function calls:
  3488 ;;		Nothing
  3489 ;; This function is called by:
  3490 ;;		_Count_Up
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494                           
  3495                           ;psect for function _ReadADC
  3496  01C1                     _ReadADC:
  3497                           
  3498                           ;incstack = 0
  3499                           ; Regs used in _ReadADC: [wreg-fsr0h+status,2+status,0]
  3500                           ;ReadADC@Channel stored from wreg
  3501  01C1  00F4               	movwf	ReadADC@Channel
  3502                           
  3503                           ;ADC0808.c: 15:  unsigned int ADC_value = 0;
  3504  01C2  01F5               	clrf	ReadADC@ADC_value
  3505  01C3  01F6               	clrf	ReadADC@ADC_value+1
  3506                           
  3507                           ;ADC0808.c: 20:  switch(Channel)
  3508  01C4  29EB               	goto	i1l1511
  3509  01C5                     i1l167:	
  3510                           ;ADC0808.c: 21:  {;ADC0808.c: 22:  case 0: PORTCbits.RC2 = 0; PORTCbits.RC1 = 0; PORTCbi
      +                          ts.RC0 = 0; break;
  3511                           
  3512  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  3513  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  3514  01C7  1107               	bcf	7,2	;volatile
  3515  01C8  29D8               	goto	L14
  3516  01C9                     i1l169:	
  3517                           ;ADC0808.c: 23:  case 1: PORTCbits.RC2 = 0; PORTCbits.RC1 = 0; PORTCbits.RC0 = 1; break;
  3518                           
  3519  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  3520  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  3521  01CB  1107               	bcf	7,2	;volatile
  3522  01CC  29DD               	goto	L15
  3523  01CD                     i1l170:	
  3524                           ;ADC0808.c: 24:  case 2: PORTCbits.RC2 = 0; PORTCbits.RC1 = 1; PORTCbits.RC0 = 0; break;
  3525                           
  3526  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  3527  01CE  1303               	bcf	3,6	;RP1=0, select bank0
  3528  01CF  1107               	bcf	7,2	;volatile
  3529  01D0  29E2               	goto	L10
  3530  01D1                     i1l171:	
  3531                           ;ADC0808.c: 25:  case 3: PORTCbits.RC2 = 0; PORTCbits.RC1 = 1; PORTCbits.RC0 = 1; break;
  3532                           
  3533  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  3534  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  3535  01D3  1107               	bcf	7,2	;volatile
  3536  01D4  29E8               	goto	L11
  3537  01D5                     i1l172:	
  3538                           ;ADC0808.c: 26:  case 4: PORTCbits.RC2 = 1; PORTCbits.RC1 = 0; PORTCbits.RC0 = 0; break;
  3539                           
  3540  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  3541  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  3542  01D7  1507               	bsf	7,2	;volatile
  3543  01D8                     L14:
  3544  01D8  1087               	bcf	7,1	;volatile
  3545  01D9  29E3               	goto	L8
  3546  01DA                     i1l173:	
  3547                           ;ADC0808.c: 27:  case 5: PORTCbits.RC2 = 1; PORTCbits.RC1 = 0; PORTCbits.RC0 = 1; break;
  3548                           
  3549  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  3550  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  3551  01DC  1507               	bsf	7,2	;volatile
  3552  01DD                     L15:
  3553  01DD  1087               	bcf	7,1	;volatile
  3554  01DE  29E9               	goto	L9
  3555  01DF                     i1l174:	
  3556                           ;ADC0808.c: 28:  case 6: PORTCbits.RC2 = 1; PORTCbits.RC1 = 1; PORTCbits.RC0 = 0; break;
  3557                           
  3558  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  3559  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  3560  01E1  1507               	bsf	7,2	;volatile
  3561  01E2                     L10:
  3562  01E2  1487               	bsf	7,1	;volatile
  3563  01E3                     L8:
  3564  01E3  1007               	bcf	7,0	;volatile
  3565  01E4  2A0D               	goto	i1l1513
  3566  01E5                     i1l175:	
  3567                           ;ADC0808.c: 29:  case 7: PORTCbits.RC2 = 1; PORTCbits.RC1 = 1; PORTCbits.RC0 = 1; break;
  3568                           
  3569  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  3570  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  3571  01E7  1507               	bsf	7,2	;volatile
  3572  01E8                     L11:
  3573  01E8  1487               	bsf	7,1	;volatile
  3574  01E9                     L9:
  3575  01E9  1407               	bsf	7,0	;volatile
  3576  01EA  2A0D               	goto	i1l1513
  3577  01EB                     i1l1511:
  3578  01EB  0874               	movf	ReadADC@Channel,w
  3579  01EC  00F2               	movwf	??_ReadADC
  3580  01ED  01F3               	clrf	??_ReadADC+1
  3581                           
  3582                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3583                           ; Switch size 1, requested type "simple"
  3584                           ; Number of cases is 1, Range of values is 0 to 0
  3585                           ; switch strategies available:
  3586                           ; Name         Instructions Cycles
  3587                           ; simple_byte            4     3 (average)
  3588                           ; direct_byte           11     8 (fixed)
  3589                           ; jumptable            260     6 (fixed)
  3590                           ;	Chosen strategy is simple_byte
  3591  01EE  0873               	movf	??_ReadADC+1,w
  3592  01EF  3A00               	xorlw	0	; case 0
  3593  01F0  1903               	skipnz
  3594  01F1  29F3               	goto	i1l2121
  3595  01F2  2A0D               	goto	i1l1513
  3596  01F3                     i1l2121:
  3597                           
  3598                           ; Switch size 1, requested type "simple"
  3599                           ; Number of cases is 8, Range of values is 0 to 7
  3600                           ; switch strategies available:
  3601                           ; Name         Instructions Cycles
  3602                           ; simple_byte           25    13 (average)
  3603                           ; direct_byte           32     8 (fixed)
  3604                           ; jumptable            260     6 (fixed)
  3605                           ;	Chosen strategy is simple_byte
  3606  01F3  0872               	movf	??_ReadADC,w
  3607  01F4  3A00               	xorlw	0	; case 0
  3608  01F5  1903               	skipnz
  3609  01F6  29C5               	goto	i1l167
  3610  01F7  3A01               	xorlw	1	; case 1
  3611  01F8  1903               	skipnz
  3612  01F9  29C9               	goto	i1l169
  3613  01FA  3A03               	xorlw	3	; case 2
  3614  01FB  1903               	skipnz
  3615  01FC  29CD               	goto	i1l170
  3616  01FD  3A01               	xorlw	1	; case 3
  3617  01FE  1903               	skipnz
  3618  01FF  29D1               	goto	i1l171
  3619  0200  3A07               	xorlw	7	; case 4
  3620  0201  1903               	skipnz
  3621  0202  29D5               	goto	i1l172
  3622  0203  3A01               	xorlw	1	; case 5
  3623  0204  1903               	skipnz
  3624  0205  29DA               	goto	i1l173
  3625  0206  3A03               	xorlw	3	; case 6
  3626  0207  1903               	skipnz
  3627  0208  29DF               	goto	i1l174
  3628  0209  3A01               	xorlw	1	; case 7
  3629  020A  1903               	skipnz
  3630  020B  29E5               	goto	i1l175
  3631  020C  2A0D               	goto	i1l1513
  3632  020D                     i1l1513:
  3633                           
  3634                           ;ADC0808.c: 32:  _delay((unsigned long)((10)*(16000000/4000000.0)));
  3635  020D  300D               	movlw	13
  3636  020E  00F2               	movwf	??_ReadADC
  3637  020F                     u196_27:
  3638  020F  0BF2               	decfsz	??_ReadADC,f
  3639  0210  2A0F               	goto	u196_27
  3640                           
  3641                           ;ADC0808.c: 33:  PORTCbits.RC3 = 1;
  3642  0211  1283               	bcf	3,5	;RP0=0, select bank0
  3643  0212  1303               	bcf	3,6	;RP1=0, select bank0
  3644  0213  1587               	bsf	7,3	;volatile
  3645                           
  3646                           ;ADC0808.c: 34:  PORTCbits.RC7 = 1;
  3647  0214  1787               	bsf	7,7	;volatile
  3648                           
  3649                           ;ADC0808.c: 35:  _delay((unsigned long)((10)*(16000000/4000000.0)));
  3650  0215  300D               	movlw	13
  3651  0216  00F2               	movwf	??_ReadADC
  3652  0217                     u197_27:
  3653  0217  0BF2               	decfsz	??_ReadADC,f
  3654  0218  2A17               	goto	u197_27
  3655                           
  3656                           ;ADC0808.c: 36:  PORTCbits.RC7 = 0;
  3657  0219  1283               	bcf	3,5	;RP0=0, select bank0
  3658  021A  1303               	bcf	3,6	;RP1=0, select bank0
  3659  021B  1387               	bcf	7,7	;volatile
  3660                           
  3661                           ;ADC0808.c: 37:  PORTCbits.RC6 = 1;
  3662  021C  1707               	bsf	7,6	;volatile
  3663                           
  3664                           ;ADC0808.c: 38:  _delay((unsigned long)((10)*(16000000/4000000.0)));
  3665  021D  300D               	movlw	13
  3666  021E  00F2               	movwf	??_ReadADC
  3667  021F                     u198_27:
  3668  021F  0BF2               	decfsz	??_ReadADC,f
  3669  0220  2A1F               	goto	u198_27
  3670                           
  3671                           ;ADC0808.c: 39:  PORTCbits.RC7 = 1;
  3672  0221  1283               	bcf	3,5	;RP0=0, select bank0
  3673  0222  1303               	bcf	3,6	;RP1=0, select bank0
  3674  0223  1787               	bsf	7,7	;volatile
  3675                           
  3676                           ;ADC0808.c: 40:  PORTCbits.RC3 = 0;
  3677  0224  1187               	bcf	7,3	;volatile
  3678                           
  3679                           ;ADC0808.c: 41:  _delay((unsigned long)((10)*(16000000/4000000.0)));
  3680  0225  300D               	movlw	13
  3681  0226  00F2               	movwf	??_ReadADC
  3682  0227                     u199_27:
  3683  0227  0BF2               	decfsz	??_ReadADC,f
  3684  0228  2A27               	goto	u199_27
  3685                           
  3686                           ;ADC0808.c: 42:  PORTCbits.RC7 = 0;
  3687  0229  1283               	bcf	3,5	;RP0=0, select bank0
  3688  022A  1303               	bcf	3,6	;RP1=0, select bank0
  3689  022B  1387               	bcf	7,7	;volatile
  3690                           
  3691                           ;ADC0808.c: 43:  PORTCbits.RC6 = 0;
  3692  022C  1307               	bcf	7,6	;volatile
  3693                           
  3694                           ;ADC0808.c: 45:  for(i=0;i<2000;i++)
  3695  022D  01F7               	clrf	ReadADC@i
  3696  022E  01F8               	clrf	ReadADC@i+1
  3697                           
  3698                           ;ADC0808.c: 46:  {;ADC0808.c: 47:   PORTCbits.RC7 = !PORTCbits.RC7;
  3699  022F  1003               	clrc
  3700  0230                     L12:
  3701  0230  1F87               	btfss	7,7	;volatile
  3702  0231  1403               	setc
  3703  0232  1C03               	btfss	3,0
  3704  0233  2A38               	goto	u104_20
  3705  0234  1283               	bcf	3,5	;RP0=0, select bank0
  3706  0235  1303               	bcf	3,6	;RP1=0, select bank0
  3707  0236  1787               	bsf	7,7	;volatile
  3708  0237  2A3B               	goto	i1l1539
  3709  0238                     u104_20:
  3710  0238  1283               	bcf	3,5	;RP0=0, select bank0
  3711  0239  1303               	bcf	3,6	;RP1=0, select bank0
  3712  023A  1387               	bcf	7,7	;volatile
  3713  023B                     i1l1539:
  3714                           
  3715                           ;ADC0808.c: 48:   _delay((unsigned long)((10)*(16000000/4000000.0)));
  3716  023B  300D               	movlw	13
  3717  023C  00F2               	movwf	??_ReadADC
  3718  023D                     u200_27:
  3719  023D  0BF2               	decfsz	??_ReadADC,f
  3720  023E  2A3D               	goto	u200_27
  3721                           
  3722                           ;ADC0808.c: 50:   if(!PORTCbits.RC4)
  3723  023F  1283               	bcf	3,5	;RP0=0, select bank0
  3724  0240  1303               	bcf	3,6	;RP1=0, select bank0
  3725  0241  1E07               	btfss	7,4	;volatile
  3726  0242  2A50               	goto	i1l1547
  3727                           
  3728                           ;ADC0808.c: 52:  }
  3729  0243  3001               	movlw	1
  3730  0244  07F7               	addwf	ReadADC@i,f
  3731  0245  1803               	skipnc
  3732  0246  0AF8               	incf	ReadADC@i+1,f
  3733  0247  3000               	movlw	0
  3734  0248  07F8               	addwf	ReadADC@i+1,f
  3735  0249  3007               	movlw	7
  3736  024A  0278               	subwf	ReadADC@i+1,w
  3737  024B  30D0               	movlw	208
  3738  024C  1903               	skipnz
  3739  024D  0277               	subwf	ReadADC@i,w
  3740  024E  1C03               	skipc
  3741  024F  2A30               	goto	L12
  3742  0250                     i1l1547:
  3743                           
  3744                           ;ADC0808.c: 54:  for(i=0;i<2000;i++)
  3745  0250  01F7               	clrf	ReadADC@i
  3746  0251  01F8               	clrf	ReadADC@i+1
  3747                           
  3748                           ;ADC0808.c: 55:  {;ADC0808.c: 56:   PORTCbits.RC7 = !PORTCbits.RC7;
  3749  0252  1003               	clrc
  3750  0253                     L13:
  3751  0253  1F87               	btfss	7,7	;volatile
  3752  0254  1403               	setc
  3753  0255  1C03               	btfss	3,0
  3754  0256  2A5B               	goto	u108_20
  3755  0257  1283               	bcf	3,5	;RP0=0, select bank0
  3756  0258  1303               	bcf	3,6	;RP1=0, select bank0
  3757  0259  1787               	bsf	7,7	;volatile
  3758  025A  2A5E               	goto	i1l1555
  3759  025B                     u108_20:
  3760  025B  1283               	bcf	3,5	;RP0=0, select bank0
  3761  025C  1303               	bcf	3,6	;RP1=0, select bank0
  3762  025D  1387               	bcf	7,7	;volatile
  3763  025E                     i1l1555:
  3764                           
  3765                           ;ADC0808.c: 57:   _delay((unsigned long)((10)*(16000000/4000000.0)));
  3766  025E  300D               	movlw	13
  3767  025F  00F2               	movwf	??_ReadADC
  3768  0260                     u201_27:
  3769  0260  0BF2               	decfsz	??_ReadADC,f
  3770  0261  2A60               	goto	u201_27
  3771                           
  3772                           ;ADC0808.c: 59:    if(PORTCbits.RC4)
  3773  0262  1283               	bcf	3,5	;RP0=0, select bank0
  3774  0263  1303               	bcf	3,6	;RP1=0, select bank0
  3775  0264  1A07               	btfsc	7,4	;volatile
  3776  0265  2A73               	goto	i1l180
  3777                           
  3778                           ;ADC0808.c: 61:  }
  3779  0266  3001               	movlw	1
  3780  0267  07F7               	addwf	ReadADC@i,f
  3781  0268  1803               	skipnc
  3782  0269  0AF8               	incf	ReadADC@i+1,f
  3783  026A  3000               	movlw	0
  3784  026B  07F8               	addwf	ReadADC@i+1,f
  3785  026C  3007               	movlw	7
  3786  026D  0278               	subwf	ReadADC@i+1,w
  3787  026E  30D0               	movlw	208
  3788  026F  1903               	skipnz
  3789  0270  0277               	subwf	ReadADC@i,w
  3790  0271  1C03               	skipc
  3791  0272  2A53               	goto	L13
  3792  0273                     i1l180:
  3793                           
  3794                           ;ADC0808.c: 63:  PORTCbits.RC7 = 0;
  3795  0273  1387               	bcf	7,7	;volatile
  3796                           
  3797                           ;ADC0808.c: 64:  PORTCbits.RC5 = 1;
  3798  0274  1687               	bsf	7,5	;volatile
  3799                           
  3800                           ;ADC0808.c: 65:  _delay((unsigned long)((10)*(16000000/4000000.0)));
  3801  0275  300D               	movlw	13
  3802  0276  00F2               	movwf	??_ReadADC
  3803  0277                     u202_27:
  3804  0277  0BF2               	decfsz	??_ReadADC,f
  3805  0278  2A77               	goto	u202_27
  3806                           
  3807                           ;ADC0808.c: 66:  PORTCbits.RC7 = 1;
  3808  0279  1283               	bcf	3,5	;RP0=0, select bank0
  3809  027A  1303               	bcf	3,6	;RP1=0, select bank0
  3810  027B  1787               	bsf	7,7	;volatile
  3811                           
  3812                           ;ADC0808.c: 67:  _delay((unsigned long)((10)*(16000000/4000000.0)));
  3813  027C  300D               	movlw	13
  3814  027D  00F2               	movwf	??_ReadADC
  3815  027E                     u203_27:
  3816  027E  0BF2               	decfsz	??_ReadADC,f
  3817  027F  2A7E               	goto	u203_27
  3818                           
  3819                           ;ADC0808.c: 68:  PORTCbits.RC7 = 0;
  3820  0280  1283               	bcf	3,5	;RP0=0, select bank0
  3821  0281  1303               	bcf	3,6	;RP1=0, select bank0
  3822  0282  1387               	bcf	7,7	;volatile
  3823                           
  3824                           ;ADC0808.c: 69:  _delay((unsigned long)((10)*(16000000/4000000.0)));
  3825  0283  300D               	movlw	13
  3826  0284  00F2               	movwf	??_ReadADC
  3827  0285                     u204_27:
  3828  0285  0BF2               	decfsz	??_ReadADC,f
  3829  0286  2A85               	goto	u204_27
  3830                           
  3831                           ;ADC0808.c: 70:  PORTCbits.RC7 = 1;
  3832  0287  1283               	bcf	3,5	;RP0=0, select bank0
  3833  0288  1303               	bcf	3,6	;RP1=0, select bank0
  3834  0289  1787               	bsf	7,7	;volatile
  3835                           
  3836                           ;ADC0808.c: 72:  ADC_value = PORTB;
  3837  028A  0806               	movf	6,w	;volatile
  3838  028B  00F2               	movwf	??_ReadADC
  3839  028C  01F3               	clrf	??_ReadADC+1
  3840  028D  0872               	movf	??_ReadADC,w
  3841  028E  00F5               	movwf	ReadADC@ADC_value
  3842  028F  0873               	movf	??_ReadADC+1,w
  3843  0290  00F6               	movwf	ReadADC@ADC_value+1
  3844                           
  3845                           ;ADC0808.c: 74:  _delay((unsigned long)((10)*(16000000/4000000.0)));
  3846  0291  300D               	movlw	13
  3847  0292  00F2               	movwf	??_ReadADC
  3848  0293                     u205_27:
  3849  0293  0BF2               	decfsz	??_ReadADC,f
  3850  0294  2A93               	goto	u205_27
  3851                           
  3852                           ;ADC0808.c: 75:  PORTCbits.RC5 = 0;
  3853  0295  1283               	bcf	3,5	;RP0=0, select bank0
  3854  0296  1303               	bcf	3,6	;RP1=0, select bank0
  3855  0297  1287               	bcf	7,5	;volatile
  3856                           
  3857                           ;ADC0808.c: 76:  PORTCbits.RC7 = 0;
  3858  0298  1387               	bcf	7,7	;volatile
  3859                           
  3860                           ;ADC0808.c: 77:  _delay((unsigned long)((10)*(16000000/4000000.0)));
  3861  0299  300D               	movlw	13
  3862  029A  00F2               	movwf	??_ReadADC
  3863  029B                     u206_27:
  3864  029B  0BF2               	decfsz	??_ReadADC,f
  3865  029C  2A9B               	goto	u206_27
  3866                           
  3867                           ;ADC0808.c: 79:  return ADC_value;
  3868  029D  0876               	movf	ReadADC@ADC_value+1,w
  3869  029E  00F1               	movwf	?_ReadADC+1
  3870  029F  0875               	movf	ReadADC@ADC_value,w
  3871  02A0  00F0               	movwf	?_ReadADC
  3872  02A1  0008               	return
  3873  02A2                     __end_of_ReadADC:
  3874  007E                     btemp	set	126	;btemp
  3875  007E                     wtemp0	set	126
  3876                           
  3877                           	psect	config
  3878                           
  3879                           ;Config register CONFIG @ 0x2007
  3880                           ;	Oscillator Selection bits
  3881                           ;	FOSC = XT, XT oscillator
  3882                           ;	Watchdog Timer Enable bit
  3883                           ;	WDTE = OFF, WDT disabled
  3884                           ;	Power-up Timer Enable bit
  3885                           ;	PWRTE = ON, PWRT enabled
  3886                           ;	Brown-out Reset Enable bit
  3887                           ;	BOREN = ON, BOR enabled
  3888                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3889                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  3890                           ;	Data EEPROM Memory Code Protection bit
  3891                           ;	CPD = OFF, Data EEPROM code protection off
  3892                           ;	Flash Program Memory Write Enable bits
  3893                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3894                           ;	In-Circuit Debugger Mode bit
  3895                           ;	DEBUG = 0x1, unprogrammed default
  3896                           ;	Flash Program Memory Code Protection bit
  3897                           ;	CP = OFF, Code protection off
  3898  2007                     	org	8199
  3899  2007  3FF1               	dw	16369

Data Sizes:
    Strings     35
    Constant    0
    Data        64
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     39      63
    BANK1            80      0      64
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCDWriteString@msg	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_3(CODE[12]), STR_2(CODE[12]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Count_Up in COMMON

    _Count_Up->___ftdiv
    _Count_Up->___ftmul
    ___lwtoft->_ReadADC
    ___ftmul->___ftpack
    ___ftdiv->___ftpack

Critical Paths under _main in BANK0

    _main->_LCDGotoXY
    _main->_LCDInit
    ___lwdiv->___lwmod
    _LCDWriteString->_LCDByte
    _LCDInit->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _Count_Up in BANK0

    _Count_Up->___ftdiv
    _Count_Up->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _Count_Up in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Count_Up in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Count_Up in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    9547
                                             29 BANK0     10    10      0
                            _InitADC
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                     _LCDWriteString
                            ___fttol
                            ___lwdiv
                            ___lwmod
                  _timer2_initialize
 ---------------------------------------------------------------------------------
 (1) _timer2_initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4     927
                                             13 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     674
                                             19 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     380
                                             13 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       3     3      0    1888
                                             25 BANK0      3     3      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0    1826
                                             25 BANK0      4     4      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDGotoXY                                            4     3      1    1817
                                             25 BANK0      4     3      1
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDByte                                              7     6      1    1619
                                             18 BANK0      7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (3) _LCDBusyLoop                                          5     5      0     117
                                             13 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _InitADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Count_Up                                             3     3      0    8163
                                             10 BANK0      3     3      0
                            _ReadADC
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (5) ___lwtoft                                             4     1      3    2487
                                              9 COMMON     4     1      3
                            _ReadADC (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    2791
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftdiv                                             16    10      6    2745
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2337
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (5) _ReadADC                                              9     7      2     140
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitADC
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   ___fttol
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod
   _timer2_initialize

 _Count_Up (ROOT)
   _ReadADC
   ___ftdiv
     ___ftpack
   ___ftmul
     ___ftpack
   ___lwtoft
     _ReadADC (ARG)
     ___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      40       7       80.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     27      3F       5       78.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      8D      12        0.0%
ABS                  0      0      8D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Sep 08 17:46:46 2020

              ?_LCDBusyLoop 0070                           _i 005B                           pc 0002  
                        fsr 0004                         l102 06C6                         l103 06C7  
                       l147 07C9                         l148 07AA                         l571 050D  
                       _GIE 005F                         _RA1 0029                         _RA2 002A  
                       _RA3 002B                         _PR2 0092                         u905 06B3  
                       u885 0622                         fsr0 0004                         indf 0000  
           __end_of_LCDByte 06F0             __end_of_LCDInit 0608                 LCDByte@temp 0038  
              ___ftdiv@cntr 0024                ___ftdiv@sign 0029                        l2119 07BB  
                      l1625 05F1                        l1801 051C                        l1387 0615  
                      l1651 0698                        l1661 07AC                        l1805 052A  
                      l1821 0748                        l1663 07AE                        l1647 068E  
                      l1655 0660                        l1831 0769                        l1667 07B3  
                      l1827 075E                        l1819 073A                        l1843 0776  
                      l1773 04D0                        l1845 0784                        l1853 079D  
                      l1909 006E                        l1791 04F9                        l1793 0509  
                      l1769 04C7                        l1849 0792                        STR_1 07EE  
                      STR_2 07D6                        STR_3 07E2                        u1415 04D7  
                      u1515 073D                        u1445 04FA                        u1605 078A  
                      u1535 0749                        u1615 0793                        u1545 0755  
                      u1475 0512                        u1555 075F                        u1585 0779  
                      u1947 005E                        _PEIE 005E                        u1957 05A8  
                      i1l70 04AC                        _Dong 0052                        _main 002B  
              ___ftpack@arg 0070          __size_of_LCDGotoXY 002E                ___ftpack@exp 0073  
                      btemp 007E                        start 0010                ___ftmul@cntr 0028  
              ___ftmul@sign 0029             __end_of_InitADC 0800             __end_of_ReadADC 02A2  
              ___fttol@exp1 003A                ___fttol@lval 0036                       ?_main 0070  
           __end_of___ftdiv 0429                LCDInit@style 003B             __end_of___ftmul 0373  
           __end_of___fttol 0533             __end_of___lwdiv 076E                       i1l170 01CD  
                     i1l171 01D1                       i1l180 0273                       i1l172 01D5  
                     i1l173 01DA                       i1l174 01DF                       i1l175 01E5  
                     i1l167 01C5                       i1l169 01C9             __end_of___lwmod 07A2  
                     i1l480 0569                       i1l487 057E                       i1l488 0586  
                     _PORTB 0006                       _PORTD 0008                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       u94_25 0547  
                     u96_25 0562                       u98_25 0575                       _count 0059  
             ___ftpack@sign 0074                       pclath 000A              ReadADC@Channel 0074  
                     status 0003                       wtemp0 007E             __initialization 0013  
              __end_of_main 01C1            __end_of_Count_Up 04B6                      ??_main 003D  
             ___fttol@sign1 0035           __end_of_LCDGotoXY 07D0               LCDByte@isdata 0032  
                 ??_LCDByte 0033                   ??_LCDInit 0039                      _ADCON1 009F  
          __end_of___ftpack 059F                      u102_25 058D                      i1l2121 01F3  
                    i1l1511 01EB                      u104_20 0238                      i1l1513 020D  
                    i1l1461 0542                      i1l1701 03E6                      u120_25 03B3  
                    u200_27 023D                      i1l1463 054E                      i1l1473 057C  
                    i1l1465 0553                      i1l1457 053B                      i1l1555 025E  
                    i1l1547 0250                      i1l1539 023B                      i1l1475 056E  
                    i1l1723 02BA                      i1l1709 0405                      u121_25 03C5  
                    i1l1741 030F                      u201_27 0260                      i1l1681 038B  
                    i1l1753 0337                      i1l1745 031F                      i1l1729 02D0  
                    u122_25 03E7                      i1l1757 0347                      u202_27 0277  
                    i1l1687 03A1                      i1l1883 047B                      u123_25 03F8  
                    u203_27 027E                      i1l1887 04AB                      u108_20 025B  
                    u124_25 0406                      u132_25 0320                      u204_27 0285  
                    u133_25 0328                      u205_27 0293                      u206_27 029B  
                    u128_25 02DC                      u137_25 0348                      u129_25 02EE  
                    u138_25 0350            __end_of___lwtoft 0FEB                      u196_27 020F  
                    u197_27 0217                      u198_27 021F                      u199_27 0227  
                    _TMR2IE 0461                      _TMR2IF 0061                      _TMR2ON 0092  
                 ??_InitADC 002D                   ??_ReadADC 0072                      _Dienap 004F  
            _LCDWriteString 065D                      _adc_ok 005D                   ??___ftdiv 0020  
                 ??___ftmul 0020                   ??___fttol 0031                   ??___lwdiv 0037  
                 ??___lwmod 0031                      _count1 0057        __size_of_LCDBusyLoop 0055  
     ___ftmul@f3_as_product 0025                      saved_w 007E     __end_of__initialization 0027  
    __end_of_LCDWriteString 06AD                  ___ftdiv@f1 007B                  ___ftdiv@f2 0078  
                ___ftdiv@f3 0025                   LCDByte@hn 0035                   LCDByte@ln 0036  
                ___ftmul@f1 0078                  ___ftmul@f2 007B                  ___fttol@f1 002D  
            __pcstackCOMMON 0070                __pidataBANK1 06F0                  ___lwtoft@c 0079  
                __pbssBANK0 0047                   ?_Count_Up 0070             ?_LCDWriteString 0070  
                __pmaintext 002B            ReadADC@ADC_value 0075                  __pintentry 0004  
                 ?___ftpack 0070                     _T2CKPS0 0090                     _T2CKPS1 0091  
                 ?___lwtoft 0079                     _LCDByte 06AD                     _LCDInit 059F  
                   _TOUTPS0 0093                     _TOUTPS1 0094                     _TOUTPS2 0095  
                __stringtab 07D0                  ??_Count_Up 002A                     _InitADC 07F9  
                   _ReadADC 01C1                     ___cgram 00A0                     ___ftdiv 0373  
                   ___ftmul 02A2                     ___fttol 04B6                     ___lwdiv 0730  
                   ___lwmod 076E           _timer2_initialize 0FEB                  ??___ftpack 0075  
                   __ptext1 0FEB                     __ptext2 076E                     __ptext3 0730  
                   __ptext4 04B6                     __ptext5 065D                     __ptext6 059F  
                   __ptext7 07A2                     __ptext8 06AD                     __ptext9 0608  
                ??___lwtoft 007C          ?_timer2_initialize 0070                     _count_s 0055  
                 _LCDGotoXY 07A2         ??_timer2_initialize 002D                     clrloop0 0FBF  
      end_of_initialization 0027   __end_of_timer2_initialize 1000                   _PORTCbits 0007  
         LCDWriteString@msg 003B                   _TRISAbits 0085                  ?_LCDGotoXY 0039  
                LCDInit@__i 003C                 ___ftdiv@exp 0028                  LCDGotoXY@x 003C  
                LCDGotoXY@y 0039                 ___ftmul@exp 0024               ??_LCDBusyLoop 002D  
       start_initialization 0013            ??_LCDWriteString 0039           __size_of_Count_Up 008D  
__size_of_timer2_initialize 0015                  init_fetch0 0FC6                 __pdataBANK1 00A0  
       __end_of_LCDBusyLoop 065D                    ?_LCDByte 0032                    ?_LCDInit 0070  
         __size_of___ftpack 006C                    LCDByte@c 0037                   ___latbits 0002  
         __size_of___lwtoft 0014               __pcstackBANK0 0020                 ??_LCDGotoXY 003A  
                  ?_InitADC 0070                    ?_ReadADC 0070            ___lwdiv@dividend 0035  
                 _do_dienap 005E                    ?___ftdiv 0078                    ?___ftmul 0078  
                  ?___fttol 002D                    ?___lwdiv 0033                    ?___lwmod 002D  
                 __pstrings 07D0             LCDBusyLoop@busy 002F             LCDBusyLoop@temp 0030  
          ___lwdiv@quotient 0038           interrupt_function 0004                   clear_ram0 0FBE  
               _LCDBusyLoop 0608            LCDWriteString@cc 003A                   main@Digit 0042  
                  ReadADC@i 0077                 __stringbase 07D5            __size_of_LCDByte 0043  
          __size_of_LCDInit 0069                    _Count_Up 0429            __size_of_InitADC 0007  
          __size_of_ReadADC 00E1            __size_of___ftdiv 00B6            __size_of___ftmul 00D1  
          __size_of___fttol 007D           LCDBusyLoop@status 0031            __size_of___lwdiv 003E  
          __size_of___lwmod 0034                    ___ftpack 0533          __end_of__stringtab 07D6  
                  ___lwtoft 0FD7             LCDWriteInt@F912 0047                    _main$751 0040  
           ___lwdiv@divisor 0033             ___lwdiv@counter 003A                    __ptext10 07F9  
                  __ptext11 0429                    __ptext12 0FD7                    __ptext13 02A2  
                  __ptext14 0373                    __ptext15 0533                    __ptext16 01C1  
             __size_of_main 0196                    main@F908 004C               main@ADC_Value 0045  
                  init_ram0 0FCA                    intlevel1 0000            ___lwmod@dividend 002F  
                 stringcode 07D0             ___lwmod@divisor 002D             ___lwmod@counter 0032  
                  stringdir 07D0                    stringtab 07D0     __size_of_LCDWriteString 0050  
