

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Jan 03 16:56:21 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.30
    40                           ; Generated 26/08/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F877A Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  010C                     	;# 
   189  010D                     	;# 
   190  010E                     	;# 
   191  010F                     	;# 
   192  018C                     	;# 
   193  018D                     	;# 
   194  0000                     	;# 
   195  0001                     	;# 
   196  0002                     	;# 
   197  0003                     	;# 
   198  0004                     	;# 
   199  0005                     	;# 
   200  0006                     	;# 
   201  0007                     	;# 
   202  0008                     	;# 
   203  0009                     	;# 
   204  000A                     	;# 
   205  000B                     	;# 
   206  000C                     	;# 
   207  000D                     	;# 
   208  000E                     	;# 
   209  000E                     	;# 
   210  000F                     	;# 
   211  0010                     	;# 
   212  0011                     	;# 
   213  0012                     	;# 
   214  0013                     	;# 
   215  0014                     	;# 
   216  0015                     	;# 
   217  0015                     	;# 
   218  0016                     	;# 
   219  0017                     	;# 
   220  0018                     	;# 
   221  0019                     	;# 
   222  001A                     	;# 
   223  001B                     	;# 
   224  001B                     	;# 
   225  001C                     	;# 
   226  001D                     	;# 
   227  001E                     	;# 
   228  001F                     	;# 
   229  0081                     	;# 
   230  0085                     	;# 
   231  0086                     	;# 
   232  0087                     	;# 
   233  0088                     	;# 
   234  0089                     	;# 
   235  008C                     	;# 
   236  008D                     	;# 
   237  008E                     	;# 
   238  0091                     	;# 
   239  0092                     	;# 
   240  0093                     	;# 
   241  0094                     	;# 
   242  0098                     	;# 
   243  0099                     	;# 
   244  009C                     	;# 
   245  009D                     	;# 
   246  009E                     	;# 
   247  009F                     	;# 
   248  010C                     	;# 
   249  010D                     	;# 
   250  010E                     	;# 
   251  010F                     	;# 
   252  018C                     	;# 
   253  018D                     	;# 
   254  0000                     	;# 
   255  0001                     	;# 
   256  0002                     	;# 
   257  0003                     	;# 
   258  0004                     	;# 
   259  0005                     	;# 
   260  0006                     	;# 
   261  0007                     	;# 
   262  0008                     	;# 
   263  0009                     	;# 
   264  000A                     	;# 
   265  000B                     	;# 
   266  000C                     	;# 
   267  000D                     	;# 
   268  000E                     	;# 
   269  000E                     	;# 
   270  000F                     	;# 
   271  0010                     	;# 
   272  0011                     	;# 
   273  0012                     	;# 
   274  0013                     	;# 
   275  0014                     	;# 
   276  0015                     	;# 
   277  0015                     	;# 
   278  0016                     	;# 
   279  0017                     	;# 
   280  0018                     	;# 
   281  0019                     	;# 
   282  001A                     	;# 
   283  001B                     	;# 
   284  001B                     	;# 
   285  001C                     	;# 
   286  001D                     	;# 
   287  001E                     	;# 
   288  001F                     	;# 
   289  0081                     	;# 
   290  0085                     	;# 
   291  0086                     	;# 
   292  0087                     	;# 
   293  0088                     	;# 
   294  0089                     	;# 
   295  008C                     	;# 
   296  008D                     	;# 
   297  008E                     	;# 
   298  0091                     	;# 
   299  0092                     	;# 
   300  0093                     	;# 
   301  0094                     	;# 
   302  0098                     	;# 
   303  0099                     	;# 
   304  009C                     	;# 
   305  009D                     	;# 
   306  009E                     	;# 
   307  009F                     	;# 
   308  010C                     	;# 
   309  010D                     	;# 
   310  010E                     	;# 
   311  010F                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314  0000                     	;# 
   315  0001                     	;# 
   316  0002                     	;# 
   317  0003                     	;# 
   318  0004                     	;# 
   319  0005                     	;# 
   320  0006                     	;# 
   321  0007                     	;# 
   322  0008                     	;# 
   323  0009                     	;# 
   324  000A                     	;# 
   325  000B                     	;# 
   326  000C                     	;# 
   327  000D                     	;# 
   328  000E                     	;# 
   329  000E                     	;# 
   330  000F                     	;# 
   331  0010                     	;# 
   332  0011                     	;# 
   333  0012                     	;# 
   334  0013                     	;# 
   335  0014                     	;# 
   336  0015                     	;# 
   337  0015                     	;# 
   338  0016                     	;# 
   339  0017                     	;# 
   340  0018                     	;# 
   341  0019                     	;# 
   342  001A                     	;# 
   343  001B                     	;# 
   344  001B                     	;# 
   345  001C                     	;# 
   346  001D                     	;# 
   347  001E                     	;# 
   348  001F                     	;# 
   349  0081                     	;# 
   350  0085                     	;# 
   351  0086                     	;# 
   352  0087                     	;# 
   353  0088                     	;# 
   354  0089                     	;# 
   355  008C                     	;# 
   356  008D                     	;# 
   357  008E                     	;# 
   358  0091                     	;# 
   359  0092                     	;# 
   360  0093                     	;# 
   361  0094                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374                           
   375                           	psect	idataBANK1
   376  06FA                     __pidataBANK1:
   377                           
   378                           ;initializer for ___cgram
   379  06FA  340C               	retlw	12
   380  06FB  3412               	retlw	18
   381  06FC  3412               	retlw	18
   382  06FD  340C               	retlw	12
   383  06FE  3400               	retlw	0
   384  06FF  3400               	retlw	0
   385  0700  3400               	retlw	0
   386  0701  3400               	retlw	0
   387  0702  3400               	retlw	0
   388  0703  3404               	retlw	4
   389  0704  340E               	retlw	14
   390  0705  341F               	retlw	31
   391  0706  340E               	retlw	14
   392  0707  3404               	retlw	4
   393  0708  3400               	retlw	0
   394  0709  3400               	retlw	0
   395  070A  3404               	retlw	4
   396  070B  3404               	retlw	4
   397  070C  3404               	retlw	4
   398  070D  3404               	retlw	4
   399  070E  341F               	retlw	31
   400  070F  340E               	retlw	14
   401  0710  3404               	retlw	4
   402  0711  3400               	retlw	0
   403  0712  340A               	retlw	10
   404  0713  3415               	retlw	21
   405  0714  3411               	retlw	17
   406  0715  340A               	retlw	10
   407  0716  3404               	retlw	4
   408  0717  3400               	retlw	0
   409  0718  3400               	retlw	0
   410  0719  3400               	retlw	0
   411  071A  340A               	retlw	10
   412  071B  341F               	retlw	31
   413  071C  341F               	retlw	31
   414  071D  340E               	retlw	14
   415  071E  3404               	retlw	4
   416  071F  3400               	retlw	0
   417  0720  3400               	retlw	0
   418  0721  3400               	retlw	0
   419  0722  3400               	retlw	0
   420  0723  3400               	retlw	0
   421  0724  3400               	retlw	0
   422  0725  3400               	retlw	0
   423  0726  3400               	retlw	0
   424  0727  3400               	retlw	0
   425  0728  3400               	retlw	0
   426  0729  3400               	retlw	0
   427  072A  3400               	retlw	0
   428  072B  3400               	retlw	0
   429  072C  3400               	retlw	0
   430  072D  3400               	retlw	0
   431  072E  3400               	retlw	0
   432  072F  3400               	retlw	0
   433  0730  3400               	retlw	0
   434  0731  3400               	retlw	0
   435  0732  3400               	retlw	0
   436  0733  3400               	retlw	0
   437  0734  3400               	retlw	0
   438  0735  3400               	retlw	0
   439  0736  3400               	retlw	0
   440  0737  3400               	retlw	0
   441  0738  3400               	retlw	0
   442  0739  3400               	retlw	0
   443  0019                     _TXREG	set	25
   444  0018                     _RCSTA	set	24
   445  001E                     _ADRESH	set	30
   446  001F                     _ADCON0	set	31
   447  0008                     _PORTD	set	8
   448  0009                     _PORTEbits	set	9
   449  001A                     _RCREG	set	26
   450  00FA                     _GO_DONE	set	250
   451  00F8                     _ADON	set	248
   452  00FD                     _CHS2	set	253
   453  00FC                     _CHS1	set	252
   454  00FB                     _CHS0	set	251
   455  0045                     _RD5	set	69
   456  0046                     _RD6	set	70
   457  0044                     _RD4	set	68
   458  0065                     _RCIF	set	101
   459  0061                     _TMR2IF	set	97
   460  005F                     _GIE	set	95
   461  005E                     _PEIE	set	94
   462  0092                     _TMR2ON	set	146
   463  0096                     _TOUTPS3	set	150
   464  0095                     _TOUTPS2	set	149
   465  0094                     _TOUTPS1	set	148
   466  0093                     _TOUTPS0	set	147
   467  0091                     _T2CKPS1	set	145
   468  0090                     _T2CKPS0	set	144
   469  0099                     _SPBRG	set	153
   470  0098                     _TXSTA	set	152
   471  009E                     _ADRESL	set	158
   472  009F                     _ADCON1	set	159
   473  0088                     _TRISDbits	set	136
   474  0088                     _TRISD	set	136
   475  0085                     _TRISAbits	set	133
   476  0089                     _TRISEbits	set	137
   477  0092                     _PR2	set	146
   478  04C1                     _TRMT	set	1217
   479  0465                     _RCIE	set	1125
   480  0461                     _TMR2IE	set	1121
   481                           
   482                           	psect	strings
   483  0800                     __pstrings:
   484  0800                     stringtab:
   485  0800                     __stringtab:
   486  0800                     stringcode:	
   487                           ;	String table - string pointers are 1 byte each
   488                           
   489  0800                     stringdir:
   490  0800  3008               	movlw	high stringdir
   491  0801  008A               	movwf	10
   492  0802  0804               	movf	4,w
   493  0803  0A84               	incf	4,f
   494  0804  0782               	addwf	2,f
   495  0805                     __stringbase:
   496  0805  3400               	retlw	0
   497  0806                     __end_of__stringtab:
   498  0806                     STR_4:
   499  0806  3447               	retlw	71	;'G'
   500  0807  3469               	retlw	105	;'i'
   501  0808  3461               	retlw	97	;'a'
   502  0809  3420               	retlw	32	;' '
   503  080A  3474               	retlw	116	;'t'
   504  080B  3472               	retlw	114	;'r'
   505  080C  3469               	retlw	105	;'i'
   506  080D  3420               	retlw	32	;' '
   507  080E  3449               	retlw	73	;'I'
   508  080F  343D               	retlw	61	;'='
   509  0810  3420               	retlw	32	;' '
   510  0811  3400               	retlw	0
   511  0812                     STR_5:
   512  0812  3447               	retlw	71	;'G'
   513  0813  3469               	retlw	105	;'i'
   514  0814  3461               	retlw	97	;'a'
   515  0815  3420               	retlw	32	;' '
   516  0816  3474               	retlw	116	;'t'
   517  0817  3472               	retlw	114	;'r'
   518  0818  3469               	retlw	105	;'i'
   519  0819  3420               	retlw	32	;' '
   520  081A  3455               	retlw	85	;'U'
   521  081B  343D               	retlw	61	;'='
   522  081C  3420               	retlw	32	;' '
   523  081D  3400               	retlw	0
   524  081E                     STR_3:
   525  081E  3444               	retlw	68	;'D'
   526  081F  346F               	retlw	111	;'o'
   527  0820  3420               	retlw	32	;' '
   528  0821  3455               	retlw	85	;'U'
   529  0822  342F               	retlw	47	;'/'
   530  0823  3449               	retlw	73	;'I'
   531  0824  3420               	retlw	32	;' '
   532  0825  342E               	retlw	46	;'.'
   533  0826  342E               	retlw	46	;'.'
   534  0827  342E               	retlw	46	;'.'
   535  0828  3400               	retlw	0
   536  0829                     STR_1:
   537  0829  3453               	retlw	83	;'S'
   538  082A  3461               	retlw	97	;'a'
   539  082B  346E               	retlw	110	;'n'
   540  082C  3467               	retlw	103	;'g'
   541  082D  3400               	retlw	0
   542  082E                     STR_2:
   543  082E  3454               	retlw	84	;'T'
   544  082F  3461               	retlw	97	;'a'
   545  0830  3474               	retlw	116	;'t'
   546  0831  3400               	retlw	0
   547                           
   548                           	psect	cinit
   549  0015                     start_initialization:	
   550                           ; #config settings
   551                           
   552  0015                     __initialization:
   553                           
   554                           ; Initialize objects allocated to BANK1
   555  0015  1383               	bcf	3,7	;select IRP bank0
   556  0016  30E0               	movlw	low (__pdataBANK1+64)
   557  0017  00FD               	movwf	btemp+-1
   558  0018  3006               	movlw	high __pidataBANK1
   559  0019  00FE               	movwf	btemp
   560  001A  30FA               	movlw	low __pidataBANK1
   561  001B  00FF               	movwf	btemp+1
   562  001C  30A0               	movlw	low __pdataBANK1
   563  001D  0084               	movwf	4
   564  001E  120A  158A  277C  120A  118A  	fcall	init_ram0
   565                           
   566                           ; Clear objects allocated to BANK1
   567  0023  30E0               	movlw	low __pbssBANK1
   568  0024  0084               	movwf	4
   569  0025  30EA               	movlw	low (__pbssBANK1+10)
   570  0026  120A  158A  2759  120A  118A  	fcall	clear_ram0
   571                           
   572                           ; Clear objects allocated to BANK0
   573  002B  3020               	movlw	low __pbssBANK0
   574  002C  0084               	movwf	4
   575  002D  3040               	movlw	low (__pbssBANK0+32)
   576  002E  120A  158A  2759   	fcall	clear_ram0
   577  0031                     end_of_initialization:	
   578                           ;End of C runtime variable initialization code
   579                           
   580  0031                     __end_of__initialization:
   581  0031  0183               	clrf	3
   582  0032  120A  118A  2835   	ljmp	_main	;jump to C main() function
   583                           
   584                           	psect	bssBANK0
   585  0020                     __pbssBANK0:
   586  0020                     LCDWriteInt@F912:
   587  0020                     	ds	5
   588  0025                     main@F1000:
   589  0025                     	ds	3
   590  0028                     _Dienap:
   591  0028                     	ds	3
   592  002B                     _Dong:
   593  002B                     	ds	3
   594  002E                     _count_s:
   595  002E                     	ds	2
   596  0030                     _count1:
   597  0030                     	ds	2
   598  0032                     _count:
   599  0032                     	ds	2
   600  0034                     _i:
   601  0034                     	ds	2
   602  0036                     _check_sang:
   603  0036                     	ds	1
   604  0037                     _in_count:
   605  0037                     	ds	1
   606  0038                     _adc_ok:
   607  0038                     	ds	1
   608  0039                     _do_dienap:
   609  0039                     	ds	1
   610  003A                     _in_buffer:
   611  003A                     	ds	6
   612                           
   613                           	psect	bssBANK1
   614  00E0                     __pbssBANK1:
   615  00E0                     _commbuffer:
   616  00E0                     	ds	10
   617                           
   618                           	psect	dataBANK1
   619  00A0                     __pdataBANK1:
   620  00A0                     ___cgram:
   621  00A0                     	ds	64
   622                           
   623                           	psect	inittext
   624  0F78                     init_fetch0:	
   625                           ;	Called with low address in FSR and high address in W
   626                           
   627  0F78  087E               	movf	126,w
   628  0F79  008A               	movwf	10
   629  0F7A  087F               	movf	127,w
   630  0F7B  0082               	movwf	2
   631  0F7C                     init_ram0:	
   632                           ;Called with:
   633                           ;	high address of idata address in btemp 
   634                           ;	low address of idata address in btemp+1 
   635                           ;	low address of data in FSR
   636                           ;	high address + 1 of data in btemp-1
   637                           
   638  0F7C  2778  120A  158A   	fcall	init_fetch0
   639  0F7F  0080               	movwf	0
   640  0F80  0A84               	incf	4,f
   641  0F81  0804               	movf	4,w
   642  0F82  067D               	xorwf	125,w
   643  0F83  1903               	btfsc	3,2
   644  0F84  3400               	retlw	0
   645  0F85  0AFF               	incf	127,f
   646  0F86  1903               	btfsc	3,2
   647  0F87  0AFE               	incf	126,f
   648  0F88  2F7C               	goto	init_ram0
   649                           
   650                           	psect	clrtext
   651  0F59                     clear_ram0:	
   652                           ;	Called with FSR containing the base address, and
   653                           ;	W with the last address+1
   654                           
   655  0F59  0064               	clrwdt	;clear the watchdog before getting into this loop
   656  0F5A                     clrloop0:
   657  0F5A  0180               	clrf	0	;clear RAM location pointed to by FSR
   658  0F5B  0A84               	incf	4,f	;increment pointer
   659  0F5C  0604               	xorwf	4,w	;XOR with final address
   660  0F5D  1903               	btfsc	3,2	;have we reached the end yet?
   661  0F5E  3400               	retlw	0	;all done for this memory range, return
   662  0F5F  0604               	xorwf	4,w	;XOR again to restore value
   663  0F60  2F5A               	goto	clrloop0	;do the next byte
   664                           
   665                           	psect	cstackBANK3
   666  0190                     __pcstackBANK3:
   667  0190                     ??_main:
   668                           
   669                           ; 1 bytes @ 0x0
   670  0190                     	ds	3
   671  0193                     _main$840:
   672                           
   673                           ; 2 bytes @ 0x3
   674  0193                     	ds	2
   675  0195                     main@Digit:
   676                           
   677                           ; 3 bytes @ 0x5
   678  0195                     	ds	3
   679  0198                     main@ADC_Value:
   680                           
   681                           ; 2 bytes @ 0x8
   682  0198                     	ds	2
   683                           
   684                           	psect	cstackBANK1
   685  00EA                     __pcstackBANK1:
   686  00EA                     ??_Send_data:
   687                           
   688                           ; 1 bytes @ 0x0
   689  00EA                     	ds	1
   690  00EB                     Send_data@k:
   691                           
   692                           ; 2 bytes @ 0x1
   693  00EB                     	ds	2
   694  00ED                     Send_data@i:
   695                           
   696                           ; 1 bytes @ 0x3
   697  00ED                     	ds	1
   698                           
   699                           	psect	cstackCOMMON
   700  0070                     __pcstackCOMMON:
   701  0070                     ?_InitADC:
   702  0070                     ?_LCDInit:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_Init_uart:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_LCDWriteString:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_LCDBusyLoop:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ?_timer2_initialize:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ?_Count_Up:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ?_ReadAdc:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     ?_strncmp:	
   724                           ; 2 bytes @ 0x0
   725                           
   726  0070                     ?_main:	
   727                           ; 2 bytes @ 0x0
   728                           
   729  0070                     ?___ftpack:	
   730                           ; 2 bytes @ 0x0
   731                           
   732  0070                     strncmp@s2:	
   733                           ; 3 bytes @ 0x0
   734                           
   735  0070                     ___ftpack@arg:	
   736                           ; 1 bytes @ 0x0
   737                           
   738                           
   739                           ; 3 bytes @ 0x0
   740  0070                     	ds	1
   741  0071                     strncmp@len:
   742                           
   743                           ; 2 bytes @ 0x1
   744  0071                     	ds	1
   745  0072                     ??_ReadAdc:
   746                           
   747                           ; 1 bytes @ 0x2
   748  0072                     	ds	1
   749  0073                     ??_strncmp:
   750  0073                     ___ftpack@exp:	
   751                           ; 1 bytes @ 0x3
   752                           
   753                           
   754                           ; 1 bytes @ 0x3
   755  0073                     	ds	1
   756  0074                     ___ftpack@sign:
   757  0074                     ReadAdc@value:	
   758                           ; 1 bytes @ 0x4
   759                           
   760                           
   761                           ; 2 bytes @ 0x4
   762  0074                     	ds	1
   763  0075                     ??___ftpack:
   764  0075                     strncmp@s1:	
   765                           ; 1 bytes @ 0x5
   766                           
   767                           
   768                           ; 1 bytes @ 0x5
   769  0075                     	ds	1
   770  0076                     ReadAdc@Channel:
   771                           
   772                           ; 1 bytes @ 0x6
   773  0076                     	ds	2
   774  0078                     ?___ftmul:
   775  0078                     ?___lwtoft:	
   776                           ; 3 bytes @ 0x8
   777                           
   778  0078                     ___lwtoft@c:	
   779                           ; 3 bytes @ 0x8
   780                           
   781  0078                     ___ftmul@f1:	
   782                           ; 2 bytes @ 0x8
   783                           
   784                           
   785                           ; 3 bytes @ 0x8
   786  0078                     	ds	3
   787  007B                     ??___lwtoft:
   788  007B                     ___ftmul@f2:	
   789                           ; 1 bytes @ 0xB
   790                           
   791                           
   792                           ; 3 bytes @ 0xB
   793  007B                     	ds	3
   794                           
   795                           	psect	cstackBANK0
   796  0040                     __pcstackBANK0:
   797  0040                     ??___ftmul:
   798                           
   799                           ; 1 bytes @ 0x0
   800  0040                     	ds	4
   801  0044                     ___ftmul@exp:
   802                           
   803                           ; 1 bytes @ 0x4
   804  0044                     	ds	1
   805  0045                     ___ftmul@f3_as_product:
   806                           
   807                           ; 3 bytes @ 0x5
   808  0045                     	ds	3
   809  0048                     ___ftmul@cntr:
   810                           
   811                           ; 1 bytes @ 0x8
   812  0048                     	ds	1
   813  0049                     ___ftmul@sign:
   814                           
   815                           ; 1 bytes @ 0x9
   816  0049                     	ds	1
   817  004A                     ??_Count_Up:
   818                           
   819                           ; 1 bytes @ 0xA
   820  004A                     	ds	5
   821  004F                     Count_Up@ch:
   822                           
   823                           ; 1 bytes @ 0xF
   824  004F                     	ds	1
   825  0050                     ??_InitADC:
   826  0050                     ??_Init_uart:	
   827                           ; 1 bytes @ 0x10
   828                           
   829  0050                     ??_LCDBusyLoop:	
   830                           ; 1 bytes @ 0x10
   831                           
   832  0050                     ??_timer2_initialize:	
   833                           ; 1 bytes @ 0x10
   834                           
   835  0050                     ?___lwmod:	
   836                           ; 1 bytes @ 0x10
   837                           
   838  0050                     ?___fttol:	
   839                           ; 2 bytes @ 0x10
   840                           
   841  0050                     ___lwmod@divisor:	
   842                           ; 4 bytes @ 0x10
   843                           
   844  0050                     ___fttol@f1:	
   845                           ; 2 bytes @ 0x10
   846                           
   847                           
   848                           ; 3 bytes @ 0x10
   849  0050                     	ds	2
   850  0052                     LCDBusyLoop@busy:
   851  0052                     ___lwmod@dividend:	
   852                           ; 1 bytes @ 0x12
   853                           
   854                           
   855                           ; 2 bytes @ 0x12
   856  0052                     	ds	1
   857  0053                     LCDBusyLoop@temp:
   858                           
   859                           ; 1 bytes @ 0x13
   860  0053                     	ds	1
   861  0054                     ??___fttol:
   862  0054                     ??___lwmod:	
   863                           ; 1 bytes @ 0x14
   864                           
   865  0054                     LCDBusyLoop@status:	
   866                           ; 1 bytes @ 0x14
   867                           
   868                           
   869                           ; 1 bytes @ 0x14
   870  0054                     	ds	1
   871  0055                     ?_LCDByte:
   872  0055                     LCDByte@isdata:	
   873                           ; 1 bytes @ 0x15
   874                           
   875  0055                     ___lwmod@counter:	
   876                           ; 1 bytes @ 0x15
   877                           
   878                           
   879                           ; 1 bytes @ 0x15
   880  0055                     	ds	1
   881  0056                     ??_LCDByte:
   882  0056                     ?___lwdiv:	
   883                           ; 1 bytes @ 0x16
   884                           
   885  0056                     ___lwdiv@divisor:	
   886                           ; 2 bytes @ 0x16
   887                           
   888                           
   889                           ; 2 bytes @ 0x16
   890  0056                     	ds	2
   891  0058                     LCDByte@hn:
   892  0058                     ___fttol@sign1:	
   893                           ; 1 bytes @ 0x18
   894                           
   895  0058                     ___lwdiv@dividend:	
   896                           ; 1 bytes @ 0x18
   897                           
   898                           
   899                           ; 2 bytes @ 0x18
   900  0058                     	ds	1
   901  0059                     LCDByte@ln:
   902  0059                     ___fttol@lval:	
   903                           ; 1 bytes @ 0x19
   904                           
   905                           
   906                           ; 4 bytes @ 0x19
   907  0059                     	ds	1
   908  005A                     ??___lwdiv:
   909  005A                     LCDByte@c:	
   910                           ; 1 bytes @ 0x1A
   911                           
   912                           
   913                           ; 1 bytes @ 0x1A
   914  005A                     	ds	1
   915  005B                     LCDByte@temp:
   916  005B                     ___lwdiv@counter:	
   917                           ; 1 bytes @ 0x1B
   918                           
   919                           
   920                           ; 1 bytes @ 0x1B
   921  005B                     	ds	1
   922  005C                     ??_LCDInit:
   923  005C                     ??_LCDWriteString:	
   924                           ; 1 bytes @ 0x1C
   925                           
   926  005C                     ?_LCDGotoXY:	
   927                           ; 1 bytes @ 0x1C
   928                           
   929  005C                     LCDGotoXY@y:	
   930                           ; 1 bytes @ 0x1C
   931                           
   932  005C                     ___lwdiv@quotient:	
   933                           ; 1 bytes @ 0x1C
   934                           
   935                           
   936                           ; 2 bytes @ 0x1C
   937  005C                     	ds	1
   938  005D                     ??_LCDGotoXY:
   939  005D                     LCDWriteString@cc:	
   940                           ; 1 bytes @ 0x1D
   941                           
   942  005D                     ___fttol@exp1:	
   943                           ; 1 bytes @ 0x1D
   944                           
   945                           
   946                           ; 1 bytes @ 0x1D
   947  005D                     	ds	1
   948  005E                     ?_Send_data:
   949  005E                     LCDInit@style:	
   950                           ; 1 bytes @ 0x1E
   951                           
   952  005E                     LCDWriteString@msg:	
   953                           ; 1 bytes @ 0x1E
   954                           
   955  005E                     Send_data@Value:	
   956                           ; 1 bytes @ 0x1E
   957                           
   958                           
   959                           ; 2 bytes @ 0x1E
   960  005E                     	ds	1
   961  005F                     LCDInit@__i:
   962  005F                     LCDGotoXY@x:	
   963                           ; 1 bytes @ 0x1F
   964                           
   965                           
   966                           ; 1 bytes @ 0x1F
   967  005F                     	ds	1
   968                           
   969                           	psect	maintext
   970  0035                     __pmaintext:	
   971 ;;
   972 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   973 ;;
   974 ;; *************** function _main *****************
   975 ;; Defined at:
   976 ;;		line 113 in file "main.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;		None
   979 ;; Auto vars:     Size  Location     Type
   980 ;;  Digit           3    5[BANK3 ] unsigned char [3]
   981 ;;  ADC_Value       2    8[BANK3 ] unsigned int 
   982 ;; Return value:  Size  Location     Type
   983 ;;                  2  105[None  ] int 
   984 ;; Registers used:
   985 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   986 ;; Tracked objects:
   987 ;;		On entry : B00/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   991 ;;      Params:         0       0       0       0       0
   992 ;;      Locals:         0       0       0       7       0
   993 ;;      Temps:          0       0       0       3       0
   994 ;;      Totals:         0       0       0      10       0
   995 ;;Total ram usage:       10 bytes
   996 ;; Hardware stack levels required when called:    6
   997 ;; This function calls:
   998 ;;		_InitADC
   999 ;;		_Init_uart
  1000 ;;		_LCDByte
  1001 ;;		_LCDGotoXY
  1002 ;;		_LCDInit
  1003 ;;		_LCDWriteString
  1004 ;;		_Send_data
  1005 ;;		___fttol
  1006 ;;		___lwdiv
  1007 ;;		___lwmod
  1008 ;;		_timer2_initialize
  1009 ;; This function is called by:
  1010 ;;		Startup code after reset
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           
  1015                           ;psect for function _main
  1016  0035                     _main:
  1017                           
  1018                           ;main.c: 115:     unsigned char Digit[3] = { 0,0,0 };
  1019                           
  1020                           ;incstack = 0
  1021                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1022  0035  3000               	movlw	0
  1023  0036  1683               	bsf	3,5	;RP0=1, select bank3
  1024  0037  1703               	bsf	3,6	;RP1=1, select bank3
  1025  0038  0095               	movwf	main@Digit^(0+384)
  1026  0039  3000               	movlw	0
  1027  003A  0096               	movwf	(main@Digit+1)^(0+384)
  1028  003B  3000               	movlw	0
  1029  003C  0097               	movwf	(main@Digit+2)^(0+384)
  1030                           
  1031                           ;main.c: 118:     TRISEbits.TRISE2=0;
  1032  003D  1683               	bsf	3,5	;RP0=1, select bank1
  1033  003E  1303               	bcf	3,6	;RP1=0, select bank1
  1034  003F  1109               	bcf	9,2	;volatile
  1035                           
  1036                           ;main.c: 119:     TRISAbits.TRISA4=1;
  1037  0040  1605               	bsf	5,4	;volatile
  1038                           
  1039                           ;main.c: 120:     TRISAbits.TRISA5=1;
  1040  0041  1685               	bsf	5,5	;volatile
  1041                           
  1042                           ;main.c: 122:    InitADC();
  1043  0042  120A  158A  2761  120A  118A  	fcall	_InitADC
  1044                           
  1045                           ;main.c: 123:    LCDInit(0B00000000);
  1046  0047  3000               	movlw	0
  1047  0048  120A  118A  25A9  120A  118A  	fcall	_LCDInit
  1048                           
  1049                           ;main.c: 125:    timer2_initialize ();
  1050  004D  120A  158A  2789  120A  118A  	fcall	_timer2_initialize
  1051                           
  1052                           ;main.c: 127:   (LCDByte(0b00000001,0));
  1053  0052  1283               	bcf	3,5	;RP0=0, select bank0
  1054  0053  1303               	bcf	3,6	;RP1=0, select bank0
  1055  0054  01D5               	clrf	LCDByte@isdata
  1056  0055  3001               	movlw	1
  1057  0056  120A  118A  26B7  120A  118A  	fcall	_LCDByte
  1058                           
  1059                           ;main.c: 128:   Init_uart();
  1060  005B  120A  158A  276A  120A  118A  	fcall	_Init_uart
  1061                           
  1062                           ;main.c: 130:    LCDWriteString("Do U/I ...");
  1063  0060  3019               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1064  0061  120A  118A  2667  120A  118A  	fcall	_LCDWriteString
  1065                           
  1066                           ;main.c: 132:     _delay((unsigned long)((100)*(16000000/4000.0)));
  1067  0066  3003               	movlw	3
  1068  0067  1683               	bsf	3,5	;RP0=1, select bank3
  1069  0068  1703               	bsf	3,6	;RP1=1, select bank3
  1070  0069  0092               	movwf	(??_main^(0+384)+2)
  1071  006A  3008               	movlw	8
  1072  006B  0091               	movwf	(??_main^(0+384)+1)
  1073  006C  3076               	movlw	118
  1074  006D  0090               	movwf	??_main^(0+384)
  1075  006E                     u2337:
  1076  006E  0B90               	decfsz	??_main^(0+384),f
  1077  006F  286E               	goto	u2337
  1078  0070  0B91               	decfsz	(??_main^(0+384)+1),f
  1079  0071  286E               	goto	u2337
  1080  0072  0B92               	decfsz	(??_main^(0+384)+2),f
  1081  0073  286E               	goto	u2337
  1082  0074  0000               	nop
  1083                           
  1084                           ;main.c: 133:     (LCDByte(0b00000001,0));
  1085  0075  1283               	bcf	3,5	;RP0=0, select bank0
  1086  0076  1303               	bcf	3,6	;RP1=0, select bank0
  1087  0077  01D5               	clrf	LCDByte@isdata
  1088  0078  3001               	movlw	1
  1089  0079                     L1:
  1090  0079  120A  118A  26B7  120A  118A  	fcall	_LCDByte
  1091  007E                     l2485:
  1092                           
  1093                           ;main.c: 136:  {;main.c: 146:        if(adc_ok&&count1==25)
  1094  007E  1283               	bcf	3,5	;RP0=0, select bank0
  1095  007F  1303               	bcf	3,6	;RP1=0, select bank0
  1096  0080  0838               	movf	_adc_ok,w
  1097  0081  1903               	btfsc	3,2
  1098  0082  287E               	goto	l2485
  1099  0083  3019               	movlw	25
  1100  0084  0630               	xorwf	_count1,w
  1101  0085  0431               	iorwf	_count1+1,w
  1102  0086  1D03               	btfss	3,2
  1103  0087  287E               	goto	l2485
  1104                           
  1105                           ;main.c: 147:        {;main.c: 148:          count1=0;
  1106  0088  01B0               	clrf	_count1
  1107  0089  01B1               	clrf	_count1+1
  1108                           
  1109                           ;main.c: 149:          ADC_Value=(unsigned int)Dong;
  1110  008A  082B               	movf	_Dong,w
  1111  008B  00D0               	movwf	___fttol@f1
  1112  008C  082C               	movf	_Dong+1,w
  1113  008D  00D1               	movwf	___fttol@f1+1
  1114  008E  082D               	movf	_Dong+2,w
  1115  008F  00D2               	movwf	___fttol@f1+2
  1116  0090  120A  118A  24C0  120A  118A  	fcall	___fttol
  1117  0095  1283               	bcf	3,5	;RP0=0, select bank0
  1118  0096  1303               	bcf	3,6	;RP1=0, select bank0
  1119  0097  0851               	movf	?___fttol+1,w
  1120  0098  1683               	bsf	3,5	;RP0=1, select bank3
  1121  0099  1703               	bsf	3,6	;RP1=1, select bank3
  1122  009A  0099               	movwf	(main@ADC_Value+1)^(0+384)
  1123  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1124  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1125  009D  0850               	movf	?___fttol,w
  1126  009E  1683               	bsf	3,5	;RP0=1, select bank3
  1127  009F  1703               	bsf	3,6	;RP1=1, select bank3
  1128  00A0  0098               	movwf	main@ADC_Value^(0+384)
  1129                           
  1130                           ;main.c: 150:   Digit[2] = (ADC_Value/100);
  1131  00A1  3064               	movlw	100
  1132  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  1133  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  1134  00A4  00D6               	movwf	___lwdiv@divisor
  1135  00A5  3000               	movlw	0
  1136  00A6  00D7               	movwf	___lwdiv@divisor+1
  1137  00A7  1683               	bsf	3,5	;RP0=1, select bank3
  1138  00A8  1703               	bsf	3,6	;RP1=1, select bank3
  1139  00A9  0819               	movf	(main@ADC_Value+1)^(0+384),w
  1140  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1141  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  1142  00AC  00D9               	movwf	___lwdiv@dividend+1
  1143  00AD  1683               	bsf	3,5	;RP0=1, select bank3
  1144  00AE  1703               	bsf	3,6	;RP1=1, select bank3
  1145  00AF  0818               	movf	main@ADC_Value^(0+384),w
  1146  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  1147  00B1  1303               	bcf	3,6	;RP1=0, select bank0
  1148  00B2  00D8               	movwf	___lwdiv@dividend
  1149  00B3  120A  118A  273A  120A  118A  	fcall	___lwdiv
  1150  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1151  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  1152  00BA  0856               	movf	?___lwdiv,w
  1153  00BB  1683               	bsf	3,5	;RP0=1, select bank3
  1154  00BC  1703               	bsf	3,6	;RP1=1, select bank3
  1155  00BD  0090               	movwf	??_main^(0+384)
  1156  00BE  0810               	movf	??_main^(0+384),w
  1157  00BF  0097               	movwf	(main@Digit^(0+384)+2)
  1158                           
  1159                           ;main.c: 151:   Digit[1] = (ADC_Value%100)/10;
  1160  00C0  300A               	movlw	10
  1161  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  1162  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  1163  00C3  00D6               	movwf	___lwdiv@divisor
  1164  00C4  3000               	movlw	0
  1165  00C5  00D7               	movwf	___lwdiv@divisor+1
  1166  00C6  1683               	bsf	3,5	;RP0=1, select bank3
  1167  00C7  1703               	bsf	3,6	;RP1=1, select bank3
  1168  00C8  0819               	movf	(main@ADC_Value+1)^(0+384),w
  1169  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1170  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1171  00CB  00D3               	movwf	___lwmod@dividend+1
  1172  00CC  1683               	bsf	3,5	;RP0=1, select bank3
  1173  00CD  1703               	bsf	3,6	;RP1=1, select bank3
  1174  00CE  0818               	movf	main@ADC_Value^(0+384),w
  1175  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1176  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1177  00D1  00D2               	movwf	___lwmod@dividend
  1178  00D2  3064               	movlw	100
  1179  00D3  00D0               	movwf	___lwmod@divisor
  1180  00D4  3000               	movlw	0
  1181  00D5  00D1               	movwf	___lwmod@divisor+1
  1182  00D6  120A  158A  27CC  120A  118A  	fcall	___lwmod
  1183  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1184  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1185  00DD  0851               	movf	?___lwmod+1,w
  1186  00DE  00D9               	movwf	___lwdiv@dividend+1
  1187  00DF  0850               	movf	?___lwmod,w
  1188  00E0  00D8               	movwf	___lwdiv@dividend
  1189  00E1  120A  118A  273A  120A  118A  	fcall	___lwdiv
  1190  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  1191  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  1192  00E8  0856               	movf	?___lwdiv,w
  1193  00E9  1683               	bsf	3,5	;RP0=1, select bank3
  1194  00EA  1703               	bsf	3,6	;RP1=1, select bank3
  1195  00EB  0090               	movwf	??_main^(0+384)
  1196  00EC  0810               	movf	??_main^(0+384),w
  1197  00ED  0096               	movwf	(main@Digit^(0+384)+1)
  1198                           
  1199                           ;main.c: 152:   Digit[0] = (ADC_Value%100)%10;
  1200  00EE  0819               	movf	(main@ADC_Value+1)^(0+384),w
  1201  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1202  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  1203  00F1  00D3               	movwf	___lwmod@dividend+1
  1204  00F2  1683               	bsf	3,5	;RP0=1, select bank3
  1205  00F3  1703               	bsf	3,6	;RP1=1, select bank3
  1206  00F4  0818               	movf	main@ADC_Value^(0+384),w
  1207  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  1208  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  1209  00F7  00D2               	movwf	___lwmod@dividend
  1210  00F8  3064               	movlw	100
  1211  00F9  00D0               	movwf	___lwmod@divisor
  1212  00FA  3000               	movlw	0
  1213  00FB  00D1               	movwf	___lwmod@divisor+1
  1214  00FC  120A  158A  27CC  120A  118A  	fcall	___lwmod
  1215  0101  1283               	bcf	3,5	;RP0=0, select bank0
  1216  0102  1303               	bcf	3,6	;RP1=0, select bank0
  1217  0103  0851               	movf	?___lwmod+1,w
  1218  0104  1683               	bsf	3,5	;RP0=1, select bank3
  1219  0105  1703               	bsf	3,6	;RP1=1, select bank3
  1220  0106  0094               	movwf	(_main$840+1)^(0+384)
  1221  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1222  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1223  0109  0850               	movf	?___lwmod,w
  1224  010A  1683               	bsf	3,5	;RP0=1, select bank3
  1225  010B  1703               	bsf	3,6	;RP1=1, select bank3
  1226  010C  0093               	movwf	_main$840^(0+384)
  1227                           
  1228                           ;main.c: 152:   Digit[0] = (ADC_Value%100)%10;
  1229  010D  300A               	movlw	10
  1230  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1231  010F  1303               	bcf	3,6	;RP1=0, select bank0
  1232  0110  00D0               	movwf	___lwmod@divisor
  1233  0111  3000               	movlw	0
  1234  0112  00D1               	movwf	___lwmod@divisor+1
  1235  0113  1683               	bsf	3,5	;RP0=1, select bank3
  1236  0114  1703               	bsf	3,6	;RP1=1, select bank3
  1237  0115  0814               	movf	(_main$840+1)^(0+384),w
  1238  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1239  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1240  0118  00D3               	movwf	___lwmod@dividend+1
  1241  0119  1683               	bsf	3,5	;RP0=1, select bank3
  1242  011A  1703               	bsf	3,6	;RP1=1, select bank3
  1243  011B  0813               	movf	_main$840^(0+384),w
  1244  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1245  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1246  011E  00D2               	movwf	___lwmod@dividend
  1247  011F  120A  158A  27CC  120A  118A  	fcall	___lwmod
  1248  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1249  0125  1303               	bcf	3,6	;RP1=0, select bank0
  1250  0126  0850               	movf	?___lwmod,w
  1251  0127  1683               	bsf	3,5	;RP0=1, select bank3
  1252  0128  1703               	bsf	3,6	;RP1=1, select bank3
  1253  0129  0090               	movwf	??_main^(0+384)
  1254  012A  0810               	movf	??_main^(0+384),w
  1255  012B  0095               	movwf	main@Digit^(0+384)
  1256                           
  1257                           ;main.c: 153:         Send_data(ADC_Value);
  1258  012C  0819               	movf	(main@ADC_Value+1)^(0+384),w
  1259  012D  1283               	bcf	3,5	;RP0=0, select bank0
  1260  012E  1303               	bcf	3,6	;RP1=0, select bank0
  1261  012F  00DF               	movwf	Send_data@Value+1
  1262  0130  1683               	bsf	3,5	;RP0=1, select bank3
  1263  0131  1703               	bsf	3,6	;RP1=1, select bank3
  1264  0132  0818               	movf	main@ADC_Value^(0+384),w
  1265  0133  1283               	bcf	3,5	;RP0=0, select bank0
  1266  0134  1303               	bcf	3,6	;RP1=0, select bank0
  1267  0135  00DE               	movwf	Send_data@Value
  1268  0136  120A  118A  2425  120A  118A  	fcall	_Send_data
  1269                           
  1270                           ;main.c: 155:      LCDGotoXY(1,0);
  1271  013B  1283               	bcf	3,5	;RP0=0, select bank0
  1272  013C  1303               	bcf	3,6	;RP1=0, select bank0
  1273  013D  01DC               	clrf	LCDGotoXY@y
  1274  013E  3001               	movlw	1
  1275  013F  120A  158A  279E  120A  118A  	fcall	_LCDGotoXY
  1276                           
  1277                           ;main.c: 156:  LCDWriteString("Gia tri I= ");
  1278  0144  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1279  0145  120A  118A  2667  120A  118A  	fcall	_LCDWriteString
  1280                           
  1281                           ;main.c: 157:  (LCDByte(Digit[2]+0x30,1));
  1282  014A  1283               	bcf	3,5	;RP0=0, select bank0
  1283  014B  1303               	bcf	3,6	;RP1=0, select bank0
  1284  014C  01D5               	clrf	LCDByte@isdata
  1285  014D  0AD5               	incf	LCDByte@isdata,f
  1286  014E  1683               	bsf	3,5	;RP0=1, select bank3
  1287  014F  1703               	bsf	3,6	;RP1=1, select bank3
  1288  0150  0817               	movf	(main@Digit^(0+384)+2),w
  1289  0151  3E30               	addlw	48
  1290  0152  120A  118A  26B7  120A  118A  	fcall	_LCDByte
  1291                           
  1292                           ;main.c: 158:  (LCDByte('.',1));
  1293  0157  1283               	bcf	3,5	;RP0=0, select bank0
  1294  0158  1303               	bcf	3,6	;RP1=0, select bank0
  1295  0159  01D5               	clrf	LCDByte@isdata
  1296  015A  0AD5               	incf	LCDByte@isdata,f
  1297  015B  302E               	movlw	46
  1298  015C  120A  118A  26B7  120A  118A  	fcall	_LCDByte
  1299                           
  1300                           ;main.c: 159:  (LCDByte(Digit[1]+0x30,1));
  1301  0161  1283               	bcf	3,5	;RP0=0, select bank0
  1302  0162  1303               	bcf	3,6	;RP1=0, select bank0
  1303  0163  01D5               	clrf	LCDByte@isdata
  1304  0164  0AD5               	incf	LCDByte@isdata,f
  1305  0165  1683               	bsf	3,5	;RP0=1, select bank3
  1306  0166  1703               	bsf	3,6	;RP1=1, select bank3
  1307  0167  0816               	movf	(main@Digit^(0+384)+1),w
  1308  0168  3E30               	addlw	48
  1309  0169  120A  118A  26B7  120A  118A  	fcall	_LCDByte
  1310                           
  1311                           ;main.c: 160:  (LCDByte(Digit[0]+0x30,1));
  1312  016E  1283               	bcf	3,5	;RP0=0, select bank0
  1313  016F  1303               	bcf	3,6	;RP1=0, select bank0
  1314  0170  01D5               	clrf	LCDByte@isdata
  1315  0171  0AD5               	incf	LCDByte@isdata,f
  1316  0172  1683               	bsf	3,5	;RP0=1, select bank3
  1317  0173  1703               	bsf	3,6	;RP1=1, select bank3
  1318  0174  0815               	movf	main@Digit^(0+384),w
  1319  0175  3E30               	addlw	48
  1320  0176  120A  118A  26B7  120A  118A  	fcall	_LCDByte
  1321                           
  1322                           ;main.c: 164:   ADC_Value=(unsigned int)Dienap;
  1323  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1324  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1325  017D  0828               	movf	_Dienap,w
  1326  017E  00D0               	movwf	___fttol@f1
  1327  017F  0829               	movf	_Dienap+1,w
  1328  0180  00D1               	movwf	___fttol@f1+1
  1329  0181  082A               	movf	_Dienap+2,w
  1330  0182  00D2               	movwf	___fttol@f1+2
  1331  0183  120A  118A  24C0  120A  118A  	fcall	___fttol
  1332  0188  1283               	bcf	3,5	;RP0=0, select bank0
  1333  0189  1303               	bcf	3,6	;RP1=0, select bank0
  1334  018A  0851               	movf	?___fttol+1,w
  1335  018B  1683               	bsf	3,5	;RP0=1, select bank3
  1336  018C  1703               	bsf	3,6	;RP1=1, select bank3
  1337  018D  0099               	movwf	(main@ADC_Value+1)^(0+384)
  1338  018E  1283               	bcf	3,5	;RP0=0, select bank0
  1339  018F  1303               	bcf	3,6	;RP1=0, select bank0
  1340  0190  0850               	movf	?___fttol,w
  1341  0191  1683               	bsf	3,5	;RP0=1, select bank3
  1342  0192  1703               	bsf	3,6	;RP1=1, select bank3
  1343  0193  0098               	movwf	main@ADC_Value^(0+384)
  1344                           
  1345                           ;main.c: 165:   Digit[2] = (ADC_Value/100);
  1346  0194  3064               	movlw	100
  1347  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1348  0196  1303               	bcf	3,6	;RP1=0, select bank0
  1349  0197  00D6               	movwf	___lwdiv@divisor
  1350  0198  3000               	movlw	0
  1351  0199  00D7               	movwf	___lwdiv@divisor+1
  1352  019A  1683               	bsf	3,5	;RP0=1, select bank3
  1353  019B  1703               	bsf	3,6	;RP1=1, select bank3
  1354  019C  0819               	movf	(main@ADC_Value+1)^(0+384),w
  1355  019D  1283               	bcf	3,5	;RP0=0, select bank0
  1356  019E  1303               	bcf	3,6	;RP1=0, select bank0
  1357  019F  00D9               	movwf	___lwdiv@dividend+1
  1358  01A0  1683               	bsf	3,5	;RP0=1, select bank3
  1359  01A1  1703               	bsf	3,6	;RP1=1, select bank3
  1360  01A2  0818               	movf	main@ADC_Value^(0+384),w
  1361  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1362  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1363  01A5  00D8               	movwf	___lwdiv@dividend
  1364  01A6  120A  118A  273A  120A  118A  	fcall	___lwdiv
  1365  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  1366  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  1367  01AD  0856               	movf	?___lwdiv,w
  1368  01AE  1683               	bsf	3,5	;RP0=1, select bank3
  1369  01AF  1703               	bsf	3,6	;RP1=1, select bank3
  1370  01B0  0090               	movwf	??_main^(0+384)
  1371  01B1  0810               	movf	??_main^(0+384),w
  1372  01B2  0097               	movwf	(main@Digit^(0+384)+2)
  1373                           
  1374                           ;main.c: 166:   Digit[1] = (ADC_Value%100)/10;
  1375  01B3  300A               	movlw	10
  1376  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  1377  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  1378  01B6  00D6               	movwf	___lwdiv@divisor
  1379  01B7  3000               	movlw	0
  1380  01B8  00D7               	movwf	___lwdiv@divisor+1
  1381  01B9  1683               	bsf	3,5	;RP0=1, select bank3
  1382  01BA  1703               	bsf	3,6	;RP1=1, select bank3
  1383  01BB  0819               	movf	(main@ADC_Value+1)^(0+384),w
  1384  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  1385  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  1386  01BE  00D3               	movwf	___lwmod@dividend+1
  1387  01BF  1683               	bsf	3,5	;RP0=1, select bank3
  1388  01C0  1703               	bsf	3,6	;RP1=1, select bank3
  1389  01C1  0818               	movf	main@ADC_Value^(0+384),w
  1390  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  1391  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  1392  01C4  00D2               	movwf	___lwmod@dividend
  1393  01C5  3064               	movlw	100
  1394  01C6  00D0               	movwf	___lwmod@divisor
  1395  01C7  3000               	movlw	0
  1396  01C8  00D1               	movwf	___lwmod@divisor+1
  1397  01C9  120A  158A  27CC  120A  118A  	fcall	___lwmod
  1398  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1399  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1400  01D0  0851               	movf	?___lwmod+1,w
  1401  01D1  00D9               	movwf	___lwdiv@dividend+1
  1402  01D2  0850               	movf	?___lwmod,w
  1403  01D3  00D8               	movwf	___lwdiv@dividend
  1404  01D4  120A  118A  273A  120A  118A  	fcall	___lwdiv
  1405  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1406  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1407  01DB  0856               	movf	?___lwdiv,w
  1408  01DC  1683               	bsf	3,5	;RP0=1, select bank3
  1409  01DD  1703               	bsf	3,6	;RP1=1, select bank3
  1410  01DE  0090               	movwf	??_main^(0+384)
  1411  01DF  0810               	movf	??_main^(0+384),w
  1412  01E0  0096               	movwf	(main@Digit^(0+384)+1)
  1413                           
  1414                           ;main.c: 167:   Digit[0] = (ADC_Value%100)%10;
  1415  01E1  0819               	movf	(main@ADC_Value+1)^(0+384),w
  1416  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  1417  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  1418  01E4  00D3               	movwf	___lwmod@dividend+1
  1419  01E5  1683               	bsf	3,5	;RP0=1, select bank3
  1420  01E6  1703               	bsf	3,6	;RP1=1, select bank3
  1421  01E7  0818               	movf	main@ADC_Value^(0+384),w
  1422  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  1423  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  1424  01EA  00D2               	movwf	___lwmod@dividend
  1425  01EB  3064               	movlw	100
  1426  01EC  00D0               	movwf	___lwmod@divisor
  1427  01ED  3000               	movlw	0
  1428  01EE  00D1               	movwf	___lwmod@divisor+1
  1429  01EF  120A  158A  27CC  120A  118A  	fcall	___lwmod
  1430  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  1431  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  1432  01F6  0851               	movf	?___lwmod+1,w
  1433  01F7  1683               	bsf	3,5	;RP0=1, select bank3
  1434  01F8  1703               	bsf	3,6	;RP1=1, select bank3
  1435  01F9  0094               	movwf	(_main$840+1)^(0+384)
  1436  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  1437  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  1438  01FC  0850               	movf	?___lwmod,w
  1439  01FD  1683               	bsf	3,5	;RP0=1, select bank3
  1440  01FE  1703               	bsf	3,6	;RP1=1, select bank3
  1441  01FF  0093               	movwf	_main$840^(0+384)
  1442                           
  1443                           ;main.c: 167:   Digit[0] = (ADC_Value%100)%10;
  1444  0200  300A               	movlw	10
  1445  0201  1283               	bcf	3,5	;RP0=0, select bank0
  1446  0202  1303               	bcf	3,6	;RP1=0, select bank0
  1447  0203  00D0               	movwf	___lwmod@divisor
  1448  0204  3000               	movlw	0
  1449  0205  00D1               	movwf	___lwmod@divisor+1
  1450  0206  1683               	bsf	3,5	;RP0=1, select bank3
  1451  0207  1703               	bsf	3,6	;RP1=1, select bank3
  1452  0208  0814               	movf	(_main$840+1)^(0+384),w
  1453  0209  1283               	bcf	3,5	;RP0=0, select bank0
  1454  020A  1303               	bcf	3,6	;RP1=0, select bank0
  1455  020B  00D3               	movwf	___lwmod@dividend+1
  1456  020C  1683               	bsf	3,5	;RP0=1, select bank3
  1457  020D  1703               	bsf	3,6	;RP1=1, select bank3
  1458  020E  0813               	movf	_main$840^(0+384),w
  1459  020F  1283               	bcf	3,5	;RP0=0, select bank0
  1460  0210  1303               	bcf	3,6	;RP1=0, select bank0
  1461  0211  00D2               	movwf	___lwmod@dividend
  1462  0212  120A  158A  27CC  120A  118A  	fcall	___lwmod
  1463  0217  1283               	bcf	3,5	;RP0=0, select bank0
  1464  0218  1303               	bcf	3,6	;RP1=0, select bank0
  1465  0219  0850               	movf	?___lwmod,w
  1466  021A  1683               	bsf	3,5	;RP0=1, select bank3
  1467  021B  1703               	bsf	3,6	;RP1=1, select bank3
  1468  021C  0090               	movwf	??_main^(0+384)
  1469  021D  0810               	movf	??_main^(0+384),w
  1470  021E  0095               	movwf	main@Digit^(0+384)
  1471                           
  1472                           ;main.c: 168:       Send_data(ADC_Value);
  1473  021F  0819               	movf	(main@ADC_Value+1)^(0+384),w
  1474  0220  1283               	bcf	3,5	;RP0=0, select bank0
  1475  0221  1303               	bcf	3,6	;RP1=0, select bank0
  1476  0222  00DF               	movwf	Send_data@Value+1
  1477  0223  1683               	bsf	3,5	;RP0=1, select bank3
  1478  0224  1703               	bsf	3,6	;RP1=1, select bank3
  1479  0225  0818               	movf	main@ADC_Value^(0+384),w
  1480  0226  1283               	bcf	3,5	;RP0=0, select bank0
  1481  0227  1303               	bcf	3,6	;RP1=0, select bank0
  1482  0228  00DE               	movwf	Send_data@Value
  1483  0229  120A  118A  2425  120A  118A  	fcall	_Send_data
  1484                           
  1485                           ;main.c: 169:      LCDGotoXY(1,1);
  1486  022E  1283               	bcf	3,5	;RP0=0, select bank0
  1487  022F  1303               	bcf	3,6	;RP1=0, select bank0
  1488  0230  01DC               	clrf	LCDGotoXY@y
  1489  0231  0ADC               	incf	LCDGotoXY@y,f
  1490  0232  3001               	movlw	1
  1491  0233  120A  158A  279E  120A  118A  	fcall	_LCDGotoXY
  1492                           
  1493                           ;main.c: 170:  LCDWriteString("Gia tri U= ");
  1494  0238  300D               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1495  0239  120A  118A  2667  120A  118A  	fcall	_LCDWriteString
  1496                           
  1497                           ;main.c: 171:  (LCDByte(Digit[2]+0x30,1));
  1498  023E  1283               	bcf	3,5	;RP0=0, select bank0
  1499  023F  1303               	bcf	3,6	;RP1=0, select bank0
  1500  0240  01D5               	clrf	LCDByte@isdata
  1501  0241  0AD5               	incf	LCDByte@isdata,f
  1502  0242  1683               	bsf	3,5	;RP0=1, select bank3
  1503  0243  1703               	bsf	3,6	;RP1=1, select bank3
  1504  0244  0817               	movf	(main@Digit^(0+384)+2),w
  1505  0245  3E30               	addlw	48
  1506  0246  120A  118A  26B7  120A  118A  	fcall	_LCDByte
  1507                           
  1508                           ;main.c: 172:  (LCDByte('.',1));
  1509  024B  1283               	bcf	3,5	;RP0=0, select bank0
  1510  024C  1303               	bcf	3,6	;RP1=0, select bank0
  1511  024D  01D5               	clrf	LCDByte@isdata
  1512  024E  0AD5               	incf	LCDByte@isdata,f
  1513  024F  302E               	movlw	46
  1514  0250  120A  118A  26B7  120A  118A  	fcall	_LCDByte
  1515                           
  1516                           ;main.c: 173:  (LCDByte(Digit[1]+0x30,1));
  1517  0255  1283               	bcf	3,5	;RP0=0, select bank0
  1518  0256  1303               	bcf	3,6	;RP1=0, select bank0
  1519  0257  01D5               	clrf	LCDByte@isdata
  1520  0258  0AD5               	incf	LCDByte@isdata,f
  1521  0259  1683               	bsf	3,5	;RP0=1, select bank3
  1522  025A  1703               	bsf	3,6	;RP1=1, select bank3
  1523  025B  0816               	movf	(main@Digit^(0+384)+1),w
  1524  025C  3E30               	addlw	48
  1525  025D  120A  118A  26B7  120A  118A  	fcall	_LCDByte
  1526                           
  1527                           ;main.c: 174:  (LCDByte(Digit[0]+0x30,1));
  1528  0262  1283               	bcf	3,5	;RP0=0, select bank0
  1529  0263  1303               	bcf	3,6	;RP1=0, select bank0
  1530  0264  01D5               	clrf	LCDByte@isdata
  1531  0265  0AD5               	incf	LCDByte@isdata,f
  1532  0266  1683               	bsf	3,5	;RP0=1, select bank3
  1533  0267  1703               	bsf	3,6	;RP1=1, select bank3
  1534  0268  0815               	movf	main@Digit^(0+384),w
  1535  0269  3E30               	addlw	48
  1536  026A  2879               	goto	L1
  1537  026B                     __end_of_main:
  1538                           
  1539                           	psect	text1
  1540  0F89                     __ptext1:	
  1541 ;; *************** function _timer2_initialize *****************
  1542 ;; Defined at:
  1543 ;;		line 45 in file "main.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;		None
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;		None
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  1    wreg      void 
  1550 ;; Registers used:
  1551 ;;		wreg
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1557 ;;      Params:         0       0       0       0       0
  1558 ;;      Locals:         0       0       0       0       0
  1559 ;;      Temps:          0       0       0       0       0
  1560 ;;      Totals:         0       0       0       0       0
  1561 ;;Total ram usage:        0 bytes
  1562 ;; Hardware stack levels used:    1
  1563 ;; Hardware stack levels required when called:    3
  1564 ;; This function calls:
  1565 ;;		Nothing
  1566 ;; This function is called by:
  1567 ;;		_main
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           
  1572                           ;psect for function _timer2_initialize
  1573  0F89                     _timer2_initialize:
  1574                           
  1575                           ;main.c: 47:     T2CKPS0=1;
  1576                           
  1577                           ;incstack = 0
  1578                           ; Regs used in _timer2_initialize: [wreg]
  1579  0F89  1283               	bcf	3,5	;RP0=0, select bank0
  1580  0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  1581  0F8B  1412               	bsf	18,0	;volatile
  1582                           
  1583                           ;main.c: 48:     T2CKPS1=0;
  1584  0F8C  1092               	bcf	18,1	;volatile
  1585                           
  1586                           ;main.c: 49:     PR2=100;
  1587  0F8D  3064               	movlw	100
  1588  0F8E  1683               	bsf	3,5	;RP0=1, select bank1
  1589  0F8F  1303               	bcf	3,6	;RP1=0, select bank1
  1590  0F90  0092               	movwf	18	;volatile
  1591                           
  1592                           ;main.c: 50:     TOUTPS0=1;
  1593  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  1594  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  1595  0F93  1592               	bsf	18,3	;volatile
  1596                           
  1597                           ;main.c: 51:     TOUTPS1=0;
  1598  0F94  1212               	bcf	18,4	;volatile
  1599                           
  1600                           ;main.c: 52:     TOUTPS2=0;
  1601  0F95  1292               	bcf	18,5	;volatile
  1602                           
  1603                           ;main.c: 53:     TOUTPS3=1;
  1604  0F96  1712               	bsf	18,6	;volatile
  1605                           
  1606                           ;main.c: 54:     TMR2ON=1;
  1607  0F97  1512               	bsf	18,2	;volatile
  1608                           
  1609                           ;main.c: 55:     TMR2IE=1;
  1610  0F98  1683               	bsf	3,5	;RP0=1, select bank1
  1611  0F99  1303               	bcf	3,6	;RP1=0, select bank1
  1612  0F9A  148C               	bsf	12,1	;volatile
  1613                           
  1614                           ;main.c: 56:     PEIE=1;
  1615  0F9B  170B               	bsf	11,6	;volatile
  1616                           
  1617                           ;main.c: 57:     GIE=1;
  1618  0F9C  178B               	bsf	11,7	;volatile
  1619  0F9D  0008               	return
  1620  0F9E                     __end_of_timer2_initialize:
  1621                           
  1622                           	psect	text2
  1623  04C0                     __ptext2:	
  1624 ;; *************** function ___fttol *****************
  1625 ;; Defined at:
  1626 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fttol.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;  f1              3   16[BANK0 ] float 
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;  lval            4   25[BANK0 ] unsigned long 
  1631 ;;  exp1            1   29[BANK0 ] unsigned char 
  1632 ;;  sign1           1   24[BANK0 ] unsigned char 
  1633 ;; Return value:  Size  Location     Type
  1634 ;;                  4   16[BANK0 ] long 
  1635 ;; Registers used:
  1636 ;;		wreg, status,2, status,0
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1642 ;;      Params:         0       4       0       0       0
  1643 ;;      Locals:         0       6       0       0       0
  1644 ;;      Temps:          0       4       0       0       0
  1645 ;;      Totals:         0      14       0       0       0
  1646 ;;Total ram usage:       14 bytes
  1647 ;; Hardware stack levels used:    1
  1648 ;; Hardware stack levels required when called:    3
  1649 ;; This function calls:
  1650 ;;		Nothing
  1651 ;; This function is called by:
  1652 ;;		_main
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           
  1657                           ;psect for function ___fttol
  1658  04C0                     ___fttol:
  1659                           
  1660                           ;incstack = 0
  1661                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1662  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  1663  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  1664  04C2  0850               	movf	___fttol@f1,w
  1665  04C3  00D4               	movwf	??___fttol
  1666  04C4  0851               	movf	___fttol@f1+1,w
  1667  04C5  00D5               	movwf	??___fttol+1
  1668  04C6  0852               	movf	___fttol@f1+2,w
  1669  04C7  00D6               	movwf	??___fttol+2
  1670  04C8  1003               	clrc
  1671  04C9  0D55               	rlf	??___fttol+1,w
  1672  04CA  0D56               	rlf	??___fttol+2,w
  1673  04CB  00D7               	movwf	??___fttol+3
  1674  04CC  0857               	movf	??___fttol+3,w
  1675  04CD  00DD               	movwf	___fttol@exp1
  1676  04CE  085D               	movf	___fttol@exp1,w
  1677  04CF  1D03               	btfss	3,2
  1678  04D0  2CDA               	goto	l2423
  1679  04D1                     l2419:
  1680  04D1  3000               	movlw	0
  1681  04D2  00D3               	movwf	?___fttol+3
  1682  04D3  3000               	movlw	0
  1683  04D4  00D2               	movwf	?___fttol+2
  1684  04D5  3000               	movlw	0
  1685  04D6  00D1               	movwf	?___fttol+1
  1686  04D7  3000               	movlw	0
  1687  04D8  00D0               	movwf	?___fttol
  1688  04D9  0008               	return
  1689  04DA                     l2423:
  1690  04DA  0850               	movf	___fttol@f1,w
  1691  04DB  00D4               	movwf	??___fttol
  1692  04DC  0851               	movf	___fttol@f1+1,w
  1693  04DD  00D5               	movwf	??___fttol+1
  1694  04DE  0852               	movf	___fttol@f1+2,w
  1695  04DF  00D6               	movwf	??___fttol+2
  1696  04E0  3017               	movlw	23
  1697  04E1                     u2165:
  1698  04E1  1003               	clrc
  1699  04E2  0CD6               	rrf	??___fttol+2,f
  1700  04E3  0CD5               	rrf	??___fttol+1,f
  1701  04E4  0CD4               	rrf	??___fttol,f
  1702  04E5  3EFF               	addlw	-1
  1703  04E6  1D03               	skipz
  1704  04E7  2CE1               	goto	u2165
  1705  04E8  0854               	movf	??___fttol,w
  1706  04E9  00D7               	movwf	??___fttol+3
  1707  04EA  0857               	movf	??___fttol+3,w
  1708  04EB  00D8               	movwf	___fttol@sign1
  1709  04EC  17D1               	bsf	___fttol@f1+1,7
  1710  04ED  30FF               	movlw	255
  1711  04EE  05D0               	andwf	___fttol@f1,f
  1712  04EF  30FF               	movlw	255
  1713  04F0  05D1               	andwf	___fttol@f1+1,f
  1714  04F1  3000               	movlw	0
  1715  04F2  05D2               	andwf	___fttol@f1+2,f
  1716  04F3  0850               	movf	___fttol@f1,w
  1717  04F4  00D9               	movwf	___fttol@lval
  1718  04F5  0851               	movf	___fttol@f1+1,w
  1719  04F6  00DA               	movwf	___fttol@lval+1
  1720  04F7  0852               	movf	___fttol@f1+2,w
  1721  04F8  00DB               	movwf	___fttol@lval+2
  1722  04F9  01DC               	clrf	___fttol@lval+3
  1723  04FA  308E               	movlw	142
  1724  04FB  02DD               	subwf	___fttol@exp1,f
  1725  04FC  1FDD               	btfss	___fttol@exp1,7
  1726  04FD  2D13               	goto	l2443
  1727  04FE  085D               	movf	___fttol@exp1,w
  1728  04FF  3A80               	xorlw	128
  1729  0500  3E8F               	addlw	143
  1730  0501  1C03               	btfss	3,0
  1731  0502  2CD1               	goto	l2419
  1732  0503                     l2441:
  1733  0503  3001               	movlw	1
  1734  0504                     u2195:
  1735  0504  1003               	clrc
  1736  0505  0CDC               	rrf	___fttol@lval+3,f
  1737  0506  0CDB               	rrf	___fttol@lval+2,f
  1738  0507  0CDA               	rrf	___fttol@lval+1,f
  1739  0508  0CD9               	rrf	___fttol@lval,f
  1740  0509  3EFF               	addlw	-1
  1741  050A  1D03               	skipz
  1742  050B  2D04               	goto	u2195
  1743  050C  3001               	movlw	1
  1744  050D  00D4               	movwf	??___fttol
  1745  050E  0854               	movf	??___fttol,w
  1746  050F  07DD               	addwf	___fttol@exp1,f
  1747  0510  1903               	btfsc	3,2
  1748  0511  2D26               	goto	l2451
  1749  0512  2D03               	goto	l2441
  1750  0513                     l2443:
  1751  0513  3018               	movlw	24
  1752  0514  025D               	subwf	___fttol@exp1,w
  1753  0515  1803               	btfsc	3,0
  1754  0516  2CD1               	goto	l2419
  1755  0517                     l628:
  1756  0517  085D               	movf	___fttol@exp1,w
  1757  0518  1903               	btfsc	3,2
  1758  0519  2D26               	goto	l2451
  1759  051A  3001               	movlw	1
  1760  051B  00D4               	movwf	??___fttol
  1761  051C                     u2225:
  1762  051C  1003               	clrc
  1763  051D  0DD9               	rlf	___fttol@lval,f
  1764  051E  0DDA               	rlf	___fttol@lval+1,f
  1765  051F  0DDB               	rlf	___fttol@lval+2,f
  1766  0520  0DDC               	rlf	___fttol@lval+3,f
  1767  0521  0BD4               	decfsz	??___fttol,f
  1768  0522  2D1C               	goto	u2225
  1769  0523  3001               	movlw	1
  1770  0524  02DD               	subwf	___fttol@exp1,f
  1771  0525  2D17               	goto	l628
  1772  0526                     l2451:
  1773  0526  0858               	movf	___fttol@sign1,w
  1774  0527  1903               	btfsc	3,2
  1775  0528  2D34               	goto	l2455
  1776  0529  09D9               	comf	___fttol@lval,f
  1777  052A  09DA               	comf	___fttol@lval+1,f
  1778  052B  09DB               	comf	___fttol@lval+2,f
  1779  052C  09DC               	comf	___fttol@lval+3,f
  1780  052D  0AD9               	incf	___fttol@lval,f
  1781  052E  1903               	skipnz
  1782  052F  0ADA               	incf	___fttol@lval+1,f
  1783  0530  1903               	skipnz
  1784  0531  0ADB               	incf	___fttol@lval+2,f
  1785  0532  1903               	skipnz
  1786  0533  0ADC               	incf	___fttol@lval+3,f
  1787  0534                     l2455:
  1788  0534  085C               	movf	___fttol@lval+3,w
  1789  0535  00D3               	movwf	?___fttol+3
  1790  0536  085B               	movf	___fttol@lval+2,w
  1791  0537  00D2               	movwf	?___fttol+2
  1792  0538  085A               	movf	___fttol@lval+1,w
  1793  0539  00D1               	movwf	?___fttol+1
  1794  053A  0859               	movf	___fttol@lval,w
  1795  053B  00D0               	movwf	?___fttol
  1796  053C  0008               	return
  1797  053D                     __end_of___fttol:
  1798                           
  1799                           	psect	text3
  1800  0425                     __ptext3:	
  1801 ;; *************** function _Send_data *****************
  1802 ;; Defined at:
  1803 ;;		line 16 in file "uart.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;  Value           2   30[BANK0 ] unsigned int 
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;  k               2    1[BANK1 ] unsigned int 
  1808 ;;  i               1    3[BANK1 ] unsigned char 
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  1    wreg      void 
  1811 ;; Registers used:
  1812 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1818 ;;      Params:         0       2       0       0       0
  1819 ;;      Locals:         0       0       3       0       0
  1820 ;;      Temps:          0       0       1       0       0
  1821 ;;      Totals:         0       2       4       0       0
  1822 ;;Total ram usage:        6 bytes
  1823 ;; Hardware stack levels used:    1
  1824 ;; Hardware stack levels required when called:    4
  1825 ;; This function calls:
  1826 ;;		___lwdiv
  1827 ;;		___lwmod
  1828 ;; This function is called by:
  1829 ;;		_main
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           
  1834                           ;psect for function _Send_data
  1835  0425                     _Send_data:
  1836                           
  1837                           ;uart.c: 16: void Send_data(unsigned int Value);uart.c: 17: {;uart.c: 18:     unsigned c
      +                          har i;;uart.c: 19:     unsigned int k;;uart.c: 21:  commbuffer[0]='{';
  1838                           
  1839                           ;incstack = 0
  1840                           ; Regs used in _Send_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1841  0425  307B               	movlw	123
  1842  0426  1683               	bsf	3,5	;RP0=1, select bank1
  1843  0427  1303               	bcf	3,6	;RP1=0, select bank1
  1844  0428  00EA               	movwf	??_Send_data^(0+128)
  1845  0429  086A               	movf	??_Send_data^(0+128),w
  1846  042A  00E0               	movwf	_commbuffer^(0+128)
  1847                           
  1848                           ;uart.c: 23:  commbuffer[1]=Value/100+0x30;
  1849  042B  3064               	movlw	100
  1850  042C  1283               	bcf	3,5	;RP0=0, select bank0
  1851  042D  1303               	bcf	3,6	;RP1=0, select bank0
  1852  042E  00D6               	movwf	___lwdiv@divisor
  1853  042F  3000               	movlw	0
  1854  0430  00D7               	movwf	___lwdiv@divisor+1
  1855  0431  085F               	movf	Send_data@Value+1,w
  1856  0432  00D9               	movwf	___lwdiv@dividend+1
  1857  0433  085E               	movf	Send_data@Value,w
  1858  0434  00D8               	movwf	___lwdiv@dividend
  1859  0435  120A  118A  273A  120A  118A  	fcall	___lwdiv
  1860  043A  1283               	bcf	3,5	;RP0=0, select bank0
  1861  043B  1303               	bcf	3,6	;RP1=0, select bank0
  1862  043C  0856               	movf	?___lwdiv,w
  1863  043D  3E30               	addlw	48
  1864  043E  1683               	bsf	3,5	;RP0=1, select bank1
  1865  043F  1303               	bcf	3,6	;RP1=0, select bank1
  1866  0440  00EA               	movwf	??_Send_data^(0+128)
  1867  0441  086A               	movf	??_Send_data^(0+128),w
  1868  0442  00E1               	movwf	(_commbuffer^(0+128)+1)
  1869                           
  1870                           ;uart.c: 24:     commbuffer[2]='.';
  1871  0443  302E               	movlw	46
  1872  0444  00EA               	movwf	??_Send_data^(0+128)
  1873  0445  086A               	movf	??_Send_data^(0+128),w
  1874  0446  00E2               	movwf	(_commbuffer^(0+128)+2)
  1875                           
  1876                           ;uart.c: 25:     k=Value%100;
  1877  0447  3064               	movlw	100
  1878  0448  1283               	bcf	3,5	;RP0=0, select bank0
  1879  0449  1303               	bcf	3,6	;RP1=0, select bank0
  1880  044A  00D0               	movwf	___lwmod@divisor
  1881  044B  3000               	movlw	0
  1882  044C  00D1               	movwf	___lwmod@divisor+1
  1883  044D  085F               	movf	Send_data@Value+1,w
  1884  044E  00D3               	movwf	___lwmod@dividend+1
  1885  044F  085E               	movf	Send_data@Value,w
  1886  0450  00D2               	movwf	___lwmod@dividend
  1887  0451  120A  158A  27CC  120A  118A  	fcall	___lwmod
  1888  0456  1283               	bcf	3,5	;RP0=0, select bank0
  1889  0457  1303               	bcf	3,6	;RP1=0, select bank0
  1890  0458  0851               	movf	?___lwmod+1,w
  1891  0459  1683               	bsf	3,5	;RP0=1, select bank1
  1892  045A  1303               	bcf	3,6	;RP1=0, select bank1
  1893  045B  00EC               	movwf	(Send_data@k+1)^(0+128)
  1894  045C  1283               	bcf	3,5	;RP0=0, select bank0
  1895  045D  1303               	bcf	3,6	;RP1=0, select bank0
  1896  045E  0850               	movf	?___lwmod,w
  1897  045F  1683               	bsf	3,5	;RP0=1, select bank1
  1898  0460  1303               	bcf	3,6	;RP1=0, select bank1
  1899  0461  00EB               	movwf	Send_data@k^(0+128)
  1900                           
  1901                           ;uart.c: 26:  commbuffer[3]=k/10+0x30;
  1902  0462  300A               	movlw	10
  1903  0463  1283               	bcf	3,5	;RP0=0, select bank0
  1904  0464  1303               	bcf	3,6	;RP1=0, select bank0
  1905  0465  00D6               	movwf	___lwdiv@divisor
  1906  0466  3000               	movlw	0
  1907  0467  00D7               	movwf	___lwdiv@divisor+1
  1908  0468  1683               	bsf	3,5	;RP0=1, select bank1
  1909  0469  1303               	bcf	3,6	;RP1=0, select bank1
  1910  046A  086C               	movf	(Send_data@k+1)^(0+128),w
  1911  046B  1283               	bcf	3,5	;RP0=0, select bank0
  1912  046C  1303               	bcf	3,6	;RP1=0, select bank0
  1913  046D  00D9               	movwf	___lwdiv@dividend+1
  1914  046E  1683               	bsf	3,5	;RP0=1, select bank1
  1915  046F  1303               	bcf	3,6	;RP1=0, select bank1
  1916  0470  086B               	movf	Send_data@k^(0+128),w
  1917  0471  1283               	bcf	3,5	;RP0=0, select bank0
  1918  0472  1303               	bcf	3,6	;RP1=0, select bank0
  1919  0473  00D8               	movwf	___lwdiv@dividend
  1920  0474  120A  118A  273A  120A  118A  	fcall	___lwdiv
  1921  0479  1283               	bcf	3,5	;RP0=0, select bank0
  1922  047A  1303               	bcf	3,6	;RP1=0, select bank0
  1923  047B  0856               	movf	?___lwdiv,w
  1924  047C  3E30               	addlw	48
  1925  047D  1683               	bsf	3,5	;RP0=1, select bank1
  1926  047E  1303               	bcf	3,6	;RP1=0, select bank1
  1927  047F  00EA               	movwf	??_Send_data^(0+128)
  1928  0480  086A               	movf	??_Send_data^(0+128),w
  1929  0481  00E3               	movwf	(_commbuffer^(0+128)+3)
  1930                           
  1931                           ;uart.c: 27:  commbuffer[4]=k%10+0x30;
  1932  0482  300A               	movlw	10
  1933  0483  1283               	bcf	3,5	;RP0=0, select bank0
  1934  0484  1303               	bcf	3,6	;RP1=0, select bank0
  1935  0485  00D0               	movwf	___lwmod@divisor
  1936  0486  3000               	movlw	0
  1937  0487  00D1               	movwf	___lwmod@divisor+1
  1938  0488  1683               	bsf	3,5	;RP0=1, select bank1
  1939  0489  1303               	bcf	3,6	;RP1=0, select bank1
  1940  048A  086C               	movf	(Send_data@k+1)^(0+128),w
  1941  048B  1283               	bcf	3,5	;RP0=0, select bank0
  1942  048C  1303               	bcf	3,6	;RP1=0, select bank0
  1943  048D  00D3               	movwf	___lwmod@dividend+1
  1944  048E  1683               	bsf	3,5	;RP0=1, select bank1
  1945  048F  1303               	bcf	3,6	;RP1=0, select bank1
  1946  0490  086B               	movf	Send_data@k^(0+128),w
  1947  0491  1283               	bcf	3,5	;RP0=0, select bank0
  1948  0492  1303               	bcf	3,6	;RP1=0, select bank0
  1949  0493  00D2               	movwf	___lwmod@dividend
  1950  0494  120A  158A  27CC  120A  118A  	fcall	___lwmod
  1951  0499  1283               	bcf	3,5	;RP0=0, select bank0
  1952  049A  1303               	bcf	3,6	;RP1=0, select bank0
  1953  049B  0850               	movf	?___lwmod,w
  1954  049C  3E30               	addlw	48
  1955  049D  1683               	bsf	3,5	;RP0=1, select bank1
  1956  049E  1303               	bcf	3,6	;RP1=0, select bank1
  1957  049F  00EA               	movwf	??_Send_data^(0+128)
  1958  04A0  086A               	movf	??_Send_data^(0+128),w
  1959  04A1  00E4               	movwf	(_commbuffer^(0+128)+4)
  1960                           
  1961                           ;uart.c: 28:  commbuffer[5]='}';
  1962  04A2  307D               	movlw	125
  1963  04A3  00EA               	movwf	??_Send_data^(0+128)
  1964  04A4  086A               	movf	??_Send_data^(0+128),w
  1965  04A5  00E5               	movwf	(_commbuffer^(0+128)+5)
  1966                           
  1967                           ;uart.c: 29:     commbuffer[6]='\r';
  1968  04A6  300D               	movlw	13
  1969  04A7  00EA               	movwf	??_Send_data^(0+128)
  1970  04A8  086A               	movf	??_Send_data^(0+128),w
  1971  04A9  00E6               	movwf	(_commbuffer^(0+128)+6)
  1972                           
  1973                           ;uart.c: 31:      for(i=0;i<7;i++)
  1974  04AA  01ED               	clrf	Send_data@i^(0+128)
  1975  04AB                     l2393:
  1976                           
  1977                           ;uart.c: 32:     {;uart.c: 33:       TXREG=commbuffer[i];
  1978  04AB  086D               	movf	Send_data@i^(0+128),w
  1979  04AC  3EE0               	addlw	(low (_commbuffer| 0))& (0+255)
  1980  04AD  0084               	movwf	4
  1981  04AE  1383               	bcf	3,7	;select IRP bank1
  1982  04AF  0800               	movf	0,w
  1983  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  1984  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  1985  04B2  0099               	movwf	25	;volatile
  1986  04B3                     l236:	
  1987                           ;uart.c: 34:       while(TRMT==0);
  1988                           
  1989  04B3  1683               	bsf	3,5	;RP0=1, select bank1
  1990  04B4  1303               	bcf	3,6	;RP1=0, select bank1
  1991  04B5  1C98               	btfss	24,1	;volatile
  1992  04B6  2CB3               	goto	l236
  1993                           
  1994                           ;uart.c: 35:     }
  1995  04B7  3001               	movlw	1
  1996  04B8  00EA               	movwf	??_Send_data^(0+128)
  1997  04B9  086A               	movf	??_Send_data^(0+128),w
  1998  04BA  07ED               	addwf	Send_data@i^(0+128),f
  1999  04BB  3007               	movlw	7
  2000  04BC  026D               	subwf	Send_data@i^(0+128),w
  2001  04BD  1803               	btfsc	3,0
  2002  04BE  0008               	return
  2003  04BF  2CAB               	goto	l2393
  2004  04C0                     __end_of_Send_data:
  2005                           
  2006                           	psect	text4
  2007  0FCC                     __ptext4:	
  2008 ;; *************** function ___lwmod *****************
  2009 ;; Defined at:
  2010 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;  divisor         2   16[BANK0 ] unsigned int 
  2013 ;;  dividend        2   18[BANK0 ] unsigned int 
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;  counter         1   21[BANK0 ] unsigned char 
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  2   16[BANK0 ] unsigned int 
  2018 ;; Registers used:
  2019 ;;		wreg, status,2, status,0
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2025 ;;      Params:         0       4       0       0       0
  2026 ;;      Locals:         0       1       0       0       0
  2027 ;;      Temps:          0       1       0       0       0
  2028 ;;      Totals:         0       6       0       0       0
  2029 ;;Total ram usage:        6 bytes
  2030 ;; Hardware stack levels used:    1
  2031 ;; Hardware stack levels required when called:    3
  2032 ;; This function calls:
  2033 ;;		Nothing
  2034 ;; This function is called by:
  2035 ;;		_main
  2036 ;;		_Send_data
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           
  2041                           ;psect for function ___lwmod
  2042  0FCC                     ___lwmod:
  2043                           
  2044                           ;incstack = 0
  2045                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2046  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  2047  0FCD  1303               	bcf	3,6	;RP1=0, select bank0
  2048  0FCE  0850               	movf	___lwmod@divisor,w
  2049  0FCF  0451               	iorwf	___lwmod@divisor+1,w
  2050  0FD0  1903               	btfsc	3,2
  2051  0FD1  2FFB               	goto	l2273
  2052  0FD2  01D5               	clrf	___lwmod@counter
  2053  0FD3  0AD5               	incf	___lwmod@counter,f
  2054  0FD4                     l2263:
  2055  0FD4  1BD1               	btfsc	___lwmod@divisor+1,7
  2056  0FD5  2FE2               	goto	l2265
  2057  0FD6  3001               	movlw	1
  2058  0FD7                     u2025:
  2059  0FD7  1003               	clrc
  2060  0FD8  0DD0               	rlf	___lwmod@divisor,f
  2061  0FD9  0DD1               	rlf	___lwmod@divisor+1,f
  2062  0FDA  3EFF               	addlw	-1
  2063  0FDB  1D03               	skipz
  2064  0FDC  2FD7               	goto	u2025
  2065  0FDD  3001               	movlw	1
  2066  0FDE  00D4               	movwf	??___lwmod
  2067  0FDF  0854               	movf	??___lwmod,w
  2068  0FE0  07D5               	addwf	___lwmod@counter,f
  2069  0FE1  2FD4               	goto	l2263
  2070  0FE2                     l2265:
  2071  0FE2  0851               	movf	___lwmod@divisor+1,w
  2072  0FE3  0253               	subwf	___lwmod@dividend+1,w
  2073  0FE4  1D03               	skipz
  2074  0FE5  2FE8               	goto	u2045
  2075  0FE6  0850               	movf	___lwmod@divisor,w
  2076  0FE7  0252               	subwf	___lwmod@dividend,w
  2077  0FE8                     u2045:
  2078  0FE8  1C03               	skipc
  2079  0FE9  2FF0               	goto	l2269
  2080  0FEA  0850               	movf	___lwmod@divisor,w
  2081  0FEB  02D2               	subwf	___lwmod@dividend,f
  2082  0FEC  0851               	movf	___lwmod@divisor+1,w
  2083  0FED  1C03               	skipc
  2084  0FEE  03D3               	decf	___lwmod@dividend+1,f
  2085  0FEF  02D3               	subwf	___lwmod@dividend+1,f
  2086  0FF0                     l2269:
  2087  0FF0  3001               	movlw	1
  2088  0FF1                     u2055:
  2089  0FF1  1003               	clrc
  2090  0FF2  0CD1               	rrf	___lwmod@divisor+1,f
  2091  0FF3  0CD0               	rrf	___lwmod@divisor,f
  2092  0FF4  3EFF               	addlw	-1
  2093  0FF5  1D03               	skipz
  2094  0FF6  2FF1               	goto	u2055
  2095  0FF7  3001               	movlw	1
  2096  0FF8  02D5               	subwf	___lwmod@counter,f
  2097  0FF9  1D03               	btfss	3,2
  2098  0FFA  2FE2               	goto	l2265
  2099  0FFB                     l2273:
  2100  0FFB  0853               	movf	___lwmod@dividend+1,w
  2101  0FFC  00D1               	movwf	?___lwmod+1
  2102  0FFD  0852               	movf	___lwmod@dividend,w
  2103  0FFE  00D0               	movwf	?___lwmod
  2104  0FFF  0008               	return
  2105  1000                     __end_of___lwmod:
  2106                           
  2107                           	psect	text5
  2108  073A                     __ptext5:	
  2109 ;; *************** function ___lwdiv *****************
  2110 ;; Defined at:
  2111 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;  divisor         2   22[BANK0 ] unsigned int 
  2114 ;;  dividend        2   24[BANK0 ] unsigned int 
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;  quotient        2   28[BANK0 ] unsigned int 
  2117 ;;  counter         1   27[BANK0 ] unsigned char 
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  2   22[BANK0 ] unsigned int 
  2120 ;; Registers used:
  2121 ;;		wreg, status,2, status,0
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2127 ;;      Params:         0       4       0       0       0
  2128 ;;      Locals:         0       3       0       0       0
  2129 ;;      Temps:          0       1       0       0       0
  2130 ;;      Totals:         0       8       0       0       0
  2131 ;;Total ram usage:        8 bytes
  2132 ;; Hardware stack levels used:    1
  2133 ;; Hardware stack levels required when called:    3
  2134 ;; This function calls:
  2135 ;;		Nothing
  2136 ;; This function is called by:
  2137 ;;		_main
  2138 ;;		_Send_data
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           
  2143                           ;psect for function ___lwdiv
  2144  073A                     ___lwdiv:
  2145                           
  2146                           ;incstack = 0
  2147                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2148  073A  1283               	bcf	3,5	;RP0=0, select bank0
  2149  073B  1303               	bcf	3,6	;RP1=0, select bank0
  2150  073C  01DC               	clrf	___lwdiv@quotient
  2151  073D  01DD               	clrf	___lwdiv@quotient+1
  2152  073E  0856               	movf	___lwdiv@divisor,w
  2153  073F  0457               	iorwf	___lwdiv@divisor+1,w
  2154  0740  1903               	btfsc	3,2
  2155  0741  2F73               	goto	l2251
  2156  0742  01DB               	clrf	___lwdiv@counter
  2157  0743  0ADB               	incf	___lwdiv@counter,f
  2158  0744                     l2239:
  2159  0744  1BD7               	btfsc	___lwdiv@divisor+1,7
  2160  0745  2F52               	goto	l2241
  2161  0746  3001               	movlw	1
  2162  0747                     u1955:
  2163  0747  1003               	clrc
  2164  0748  0DD6               	rlf	___lwdiv@divisor,f
  2165  0749  0DD7               	rlf	___lwdiv@divisor+1,f
  2166  074A  3EFF               	addlw	-1
  2167  074B  1D03               	skipz
  2168  074C  2F47               	goto	u1955
  2169  074D  3001               	movlw	1
  2170  074E  00DA               	movwf	??___lwdiv
  2171  074F  085A               	movf	??___lwdiv,w
  2172  0750  07DB               	addwf	___lwdiv@counter,f
  2173  0751  2F44               	goto	l2239
  2174  0752                     l2241:
  2175  0752  3001               	movlw	1
  2176  0753                     u1975:
  2177  0753  1003               	clrc
  2178  0754  0DDC               	rlf	___lwdiv@quotient,f
  2179  0755  0DDD               	rlf	___lwdiv@quotient+1,f
  2180  0756  3EFF               	addlw	-1
  2181  0757  1D03               	skipz
  2182  0758  2F53               	goto	u1975
  2183  0759  0857               	movf	___lwdiv@divisor+1,w
  2184  075A  0259               	subwf	___lwdiv@dividend+1,w
  2185  075B  1D03               	skipz
  2186  075C  2F5F               	goto	u1985
  2187  075D  0856               	movf	___lwdiv@divisor,w
  2188  075E  0258               	subwf	___lwdiv@dividend,w
  2189  075F                     u1985:
  2190  075F  1C03               	skipc
  2191  0760  2F68               	goto	l2247
  2192  0761  0856               	movf	___lwdiv@divisor,w
  2193  0762  02D8               	subwf	___lwdiv@dividend,f
  2194  0763  0857               	movf	___lwdiv@divisor+1,w
  2195  0764  1C03               	skipc
  2196  0765  03D9               	decf	___lwdiv@dividend+1,f
  2197  0766  02D9               	subwf	___lwdiv@dividend+1,f
  2198  0767  145C               	bsf	___lwdiv@quotient,0
  2199  0768                     l2247:
  2200  0768  3001               	movlw	1
  2201  0769                     u1995:
  2202  0769  1003               	clrc
  2203  076A  0CD7               	rrf	___lwdiv@divisor+1,f
  2204  076B  0CD6               	rrf	___lwdiv@divisor,f
  2205  076C  3EFF               	addlw	-1
  2206  076D  1D03               	skipz
  2207  076E  2F69               	goto	u1995
  2208  076F  3001               	movlw	1
  2209  0770  02DB               	subwf	___lwdiv@counter,f
  2210  0771  1D03               	btfss	3,2
  2211  0772  2F52               	goto	l2241
  2212  0773                     l2251:
  2213  0773  085D               	movf	___lwdiv@quotient+1,w
  2214  0774  00D7               	movwf	?___lwdiv+1
  2215  0775  085C               	movf	___lwdiv@quotient,w
  2216  0776  00D6               	movwf	?___lwdiv
  2217  0777  0008               	return
  2218  0778                     __end_of___lwdiv:
  2219                           
  2220                           	psect	text6
  2221  0667                     __ptext6:	
  2222 ;; *************** function _LCDWriteString *****************
  2223 ;; Defined at:
  2224 ;;		line 206 in file "lcd_hd44780_pic16.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;  msg             1    wreg     PTR const unsigned char 
  2227 ;;		 -> STR_5(12), STR_4(12), STR_3(11), 
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;  msg             1   30[BANK0 ] PTR const unsigned char 
  2230 ;;		 -> STR_5(12), STR_4(12), STR_3(11), 
  2231 ;;  cc              1   29[BANK0 ] char 
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  1    wreg      void 
  2234 ;; Registers used:
  2235 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2241 ;;      Params:         0       0       0       0       0
  2242 ;;      Locals:         0       2       0       0       0
  2243 ;;      Temps:          0       1       0       0       0
  2244 ;;      Totals:         0       3       0       0       0
  2245 ;;Total ram usage:        3 bytes
  2246 ;; Hardware stack levels used:    1
  2247 ;; Hardware stack levels required when called:    5
  2248 ;; This function calls:
  2249 ;;		_LCDByte
  2250 ;; This function is called by:
  2251 ;;		_main
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           
  2256                           ;psect for function _LCDWriteString
  2257  0667                     _LCDWriteString:
  2258                           
  2259                           ;incstack = 0
  2260                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2261                           ;LCDWriteString@msg stored from wreg
  2262  0667  1283               	bcf	3,5	;RP0=0, select bank0
  2263  0668  1303               	bcf	3,6	;RP1=0, select bank0
  2264  0669  00DE               	movwf	LCDWriteString@msg
  2265  066A                     l2375:	
  2266                           ;lcd_hd44780_pic16.c: 206: void LCDWriteString(const char *msg);lcd_hd44780_pic16.c: 207
      +                          : {;lcd_hd44780_pic16.c: 236:  while(*msg!='\0')
  2267                           
  2268                           
  2269                           ;lcd_hd44780_pic16.c: 236:  while(*msg!='\0')
  2270  066A  085E               	movf	LCDWriteString@msg,w
  2271  066B  0084               	movwf	4
  2272  066C  120A  158A  2000  120A  118A  	fcall	stringdir
  2273  0671  3A00               	xorlw	0
  2274  0672  1903               	btfsc	3,2
  2275  0673  0008               	return
  2276                           
  2277                           ;lcd_hd44780_pic16.c: 237:  {;lcd_hd44780_pic16.c: 239:  if(*msg=='%')
  2278  0674  085E               	movf	LCDWriteString@msg,w
  2279  0675  0084               	movwf	4
  2280  0676  120A  158A  2000  120A  118A  	fcall	stringdir
  2281  067B  3A25               	xorlw	37
  2282  067C  1D03               	skipz
  2283  067D  2EA2               	goto	l2371
  2284                           
  2285                           ;lcd_hd44780_pic16.c: 240:  {;lcd_hd44780_pic16.c: 241:   msg++;
  2286  067E  3001               	movlw	1
  2287  067F  00DC               	movwf	??_LCDWriteString
  2288  0680  085C               	movf	??_LCDWriteString,w
  2289  0681  07DE               	addwf	LCDWriteString@msg,f
  2290                           
  2291                           ;lcd_hd44780_pic16.c: 242:   int8_t cc=*msg-'0';
  2292  0682  085E               	movf	LCDWriteString@msg,w
  2293  0683  0084               	movwf	4
  2294  0684  120A  158A  2000  120A  118A  	fcall	stringdir
  2295  0689  3ED0               	addlw	-48
  2296  068A  00DC               	movwf	??_LCDWriteString
  2297  068B  085C               	movf	??_LCDWriteString,w
  2298  068C  00DD               	movwf	LCDWriteString@cc
  2299                           
  2300                           ;lcd_hd44780_pic16.c: 244:   if(cc>=0 && cc<=7)
  2301  068D  1BDD               	btfsc	LCDWriteString@cc,7
  2302  068E  2E98               	goto	l2367
  2303  068F  085D               	movf	LCDWriteString@cc,w
  2304  0690  3A80               	xorlw	128
  2305  0691  3E78               	addlw	-136
  2306  0692  1803               	skipnc
  2307  0693  2E98               	goto	l2367
  2308                           
  2309                           ;lcd_hd44780_pic16.c: 245:   {;lcd_hd44780_pic16.c: 246:    (LCDByte(cc,1));
  2310  0694  01D5               	clrf	LCDByte@isdata
  2311  0695  0AD5               	incf	LCDByte@isdata,f
  2312  0696  085D               	movf	LCDWriteString@cc,w
  2313  0697  2EAB               	goto	L2
  2314  0698                     l2367:	
  2315                           ;lcd_hd44780_pic16.c: 247:   }
  2316                           
  2317                           
  2318                           ;lcd_hd44780_pic16.c: 249:   {;lcd_hd44780_pic16.c: 250:    (LCDByte('%',1));
  2319  0698  01D5               	clrf	LCDByte@isdata
  2320  0699  0AD5               	incf	LCDByte@isdata,f
  2321  069A  3025               	movlw	37
  2322  069B  120A  118A  26B7  120A  118A  	fcall	_LCDByte
  2323                           
  2324                           ;lcd_hd44780_pic16.c: 251:    (LCDByte(*msg,1));
  2325  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  2326  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  2327  06A2                     l2371:
  2328                           
  2329                           ;lcd_hd44780_pic16.c: 255:  {;lcd_hd44780_pic16.c: 256:   (LCDByte(*msg,1));
  2330  06A2  01D5               	clrf	LCDByte@isdata
  2331  06A3  0AD5               	incf	LCDByte@isdata,f
  2332  06A4  085E               	movf	LCDWriteString@msg,w
  2333  06A5  0084               	movwf	4
  2334  06A6  120A  158A  2000  120A  118A  	fcall	stringdir
  2335  06AB                     L2:
  2336  06AB  120A  118A  26B7  120A  118A  	fcall	_LCDByte
  2337                           
  2338                           ;lcd_hd44780_pic16.c: 258:  msg++;
  2339  06B0  3001               	movlw	1
  2340  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  2341  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  2342  06B3  00DC               	movwf	??_LCDWriteString
  2343  06B4  085C               	movf	??_LCDWriteString,w
  2344  06B5  07DE               	addwf	LCDWriteString@msg,f
  2345  06B6  2E6A               	goto	l2375
  2346  06B7                     __end_of_LCDWriteString:
  2347                           
  2348                           	psect	text7
  2349  05A9                     __ptext7:	
  2350 ;; *************** function _LCDInit *****************
  2351 ;; Defined at:
  2352 ;;		line 148 in file "lcd_hd44780_pic16.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;  style           1    wreg     unsigned char 
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;  style           1   30[BANK0 ] unsigned char 
  2357 ;;  __i             1   31[BANK0 ] unsigned char 
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1    wreg      void 
  2360 ;; Registers used:
  2361 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2367 ;;      Params:         0       0       0       0       0
  2368 ;;      Locals:         0       2       0       0       0
  2369 ;;      Temps:          0       2       0       0       0
  2370 ;;      Totals:         0       4       0       0       0
  2371 ;;Total ram usage:        4 bytes
  2372 ;; Hardware stack levels used:    1
  2373 ;; Hardware stack levels required when called:    5
  2374 ;; This function calls:
  2375 ;;		_LCDBusyLoop
  2376 ;;		_LCDByte
  2377 ;; This function is called by:
  2378 ;;		_main
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           
  2383                           ;psect for function _LCDInit
  2384  05A9                     _LCDInit:
  2385                           
  2386                           ;incstack = 0
  2387                           ; Regs used in _LCDInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2388                           ;LCDInit@style stored from wreg
  2389  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  2390  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  2391  05AB  00DE               	movwf	LCDInit@style
  2392                           
  2393                           ;lcd_hd44780_pic16.c: 148: void LCDInit(uint8_t style);lcd_hd44780_pic16.c: 149: {;lcd_h
      +                          d44780_pic16.c: 164:   _delay((unsigned long)((30)*(16000000/4000.0)));
  2394  05AC  309C               	movlw	156
  2395  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  2396  05AE  1303               	bcf	3,6	;RP1=0, select bank0
  2397  05AF  00DD               	movwf	??_LCDInit+1
  2398  05B0  30D6               	movlw	214
  2399  05B1  00DC               	movwf	??_LCDInit
  2400  05B2                     u2347:
  2401  05B2  0BDC               	decfsz	??_LCDInit,f
  2402  05B3  2DB2               	goto	u2347
  2403  05B4  0BDD               	decfsz	??_LCDInit+1,f
  2404  05B5  2DB2               	goto	u2347
  2405  05B6  0000               	nop
  2406                           
  2407                           ;lcd_hd44780_pic16.c: 167:  TRISD&=(~(0x0F<<0));
  2408  05B7  30F0               	movlw	240
  2409  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  2410  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  2411  05BA  00DC               	movwf	??_LCDInit
  2412  05BB  085C               	movf	??_LCDInit,w
  2413  05BC  1683               	bsf	3,5	;RP0=1, select bank1
  2414  05BD  1303               	bcf	3,6	;RP1=0, select bank1
  2415  05BE  0588               	andwf	8,f	;volatile
  2416                           
  2417                           ;lcd_hd44780_pic16.c: 169:         TRISDbits.TRISD6=0;
  2418  05BF  1308               	bcf	8,6	;volatile
  2419                           
  2420                           ;lcd_hd44780_pic16.c: 170:         TRISDbits.TRISD4=0;
  2421  05C0  1208               	bcf	8,4	;volatile
  2422                           
  2423                           ;lcd_hd44780_pic16.c: 171:         TRISDbits.TRISD5=0;
  2424  05C1  1288               	bcf	8,5	;volatile
  2425                           
  2426                           ;lcd_hd44780_pic16.c: 173:  PORTD&=(~(0x0F<<0));
  2427  05C2  30F0               	movlw	240
  2428  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  2429  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  2430  05C5  00DC               	movwf	??_LCDInit
  2431  05C6  085C               	movf	??_LCDInit,w
  2432  05C7  0588               	andwf	8,f	;volatile
  2433                           
  2434                           ;lcd_hd44780_pic16.c: 175:         (RD6=0);
  2435  05C8  1308               	bcf	8,6	;volatile
  2436                           
  2437                           ;lcd_hd44780_pic16.c: 176:  (RD5=0);
  2438  05C9  1288               	bcf	8,5	;volatile
  2439                           
  2440                           ;lcd_hd44780_pic16.c: 177:  (RD4=0);
  2441  05CA  1208               	bcf	8,4	;volatile
  2442                           
  2443                           ;lcd_hd44780_pic16.c: 180:  _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  2444  05CB  2DCC               	nop2	;2 cycle nop
  2445                           
  2446                           ;lcd_hd44780_pic16.c: 182:  (RD6=1);
  2447  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  2448  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  2449  05CE  1708               	bsf	8,6	;volatile
  2450                           
  2451                           ;lcd_hd44780_pic16.c: 183:  PORTD|=((0b00000010)<<0);
  2452  05CF  1488               	bsf	8,1	;volatile
  2453                           
  2454                           ;lcd_hd44780_pic16.c: 184:  _delay((unsigned long)((1)*(16000000/4000000.0)));
  2455  05D0  2DD1               	nop2	;2 cycle nop
  2456  05D1  2DD2               	nop2	;2 cycle nop
  2457                           
  2458                           ;lcd_hd44780_pic16.c: 185:  (RD6=0);
  2459  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  2460  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  2461  05D4  1308               	bcf	8,6	;volatile
  2462                           
  2463                           ;lcd_hd44780_pic16.c: 186:  _delay((unsigned long)((1)*(16000000/4000000.0)));
  2464  05D5  2DD6               	nop2	;2 cycle nop
  2465  05D6  2DD7               	nop2	;2 cycle nop
  2466                           
  2467                           ;lcd_hd44780_pic16.c: 189:  LCDBusyLoop();
  2468  05D7  120A  118A  2612  120A  118A  	fcall	_LCDBusyLoop
  2469                           
  2470                           ;lcd_hd44780_pic16.c: 194:  (LCDByte(0b00101000,0));
  2471  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  2472  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  2473  05DE  01D5               	clrf	LCDByte@isdata
  2474  05DF  3028               	movlw	40
  2475  05E0  120A  118A  26B7  120A  118A  	fcall	_LCDByte
  2476                           
  2477                           ;lcd_hd44780_pic16.c: 195:         (LCDByte(0b00001100|style,0));
  2478  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  2479  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  2480  05E7  01D5               	clrf	LCDByte@isdata
  2481  05E8  085E               	movf	LCDInit@style,w
  2482  05E9  380C               	iorlw	12
  2483  05EA  120A  118A  26B7  120A  118A  	fcall	_LCDByte
  2484                           
  2485                           ;lcd_hd44780_pic16.c: 198:         (LCDByte(0b01000000,0));
  2486  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  2487  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  2488  05F1  01D5               	clrf	LCDByte@isdata
  2489  05F2  3040               	movlw	64
  2490  05F3  120A  118A  26B7  120A  118A  	fcall	_LCDByte
  2491                           
  2492                           ;lcd_hd44780_pic16.c: 200:  uint8_t __i;;lcd_hd44780_pic16.c: 201:  for(__i=0;__i<sizeof
      +                          (__cgram);__i++)
  2493  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  2494  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  2495  05FA  01DF               	clrf	LCDInit@__i
  2496  05FB                     l2343:
  2497                           
  2498                           ;lcd_hd44780_pic16.c: 202:   (LCDByte(__cgram[__i],1));
  2499  05FB  01D5               	clrf	LCDByte@isdata
  2500  05FC  0AD5               	incf	LCDByte@isdata,f
  2501  05FD  085F               	movf	LCDInit@__i,w
  2502  05FE  3EA0               	addlw	(low (___cgram| 0))& (0+255)
  2503  05FF  0084               	movwf	4
  2504  0600  1383               	bcf	3,7	;select IRP bank1
  2505  0601  0800               	movf	0,w
  2506  0602  120A  118A  26B7  120A  118A  	fcall	_LCDByte
  2507  0607  3001               	movlw	1
  2508  0608  1283               	bcf	3,5	;RP0=0, select bank0
  2509  0609  1303               	bcf	3,6	;RP1=0, select bank0
  2510  060A  00DC               	movwf	??_LCDInit
  2511  060B  085C               	movf	??_LCDInit,w
  2512  060C  07DF               	addwf	LCDInit@__i,f
  2513  060D  3040               	movlw	64
  2514  060E  025F               	subwf	LCDInit@__i,w
  2515  060F  1803               	btfsc	3,0
  2516  0610  0008               	return
  2517  0611  2DFB               	goto	l2343
  2518  0612                     __end_of_LCDInit:
  2519                           
  2520                           	psect	text8
  2521  0F9E                     __ptext8:	
  2522 ;; *************** function _LCDGotoXY *****************
  2523 ;; Defined at:
  2524 ;;		line 307 in file "lcd_hd44780_pic16.c"
  2525 ;; Parameters:    Size  Location     Type
  2526 ;;  x               1    wreg     unsigned char 
  2527 ;;  y               1   28[BANK0 ] unsigned char 
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;  x               1   31[BANK0 ] unsigned char 
  2530 ;; Return value:  Size  Location     Type
  2531 ;;                  1    wreg      void 
  2532 ;; Registers used:
  2533 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2539 ;;      Params:         0       1       0       0       0
  2540 ;;      Locals:         0       1       0       0       0
  2541 ;;      Temps:          0       2       0       0       0
  2542 ;;      Totals:         0       4       0       0       0
  2543 ;;Total ram usage:        4 bytes
  2544 ;; Hardware stack levels used:    1
  2545 ;; Hardware stack levels required when called:    5
  2546 ;; This function calls:
  2547 ;;		_LCDByte
  2548 ;; This function is called by:
  2549 ;;		_main
  2550 ;; This function uses a non-reentrant model
  2551 ;;
  2552                           
  2553                           
  2554                           ;psect for function _LCDGotoXY
  2555  0F9E                     _LCDGotoXY:
  2556                           
  2557                           ;incstack = 0
  2558                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2559                           ;LCDGotoXY@x stored from wreg
  2560  0F9E  1283               	bcf	3,5	;RP0=0, select bank0
  2561  0F9F  1303               	bcf	3,6	;RP1=0, select bank0
  2562  0FA0  00DF               	movwf	LCDGotoXY@x
  2563                           
  2564                           ;lcd_hd44780_pic16.c: 307: void LCDGotoXY(uint8_t x,uint8_t y);lcd_hd44780_pic16.c: 308:
      +                           {;lcd_hd44780_pic16.c: 309:   if(x>=20) return;
  2565  0FA1  3014               	movlw	20
  2566  0FA2  025F               	subwf	LCDGotoXY@x,w
  2567  0FA3  1803               	btfsc	3,0
  2568  0FA4  0008               	return
  2569  0FA5  2FAF               	goto	l2409
  2570  0FA6                     l179:	
  2571                           ;lcd_hd44780_pic16.c: 317:   case 1:
  2572                           
  2573                           
  2574                           ;lcd_hd44780_pic16.c: 318:    x|=0b01000000;
  2575  0FA6  175F               	bsf	LCDGotoXY@x,6
  2576                           
  2577                           ;lcd_hd44780_pic16.c: 319:    break;
  2578  0FA7  2FC5               	goto	l178
  2579  0FA8                     l2403:
  2580                           
  2581                           ;lcd_hd44780_pic16.c: 321:    x+=0x14;
  2582  0FA8  3014               	movlw	20
  2583  0FA9  2FAB               	goto	L3
  2584  0FAA                     l2405:	
  2585                           ;lcd_hd44780_pic16.c: 322:    break;
  2586                           
  2587                           
  2588                           ;lcd_hd44780_pic16.c: 324:    x+=0x54;
  2589  0FAA  3054               	movlw	84
  2590  0FAB                     L3:
  2591  0FAB  00DD               	movwf	??_LCDGotoXY
  2592  0FAC  085D               	movf	??_LCDGotoXY,w
  2593  0FAD  07DF               	addwf	LCDGotoXY@x,f
  2594                           
  2595                           ;lcd_hd44780_pic16.c: 325:    break;
  2596  0FAE  2FC5               	goto	l178
  2597  0FAF                     l2409:
  2598  0FAF  085C               	movf	LCDGotoXY@y,w
  2599  0FB0  00DD               	movwf	??_LCDGotoXY
  2600  0FB1  01DE               	clrf	??_LCDGotoXY+1
  2601                           
  2602                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2603                           ; Switch size 1, requested type "simple"
  2604                           ; Number of cases is 1, Range of values is 0 to 0
  2605                           ; switch strategies available:
  2606                           ; Name         Instructions Cycles
  2607                           ; simple_byte            4     3 (average)
  2608                           ; direct_byte           11     8 (fixed)
  2609                           ; jumptable            260     6 (fixed)
  2610                           ;	Chosen strategy is simple_byte
  2611  0FB2  085E               	movf	??_LCDGotoXY+1,w
  2612  0FB3  3A00               	xorlw	0	; case 0
  2613  0FB4  1903               	skipnz
  2614  0FB5  2FB7               	goto	l2619
  2615  0FB6  2FC5               	goto	l178
  2616  0FB7                     l2619:
  2617                           
  2618                           ; Switch size 1, requested type "simple"
  2619                           ; Number of cases is 4, Range of values is 0 to 3
  2620                           ; switch strategies available:
  2621                           ; Name         Instructions Cycles
  2622                           ; simple_byte           13     7 (average)
  2623                           ; direct_byte           20     8 (fixed)
  2624                           ; jumptable            260     6 (fixed)
  2625                           ;	Chosen strategy is simple_byte
  2626  0FB7  085D               	movf	??_LCDGotoXY,w
  2627  0FB8  3A00               	xorlw	0	; case 0
  2628  0FB9  1903               	skipnz
  2629  0FBA  2FC5               	goto	l178
  2630  0FBB  3A01               	xorlw	1	; case 1
  2631  0FBC  1903               	skipnz
  2632  0FBD  2FA6               	goto	l179
  2633  0FBE  3A03               	xorlw	3	; case 2
  2634  0FBF  1903               	skipnz
  2635  0FC0  2FA8               	goto	l2403
  2636  0FC1  3A01               	xorlw	1	; case 3
  2637  0FC2  1903               	skipnz
  2638  0FC3  2FAA               	goto	l2405
  2639  0FC4  2FC5               	goto	l178
  2640  0FC5                     l178:
  2641                           
  2642                           ;lcd_hd44780_pic16.c: 348:  x|=0b10000000;
  2643  0FC5  17DF               	bsf	LCDGotoXY@x,7
  2644                           
  2645                           ;lcd_hd44780_pic16.c: 349:    (LCDByte(x,0));
  2646  0FC6  01D5               	clrf	LCDByte@isdata
  2647  0FC7  085F               	movf	LCDGotoXY@x,w
  2648  0FC8  120A  118A  26B7   	fcall	_LCDByte
  2649  0FCB  0008               	return
  2650  0FCC                     __end_of_LCDGotoXY:
  2651                           
  2652                           	psect	text9
  2653  06B7                     __ptext9:	
  2654 ;; *************** function _LCDByte *****************
  2655 ;; Defined at:
  2656 ;;		line 41 in file "lcd_hd44780_pic16.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;  c               1    wreg     unsigned char 
  2659 ;;  isdata          1   21[BANK0 ] unsigned char 
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;  c               1   26[BANK0 ] unsigned char 
  2662 ;;  temp            1   27[BANK0 ] unsigned char 
  2663 ;;  ln              1   25[BANK0 ] unsigned char 
  2664 ;;  hn              1   24[BANK0 ] unsigned char 
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  1    wreg      void 
  2667 ;; Registers used:
  2668 ;;		wreg, status,2, status,0, pclath, cstack
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2674 ;;      Params:         0       1       0       0       0
  2675 ;;      Locals:         0       4       0       0       0
  2676 ;;      Temps:          0       2       0       0       0
  2677 ;;      Totals:         0       7       0       0       0
  2678 ;;Total ram usage:        7 bytes
  2679 ;; Hardware stack levels used:    1
  2680 ;; Hardware stack levels required when called:    4
  2681 ;; This function calls:
  2682 ;;		_LCDBusyLoop
  2683 ;; This function is called by:
  2684 ;;		_main
  2685 ;;		_LCDInit
  2686 ;;		_LCDWriteString
  2687 ;;		_LCDGotoXY
  2688 ;;		_LCDWriteInt
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           
  2693                           ;psect for function _LCDByte
  2694  06B7                     _LCDByte:
  2695                           
  2696                           ;incstack = 0
  2697                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  2698                           ;LCDByte@c stored from wreg
  2699  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  2700  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  2701  06B9  00DA               	movwf	LCDByte@c
  2702                           
  2703                           ;lcd_hd44780_pic16.c: 41: void LCDByte(uint8_t c,uint8_t isdata);lcd_hd44780_pic16.c: 42
      +                          : {;lcd_hd44780_pic16.c: 50: uint8_t hn,ln;;lcd_hd44780_pic16.c: 51: uint8_t temp;;lcd_h
      +                          d44780_pic16.c: 53: hn=c>>4;
  2704  06BA  085A               	movf	LCDByte@c,w
  2705  06BB  00D6               	movwf	??_LCDByte
  2706  06BC  3004               	movlw	4
  2707  06BD                     u1925:
  2708  06BD  1003               	clrc
  2709  06BE  0CD6               	rrf	??_LCDByte,f
  2710  06BF  3EFF               	addlw	-1
  2711  06C0  1D03               	skipz
  2712  06C1  2EBD               	goto	u1925
  2713  06C2  0856               	movf	??_LCDByte,w
  2714  06C3  00D7               	movwf	??_LCDByte+1
  2715  06C4  0857               	movf	??_LCDByte+1,w
  2716  06C5  00D8               	movwf	LCDByte@hn
  2717                           
  2718                           ;lcd_hd44780_pic16.c: 54: ln=(c & 0x0F);
  2719  06C6  085A               	movf	LCDByte@c,w
  2720  06C7  390F               	andlw	15
  2721  06C8  00D6               	movwf	??_LCDByte
  2722  06C9  0856               	movf	??_LCDByte,w
  2723  06CA  00D9               	movwf	LCDByte@ln
  2724                           
  2725                           ;lcd_hd44780_pic16.c: 56: if(isdata==0)
  2726  06CB  0855               	movf	LCDByte@isdata,w
  2727  06CC  1D03               	btfss	3,2
  2728  06CD  2ED0               	goto	l133
  2729                           
  2730                           ;lcd_hd44780_pic16.c: 57:  (RD4=0);
  2731  06CE  1208               	bcf	8,4	;volatile
  2732  06CF  2ED1               	goto	l134
  2733  06D0                     l133:	
  2734                           ;lcd_hd44780_pic16.c: 58: else
  2735                           
  2736                           
  2737                           ;lcd_hd44780_pic16.c: 59:  (RD4=1);
  2738  06D0  1608               	bsf	8,4	;volatile
  2739  06D1                     l134:
  2740                           
  2741                           ;lcd_hd44780_pic16.c: 61: _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  2742  06D1  2ED2               	nop2	;2 cycle nop
  2743                           
  2744                           ;lcd_hd44780_pic16.c: 63: (RD6=1);
  2745  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  2746  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  2747  06D4  1708               	bsf	8,6	;volatile
  2748                           
  2749                           ;lcd_hd44780_pic16.c: 67: temp=(PORTD & (~(0X0F<<0)))|((hn<<0));
  2750  06D5  0808               	movf	8,w	;volatile
  2751  06D6  39F0               	andlw	240
  2752  06D7  0458               	iorwf	LCDByte@hn,w
  2753  06D8  00D6               	movwf	??_LCDByte
  2754  06D9  0856               	movf	??_LCDByte,w
  2755  06DA  00DB               	movwf	LCDByte@temp
  2756                           
  2757                           ;lcd_hd44780_pic16.c: 68: PORTD=temp;
  2758  06DB  085B               	movf	LCDByte@temp,w
  2759  06DC  0088               	movwf	8	;volatile
  2760                           
  2761                           ;lcd_hd44780_pic16.c: 70: _delay((unsigned long)((1)*(16000000/4000000.0)));
  2762  06DD  2EDE               	nop2	;2 cycle nop
  2763  06DE  2EDF               	nop2	;2 cycle nop
  2764                           
  2765                           ;lcd_hd44780_pic16.c: 74: (RD6=0);
  2766  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  2767  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  2768  06E1  1308               	bcf	8,6	;volatile
  2769                           
  2770                           ;lcd_hd44780_pic16.c: 76: _delay((unsigned long)((1)*(16000000/4000000.0)));
  2771  06E2  2EE3               	nop2	;2 cycle nop
  2772  06E3  2EE4               	nop2	;2 cycle nop
  2773                           
  2774                           ;lcd_hd44780_pic16.c: 79: (RD6=1);
  2775  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  2776  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  2777  06E6  1708               	bsf	8,6	;volatile
  2778                           
  2779                           ;lcd_hd44780_pic16.c: 81: temp=(PORTD & (~(0X0F<<0)))|((ln<<0));
  2780  06E7  0808               	movf	8,w	;volatile
  2781  06E8  39F0               	andlw	240
  2782  06E9  0459               	iorwf	LCDByte@ln,w
  2783  06EA  00D6               	movwf	??_LCDByte
  2784  06EB  0856               	movf	??_LCDByte,w
  2785  06EC  00DB               	movwf	LCDByte@temp
  2786                           
  2787                           ;lcd_hd44780_pic16.c: 83: PORTD=temp;
  2788  06ED  085B               	movf	LCDByte@temp,w
  2789  06EE  0088               	movwf	8	;volatile
  2790                           
  2791                           ;lcd_hd44780_pic16.c: 85: _delay((unsigned long)((1)*(16000000/4000000.0)));
  2792  06EF  2EF0               	nop2	;2 cycle nop
  2793  06F0  2EF1               	nop2	;2 cycle nop
  2794                           
  2795                           ;lcd_hd44780_pic16.c: 89: (RD6=0);
  2796  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  2797  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  2798  06F3  1308               	bcf	8,6	;volatile
  2799                           
  2800                           ;lcd_hd44780_pic16.c: 91: _delay((unsigned long)((1)*(16000000/4000000.0)));
  2801  06F4  2EF5               	nop2	;2 cycle nop
  2802  06F5  2EF6               	nop2	;2 cycle nop
  2803                           
  2804                           ;lcd_hd44780_pic16.c: 93: LCDBusyLoop();
  2805  06F6  120A  118A  2612   	fcall	_LCDBusyLoop
  2806  06F9  0008               	return
  2807  06FA                     __end_of_LCDByte:
  2808                           
  2809                           	psect	text10
  2810  0612                     __ptext10:	
  2811 ;; *************** function _LCDBusyLoop *****************
  2812 ;; Defined at:
  2813 ;;		line 96 in file "lcd_hd44780_pic16.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;		None
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;  status          1   20[BANK0 ] unsigned char 
  2818 ;;  temp            1   19[BANK0 ] unsigned char 
  2819 ;;  busy            1   18[BANK0 ] unsigned char 
  2820 ;; Return value:  Size  Location     Type
  2821 ;;                  1    wreg      void 
  2822 ;; Registers used:
  2823 ;;		wreg, status,2, status,0
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2829 ;;      Params:         0       0       0       0       0
  2830 ;;      Locals:         0       3       0       0       0
  2831 ;;      Temps:          0       2       0       0       0
  2832 ;;      Totals:         0       5       0       0       0
  2833 ;;Total ram usage:        5 bytes
  2834 ;; Hardware stack levels used:    1
  2835 ;; Hardware stack levels required when called:    3
  2836 ;; This function calls:
  2837 ;;		Nothing
  2838 ;; This function is called by:
  2839 ;;		_LCDByte
  2840 ;;		_LCDInit
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844                           
  2845                           ;psect for function _LCDBusyLoop
  2846  0612                     _LCDBusyLoop:
  2847                           
  2848                           ;lcd_hd44780_pic16.c: 103:  TRISD|=(0x0f<<0);
  2849                           
  2850                           ;incstack = 0
  2851                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  2852  0612  300F               	movlw	15
  2853  0613  1283               	bcf	3,5	;RP0=0, select bank0
  2854  0614  1303               	bcf	3,6	;RP1=0, select bank0
  2855  0615  00D0               	movwf	??_LCDBusyLoop
  2856  0616  0850               	movf	??_LCDBusyLoop,w
  2857  0617  1683               	bsf	3,5	;RP0=1, select bank1
  2858  0618  1303               	bcf	3,6	;RP1=0, select bank1
  2859  0619  0488               	iorwf	8,f	;volatile
  2860                           
  2861                           ;lcd_hd44780_pic16.c: 106:  (RD5=1);
  2862  061A  1283               	bcf	3,5	;RP0=0, select bank0
  2863  061B  1303               	bcf	3,6	;RP1=0, select bank0
  2864  061C  1688               	bsf	8,5	;volatile
  2865                           
  2866                           ;lcd_hd44780_pic16.c: 107:  (RD4=0);
  2867  061D  1208               	bcf	8,4	;volatile
  2868                           
  2869                           ;lcd_hd44780_pic16.c: 109:  _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  2870  061E  2E1F               	nop2	;2 cycle nop
  2871  061F                     l2163:
  2872                           
  2873                           ;lcd_hd44780_pic16.c: 111:  {;lcd_hd44780_pic16.c: 112:   (RD6=1);
  2874  061F  1283               	bcf	3,5	;RP0=0, select bank0
  2875  0620  1303               	bcf	3,6	;RP1=0, select bank0
  2876  0621  1708               	bsf	8,6	;volatile
  2877                           
  2878                           ;lcd_hd44780_pic16.c: 114:   _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  2879  0622  2E23               	nop2	;2 cycle nop
  2880                           
  2881                           ;lcd_hd44780_pic16.c: 116:   status=(PORTD>>0);
  2882  0623  1283               	bcf	3,5	;RP0=0, select bank0
  2883  0624  1303               	bcf	3,6	;RP1=0, select bank0
  2884  0625  0808               	movf	8,w	;volatile
  2885  0626  00D0               	movwf	??_LCDBusyLoop
  2886  0627  0850               	movf	??_LCDBusyLoop,w
  2887  0628  00D4               	movwf	LCDBusyLoop@status
  2888                           
  2889                           ;lcd_hd44780_pic16.c: 117:   status=status<<4;
  2890  0629  0854               	movf	LCDBusyLoop@status,w
  2891  062A  00D0               	movwf	??_LCDBusyLoop
  2892  062B  3003               	movlw	3
  2893  062C                     u1905:
  2894  062C  1003               	clrc
  2895  062D  0DD0               	rlf	??_LCDBusyLoop,f
  2896  062E  3EFF               	addlw	-1
  2897  062F  1D03               	skipz
  2898  0630  2E2C               	goto	u1905
  2899  0631  1003               	clrc
  2900  0632  0D50               	rlf	??_LCDBusyLoop,w
  2901  0633  00D1               	movwf	??_LCDBusyLoop+1
  2902  0634  0851               	movf	??_LCDBusyLoop+1,w
  2903  0635  00D4               	movwf	LCDBusyLoop@status
  2904                           
  2905                           ;lcd_hd44780_pic16.c: 119:   _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  2906  0636  2E37               	nop2	;2 cycle nop
  2907                           
  2908                           ;lcd_hd44780_pic16.c: 122:   (RD6=0);
  2909  0637  1283               	bcf	3,5	;RP0=0, select bank0
  2910  0638  1303               	bcf	3,6	;RP1=0, select bank0
  2911  0639  1308               	bcf	8,6	;volatile
  2912                           
  2913                           ;lcd_hd44780_pic16.c: 123:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  2914  063A  2E3B               	nop2	;2 cycle nop
  2915  063B  2E3C               	nop2	;2 cycle nop
  2916                           
  2917                           ;lcd_hd44780_pic16.c: 125:   (RD6=1);
  2918  063C  1283               	bcf	3,5	;RP0=0, select bank0
  2919  063D  1303               	bcf	3,6	;RP1=0, select bank0
  2920  063E  1708               	bsf	8,6	;volatile
  2921                           
  2922                           ;lcd_hd44780_pic16.c: 126:   _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  2923  063F  2E40               	nop2	;2 cycle nop
  2924                           
  2925                           ;lcd_hd44780_pic16.c: 128:   temp=(PORTD>>0);
  2926  0640  1283               	bcf	3,5	;RP0=0, select bank0
  2927  0641  1303               	bcf	3,6	;RP1=0, select bank0
  2928  0642  0808               	movf	8,w	;volatile
  2929  0643  00D0               	movwf	??_LCDBusyLoop
  2930  0644  0850               	movf	??_LCDBusyLoop,w
  2931  0645  00D3               	movwf	LCDBusyLoop@temp
  2932                           
  2933                           ;lcd_hd44780_pic16.c: 129:   temp&=0x0F;
  2934  0646  300F               	movlw	15
  2935  0647  00D0               	movwf	??_LCDBusyLoop
  2936  0648  0850               	movf	??_LCDBusyLoop,w
  2937  0649  05D3               	andwf	LCDBusyLoop@temp,f
  2938                           
  2939                           ;lcd_hd44780_pic16.c: 131:   status=status|temp;
  2940  064A  0854               	movf	LCDBusyLoop@status,w
  2941  064B  0453               	iorwf	LCDBusyLoop@temp,w
  2942  064C  00D0               	movwf	??_LCDBusyLoop
  2943  064D  0850               	movf	??_LCDBusyLoop,w
  2944  064E  00D4               	movwf	LCDBusyLoop@status
  2945                           
  2946                           ;lcd_hd44780_pic16.c: 133:   busy=status & 0b10000000;
  2947  064F  0854               	movf	LCDBusyLoop@status,w
  2948  0650  3980               	andlw	128
  2949  0651  00D0               	movwf	??_LCDBusyLoop
  2950  0652  0850               	movf	??_LCDBusyLoop,w
  2951  0653  00D2               	movwf	LCDBusyLoop@busy
  2952                           
  2953                           ;lcd_hd44780_pic16.c: 135:   _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  2954  0654  2E55               	nop2	;2 cycle nop
  2955                           
  2956                           ;lcd_hd44780_pic16.c: 137:                 (RD6=0);
  2957  0655  1283               	bcf	3,5	;RP0=0, select bank0
  2958  0656  1303               	bcf	3,6	;RP1=0, select bank0
  2959  0657  1308               	bcf	8,6	;volatile
  2960                           
  2961                           ;lcd_hd44780_pic16.c: 138:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  2962  0658  2E59               	nop2	;2 cycle nop
  2963  0659  2E5A               	nop2	;2 cycle nop
  2964                           
  2965                           ;lcd_hd44780_pic16.c: 139:  }while(busy);
  2966  065A  1283               	bcf	3,5	;RP0=0, select bank0
  2967  065B  1303               	bcf	3,6	;RP1=0, select bank0
  2968  065C  0852               	movf	LCDBusyLoop@busy,w
  2969  065D  1D03               	btfss	3,2
  2970  065E  2E1F               	goto	l2163
  2971                           
  2972                           ;lcd_hd44780_pic16.c: 141:  (RD5=0);
  2973  065F  1288               	bcf	8,5	;volatile
  2974                           
  2975                           ;lcd_hd44780_pic16.c: 144:  TRISD&=(~(0x0F<<0));
  2976  0660  30F0               	movlw	240
  2977  0661  00D0               	movwf	??_LCDBusyLoop
  2978  0662  0850               	movf	??_LCDBusyLoop,w
  2979  0663  1683               	bsf	3,5	;RP0=1, select bank1
  2980  0664  1303               	bcf	3,6	;RP1=0, select bank1
  2981  0665  0588               	andwf	8,f	;volatile
  2982  0666  0008               	return
  2983  0667                     __end_of_LCDBusyLoop:
  2984                           
  2985                           	psect	text11
  2986  0F6A                     __ptext11:	
  2987 ;; *************** function _Init_uart *****************
  2988 ;; Defined at:
  2989 ;;		line 8 in file "uart.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;		None
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;		None
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  1    wreg      void 
  2996 ;; Registers used:
  2997 ;;		wreg
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3003 ;;      Params:         0       0       0       0       0
  3004 ;;      Locals:         0       0       0       0       0
  3005 ;;      Temps:          0       0       0       0       0
  3006 ;;      Totals:         0       0       0       0       0
  3007 ;;Total ram usage:        0 bytes
  3008 ;; Hardware stack levels used:    1
  3009 ;; Hardware stack levels required when called:    3
  3010 ;; This function calls:
  3011 ;;		Nothing
  3012 ;; This function is called by:
  3013 ;;		_main
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017                           
  3018                           ;psect for function _Init_uart
  3019  0F6A                     _Init_uart:
  3020                           
  3021                           ;uart.c: 10:     TXSTA=0x20;
  3022                           
  3023                           ;incstack = 0
  3024                           ; Regs used in _Init_uart: [wreg]
  3025  0F6A  3020               	movlw	32
  3026  0F6B  1683               	bsf	3,5	;RP0=1, select bank1
  3027  0F6C  1303               	bcf	3,6	;RP1=0, select bank1
  3028  0F6D  0098               	movwf	24	;volatile
  3029                           
  3030                           ;uart.c: 11:     RCSTA=0x90;
  3031  0F6E  3090               	movlw	144
  3032  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  3033  0F70  1303               	bcf	3,6	;RP1=0, select bank0
  3034  0F71  0098               	movwf	24	;volatile
  3035                           
  3036                           ;uart.c: 12:     SPBRG=25;
  3037  0F72  3019               	movlw	25
  3038  0F73  1683               	bsf	3,5	;RP0=1, select bank1
  3039  0F74  1303               	bcf	3,6	;RP1=0, select bank1
  3040  0F75  0099               	movwf	25	;volatile
  3041                           
  3042                           ;uart.c: 13:     RCIE=1;
  3043  0F76  168C               	bsf	12,5	;volatile
  3044  0F77  0008               	return
  3045  0F78                     __end_of_Init_uart:
  3046                           
  3047                           	psect	text12
  3048  0F61                     __ptext12:	
  3049 ;; *************** function _InitADC *****************
  3050 ;; Defined at:
  3051 ;;		line 4 in file "adc.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;		None
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;		None
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  1    wreg      void 
  3058 ;; Registers used:
  3059 ;;		wreg
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3065 ;;      Params:         0       0       0       0       0
  3066 ;;      Locals:         0       0       0       0       0
  3067 ;;      Temps:          0       0       0       0       0
  3068 ;;      Totals:         0       0       0       0       0
  3069 ;;Total ram usage:        0 bytes
  3070 ;; Hardware stack levels used:    1
  3071 ;; Hardware stack levels required when called:    3
  3072 ;; This function calls:
  3073 ;;		Nothing
  3074 ;; This function is called by:
  3075 ;;		_main
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           
  3080                           ;psect for function _InitADC
  3081  0F61                     _InitADC:
  3082                           
  3083                           ;adc.c: 6:     ADCON1 = 0b11000100;
  3084                           
  3085                           ;incstack = 0
  3086                           ; Regs used in _InitADC: [wreg]
  3087  0F61  30C4               	movlw	196
  3088  0F62  1683               	bsf	3,5	;RP0=1, select bank1
  3089  0F63  1303               	bcf	3,6	;RP1=0, select bank1
  3090  0F64  009F               	movwf	31	;volatile
  3091                           
  3092                           ;adc.c: 7:     ADCON0 =0x80;
  3093  0F65  3080               	movlw	128
  3094  0F66  1283               	bcf	3,5	;RP0=0, select bank0
  3095  0F67  1303               	bcf	3,6	;RP1=0, select bank0
  3096  0F68  009F               	movwf	31	;volatile
  3097  0F69  0008               	return
  3098  0F6A                     __end_of_InitADC:
  3099                           
  3100                           	psect	text13
  3101  026B                     __ptext13:	
  3102 ;; *************** function _Count_Up *****************
  3103 ;; Defined at:
  3104 ;;		line 59 in file "main.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;		None
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;  ch              1   15[BANK0 ] unsigned char 
  3109 ;; Return value:  Size  Location     Type
  3110 ;;                  1    wreg      void 
  3111 ;; Registers used:
  3112 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3113 ;; Tracked objects:
  3114 ;;		On entry : 0/0
  3115 ;;		On exit  : 0/0
  3116 ;;		Unchanged: 0/0
  3117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3118 ;;      Params:         0       0       0       0       0
  3119 ;;      Locals:         0       1       0       0       0
  3120 ;;      Temps:          0       5       0       0       0
  3121 ;;      Totals:         0       6       0       0       0
  3122 ;;Total ram usage:        6 bytes
  3123 ;; Hardware stack levels used:    1
  3124 ;; Hardware stack levels required when called:    2
  3125 ;; This function calls:
  3126 ;;		_ReadAdc
  3127 ;;		___ftmul
  3128 ;;		___lwtoft
  3129 ;;		_strncmp
  3130 ;; This function is called by:
  3131 ;;		Interrupt level 1
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135                           
  3136                           ;psect for function _Count_Up
  3137  026B                     _Count_Up:
  3138                           
  3139                           ;main.c: 61:     char ch;;main.c: 62:   if (TMR2IE && TMR2IF)
  3140  026B  1683               	bsf	3,5	;RP0=1, select bank1
  3141  026C  1303               	bcf	3,6	;RP1=0, select bank1
  3142  026D  1C8C               	btfss	12,1	;volatile
  3143  026E  2AEE               	goto	i1l1879
  3144  026F  1283               	bcf	3,5	;RP0=0, select bank0
  3145  0270  1303               	bcf	3,6	;RP1=0, select bank0
  3146  0271  1C8C               	btfss	12,1	;volatile
  3147  0272  2AEE               	goto	i1l1879
  3148                           
  3149                           ;main.c: 63:    {;main.c: 64:   TMR2IF=0;
  3150  0273  108C               	bcf	12,1	;volatile
  3151                           
  3152                           ;main.c: 65:     count++;
  3153  0274  3001               	movlw	1
  3154  0275  07B2               	addwf	_count,f
  3155  0276  1803               	skipnc
  3156  0277  0AB3               	incf	_count+1,f
  3157  0278  3000               	movlw	0
  3158  0279  07B3               	addwf	_count+1,f
  3159                           
  3160                           ;main.c: 66:        if(count==20)
  3161  027A  3014               	movlw	20
  3162  027B  0632               	xorwf	_count,w
  3163  027C  0433               	iorwf	_count+1,w
  3164  027D  1D03               	btfss	3,2
  3165  027E  2AEE               	goto	i1l1879
  3166                           
  3167                           ;main.c: 67:        {;main.c: 68:          count=0;
  3168  027F  01B2               	clrf	_count
  3169  0280  01B3               	clrf	_count+1
  3170                           
  3171                           ;main.c: 69:          count1++;
  3172  0281  3001               	movlw	1
  3173  0282  07B0               	addwf	_count1,f
  3174  0283  1803               	skipnc
  3175  0284  0AB1               	incf	_count1+1,f
  3176  0285  3000               	movlw	0
  3177  0286  07B1               	addwf	_count1+1,f
  3178                           
  3179                           ;main.c: 70:         if(do_dienap)
  3180  0287  0839               	movf	_do_dienap,w
  3181  0288  1903               	btfsc	3,2
  3182  0289  2ABD               	goto	i1l1873
  3183                           
  3184                           ;main.c: 71:         {;main.c: 72:           Dienap=(float)(ReadAdc(0));
  3185  028A  3000               	movlw	0
  3186  028B  120A  118A  27B5  120A  118A  	fcall	_ReadAdc
  3187  0290  0871               	movf	?_ReadAdc+1,w
  3188  0291  00F9               	movwf	___lwtoft@c+1
  3189  0292  0870               	movf	?_ReadAdc,w
  3190  0293  00F8               	movwf	___lwtoft@c
  3191  0294  120A  118A  27EC  120A  118A  	fcall	___lwtoft
  3192  0299  0878               	movf	?___lwtoft,w
  3193  029A  1283               	bcf	3,5	;RP0=0, select bank0
  3194  029B  1303               	bcf	3,6	;RP1=0, select bank0
  3195  029C  00A8               	movwf	_Dienap
  3196  029D  0879               	movf	?___lwtoft+1,w
  3197  029E  00A9               	movwf	_Dienap+1
  3198  029F  087A               	movf	?___lwtoft+2,w
  3199  02A0  00AA               	movwf	_Dienap+2
  3200                           
  3201                           ;main.c: 73:           Dienap=Dienap*0.489;
  3202  02A1  305E               	movlw	94
  3203  02A2  00F8               	movwf	___ftmul@f1
  3204  02A3  30FA               	movlw	250
  3205  02A4  00F9               	movwf	___ftmul@f1+1
  3206  02A5  303E               	movlw	62
  3207  02A6  00FA               	movwf	___ftmul@f1+2
  3208  02A7  0828               	movf	_Dienap,w
  3209  02A8  00FB               	movwf	___ftmul@f2
  3210  02A9  0829               	movf	_Dienap+1,w
  3211  02AA  00FC               	movwf	___ftmul@f2+1
  3212  02AB  082A               	movf	_Dienap+2,w
  3213  02AC  00FD               	movwf	___ftmul@f2+2
  3214  02AD  120A  118A  2354  120A  118A  	fcall	___ftmul
  3215  02B2  0878               	movf	?___ftmul,w
  3216  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  3217  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  3218  02B5  00A8               	movwf	_Dienap
  3219  02B6  0879               	movf	?___ftmul+1,w
  3220  02B7  00A9               	movwf	_Dienap+1
  3221  02B8  087A               	movf	?___ftmul+2,w
  3222  02B9  00AA               	movwf	_Dienap+2
  3223                           
  3224                           ;main.c: 74:           adc_ok=1;
  3225  02BA  01B8               	clrf	_adc_ok
  3226  02BB  0AB8               	incf	_adc_ok,f
  3227                           
  3228                           ;main.c: 75:         }
  3229  02BC  2AED               	goto	i1l1877
  3230  02BD                     i1l1873:
  3231                           
  3232                           ;main.c: 77:          {;main.c: 78:          Dong = (float)(ReadAdc(1));
  3233  02BD  3001               	movlw	1
  3234  02BE  120A  118A  27B5  120A  118A  	fcall	_ReadAdc
  3235  02C3  0871               	movf	?_ReadAdc+1,w
  3236  02C4  00F9               	movwf	___lwtoft@c+1
  3237  02C5  0870               	movf	?_ReadAdc,w
  3238  02C6  00F8               	movwf	___lwtoft@c
  3239  02C7  120A  118A  27EC  120A  118A  	fcall	___lwtoft
  3240  02CC  0878               	movf	?___lwtoft,w
  3241  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  3242  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  3243  02CF  00AB               	movwf	_Dong
  3244  02D0  0879               	movf	?___lwtoft+1,w
  3245  02D1  00AC               	movwf	_Dong+1
  3246  02D2  087A               	movf	?___lwtoft+2,w
  3247  02D3  00AD               	movwf	_Dong+2
  3248                           
  3249                           ;main.c: 79:          Dong=Dong*0.0978;
  3250  02D4  304B               	movlw	75
  3251  02D5  00F8               	movwf	___ftmul@f1
  3252  02D6  30C8               	movlw	200
  3253  02D7  00F9               	movwf	___ftmul@f1+1
  3254  02D8  303D               	movlw	61
  3255  02D9  00FA               	movwf	___ftmul@f1+2
  3256  02DA  082B               	movf	_Dong,w
  3257  02DB  00FB               	movwf	___ftmul@f2
  3258  02DC  082C               	movf	_Dong+1,w
  3259  02DD  00FC               	movwf	___ftmul@f2+1
  3260  02DE  082D               	movf	_Dong+2,w
  3261  02DF  00FD               	movwf	___ftmul@f2+2
  3262  02E0  120A  118A  2354  120A  118A  	fcall	___ftmul
  3263  02E5  0878               	movf	?___ftmul,w
  3264  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  3265  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  3266  02E8  00AB               	movwf	_Dong
  3267  02E9  0879               	movf	?___ftmul+1,w
  3268  02EA  00AC               	movwf	_Dong+1
  3269  02EB  087A               	movf	?___ftmul+2,w
  3270  02EC  00AD               	movwf	_Dong+2
  3271  02ED                     i1l1877:
  3272                           
  3273                           ;main.c: 81:          do_dienap=~do_dienap;
  3274  02ED  09B9               	comf	_do_dienap,f
  3275  02EE                     i1l1879:
  3276                           
  3277                           ;main.c: 84:   if (RCIE && RCIF)
  3278  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  3279  02EF  1303               	bcf	3,6	;RP1=0, select bank1
  3280  02F0  1E8C               	btfss	12,5	;volatile
  3281  02F1  2B47               	goto	i1l101
  3282  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  3283  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  3284  02F4  1E8C               	btfss	12,5	;volatile
  3285  02F5  2B47               	goto	i1l101
  3286                           
  3287                           ;main.c: 85:    {;main.c: 86:        ch=RCREG;
  3288  02F6  081A               	movf	26,w	;volatile
  3289  02F7  00CA               	movwf	??_Count_Up
  3290  02F8  084A               	movf	??_Count_Up,w
  3291  02F9  00CF               	movwf	Count_Up@ch
  3292                           
  3293                           ;main.c: 87:        if(check_sang)
  3294  02FA  0836               	movf	_check_sang,w
  3295  02FB  1903               	btfsc	3,2
  3296  02FC  2B09               	goto	i1l1891
  3297                           
  3298                           ;main.c: 88:         in_buffer[in_count++]=ch;
  3299  02FD  084F               	movf	Count_Up@ch,w
  3300  02FE  00CA               	movwf	??_Count_Up
  3301  02FF  0837               	movf	_in_count,w
  3302  0300  3E3A               	addlw	(low (_in_buffer| 0))& (0+255)
  3303  0301  0084               	movwf	4
  3304  0302  084A               	movf	??_Count_Up,w
  3305  0303  1383               	bcf	3,7	;select IRP bank0
  3306  0304  0080               	movwf	0
  3307  0305  3001               	movlw	1
  3308  0306  00CA               	movwf	??_Count_Up
  3309  0307  084A               	movf	??_Count_Up,w
  3310  0308  07B7               	addwf	_in_count,f
  3311  0309                     i1l1891:
  3312                           
  3313                           ;main.c: 90:        if(in_count==6)
  3314  0309  3006               	movlw	6
  3315  030A  0637               	xorwf	_in_count,w
  3316  030B  1D03               	btfss	3,2
  3317  030C  2B0F               	goto	i1l1895
  3318                           
  3319                           ;main.c: 91:    {;main.c: 92:       in_count=0;
  3320  030D  01B7               	clrf	_in_count
  3321                           
  3322                           ;main.c: 93:    check_sang=0;
  3323  030E  01B6               	clrf	_check_sang
  3324  030F                     i1l1895:
  3325                           
  3326                           ;main.c: 96:        if(ch=='{')
  3327  030F  307B               	movlw	123
  3328  0310  064F               	xorwf	Count_Up@ch,w
  3329  0311  1D03               	btfss	3,2
  3330  0312  2B16               	goto	i1l1901
  3331                           
  3332                           ;main.c: 97:        {;main.c: 98:         in_count=0;
  3333  0313  01B7               	clrf	_in_count
  3334                           
  3335                           ;main.c: 99:         check_sang=1;
  3336  0314  01B6               	clrf	_check_sang
  3337  0315  0AB6               	incf	_check_sang,f
  3338  0316                     i1l1901:
  3339                           
  3340                           ;main.c: 101:       if(ch=='}')
  3341  0316  307D               	movlw	125
  3342  0317  064F               	xorwf	Count_Up@ch,w
  3343  0318  1D03               	btfss	3,2
  3344  0319  2B47               	goto	i1l101
  3345                           
  3346                           ;main.c: 102:        {;main.c: 103:          check_sang=0;
  3347  031A  01B6               	clrf	_check_sang
  3348                           
  3349                           ;main.c: 104:          if(strncmp(in_buffer,"Sang",4)==0)
  3350  031B  3024               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3351  031C  00CA               	movwf	??_Count_Up
  3352  031D  084A               	movf	??_Count_Up,w
  3353  031E  00F0               	movwf	strncmp@s2
  3354  031F  3004               	movlw	4
  3355  0320  00F1               	movwf	strncmp@len
  3356  0321  3000               	movlw	0
  3357  0322  00F2               	movwf	strncmp@len+1
  3358  0323  303A               	movlw	(low (_in_buffer| 0))& (0+255)
  3359  0324  120A  118A  2778  120A  118A  	fcall	_strncmp
  3360  0329  0870               	movf	?_strncmp,w
  3361  032A  0471               	iorwf	?_strncmp+1,w
  3362  032B  1D03               	btfss	3,2
  3363  032C  2B30               	goto	i1l1909
  3364                           
  3365                           ;main.c: 105:            PORTEbits.RE2=0;
  3366  032D  1283               	bcf	3,5	;RP0=0, select bank0
  3367  032E  1303               	bcf	3,6	;RP1=0, select bank0
  3368  032F  1109               	bcf	9,2	;volatile
  3369  0330                     i1l1909:
  3370                           
  3371                           ;main.c: 106:          if(strncmp(in_buffer,"Tat",3)==0)
  3372  0330  3029               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3373  0331  1283               	bcf	3,5	;RP0=0, select bank0
  3374  0332  1303               	bcf	3,6	;RP1=0, select bank0
  3375  0333  00CA               	movwf	??_Count_Up
  3376  0334  084A               	movf	??_Count_Up,w
  3377  0335  00F0               	movwf	strncmp@s2
  3378  0336  3003               	movlw	3
  3379  0337  00F1               	movwf	strncmp@len
  3380  0338  3000               	movlw	0
  3381  0339  00F2               	movwf	strncmp@len+1
  3382  033A  303A               	movlw	(low (_in_buffer| 0))& (0+255)
  3383  033B  120A  118A  2778  120A  118A  	fcall	_strncmp
  3384  0340  0870               	movf	?_strncmp,w
  3385  0341  0471               	iorwf	?_strncmp+1,w
  3386  0342  1D03               	btfss	3,2
  3387  0343  2B47               	goto	i1l101
  3388                           
  3389                           ;main.c: 107:            PORTEbits.RE2=1;
  3390  0344  1283               	bcf	3,5	;RP0=0, select bank0
  3391  0345  1303               	bcf	3,6	;RP1=0, select bank0
  3392  0346  1509               	bsf	9,2	;volatile
  3393  0347                     i1l101:
  3394  0347  1283               	bcf	3,5	;RP0=0, select bank0
  3395  0348  1303               	bcf	3,6	;RP1=0, select bank0
  3396  0349  084E               	movf	??_Count_Up+4,w
  3397  034A  00FF               	movwf	127
  3398  034B  084D               	movf	??_Count_Up+3,w
  3399  034C  008A               	movwf	10
  3400  034D  084C               	movf	??_Count_Up+2,w
  3401  034E  0084               	movwf	4
  3402  034F  0E4B               	swapf	??_Count_Up+1,w
  3403  0350  0083               	movwf	3
  3404  0351  0EFE               	swapf	126,f
  3405  0352  0E7E               	swapf	126,w
  3406  0353  0009               	retfie
  3407  0354                     __end_of_Count_Up:
  3408                           
  3409                           	psect	intentry
  3410  0004                     __pintentry:	
  3411                           ;incstack = 0
  3412                           ; Regs used in _Count_Up: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3413                           
  3414  0004                     interrupt_function:
  3415  007E                     saved_w	set	btemp
  3416  0004  00FE               	movwf	btemp
  3417  0005  0E03               	swapf	3,w
  3418  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3419  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3420  0008  00CB               	movwf	??_Count_Up+1
  3421  0009  0804               	movf	4,w
  3422  000A  00CC               	movwf	??_Count_Up+2
  3423  000B  080A               	movf	10,w
  3424  000C  00CD               	movwf	??_Count_Up+3
  3425  000D  087F               	movf	btemp+1,w
  3426  000E  00CE               	movwf	??_Count_Up+4
  3427  000F  120A  118A  2A6B   	ljmp	_Count_Up
  3428                           
  3429                           	psect	text14
  3430  0778                     __ptext14:	
  3431 ;; *************** function _strncmp *****************
  3432 ;; Defined at:
  3433 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strncmp.c"
  3434 ;; Parameters:    Size  Location     Type
  3435 ;;  s1              1    wreg     PTR const unsigned char 
  3436 ;;		 -> in_buffer(6), 
  3437 ;;  s2              1    0[COMMON] PTR const unsigned char 
  3438 ;;		 -> STR_2(4), STR_1(5), 
  3439 ;;  len             2    1[COMMON] unsigned int 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  s1              1    5[COMMON] PTR const unsigned char 
  3442 ;;		 -> in_buffer(6), 
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  2    0[COMMON] int 
  3445 ;; Registers used:
  3446 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3452 ;;      Params:         3       0       0       0       0
  3453 ;;      Locals:         1       0       0       0       0
  3454 ;;      Temps:          2       0       0       0       0
  3455 ;;      Totals:         6       0       0       0       0
  3456 ;;Total ram usage:        6 bytes
  3457 ;; Hardware stack levels used:    2
  3458 ;; This function calls:
  3459 ;;		Nothing
  3460 ;; This function is called by:
  3461 ;;		_Count_Up
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           
  3466                           ;psect for function _strncmp
  3467  0778                     _strncmp:
  3468                           
  3469                           ;incstack = 0
  3470                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  3471                           ;strncmp@s1 stored from wreg
  3472  0778  00F5               	movwf	strncmp@s1
  3473  0779                     i1l751:
  3474  0779  3001               	movlw	1
  3475  077A  02F1               	subwf	strncmp@len,f
  3476  077B  3000               	movlw	0
  3477  077C  1C03               	skipc
  3478  077D  03F2               	decf	strncmp@len+1,f
  3479  077E  02F2               	subwf	strncmp@len+1,f
  3480  077F  0A71               	incf	strncmp@len,w
  3481  0780  1903               	btfsc	3,2
  3482  0781  0A72               	incf	strncmp@len+1,w
  3483  0782  1903               	btfsc	3,2
  3484  0783  2FB2               	goto	i1l1631
  3485  0784  0875               	movf	strncmp@s1,w
  3486  0785  0084               	movwf	4
  3487  0786  1383               	bcf	3,7	;select IRP bank0
  3488  0787  0800               	movf	0,w
  3489  0788  1903               	btfsc	3,2
  3490  0789  2F98               	goto	i1l1625
  3491  078A  0870               	movf	strncmp@s2,w
  3492  078B  0084               	movwf	4
  3493  078C  120A  158A  2000  120A  118A  	fcall	stringdir
  3494  0791  00F3               	movwf	??_strncmp
  3495  0792  0875               	movf	strncmp@s1,w
  3496  0793  0084               	movwf	4
  3497  0794  0800               	movf	0,w
  3498  0795  0673               	xorwf	??_strncmp,w
  3499  0796  1903               	skipnz
  3500  0797  2FA9               	goto	i1l1629
  3501  0798                     i1l1625:
  3502  0798  0870               	movf	strncmp@s2,w
  3503  0799  0084               	movwf	4
  3504  079A  120A  158A  2000   	fcall	stringdir
  3505  079D  00F3               	movwf	??_strncmp
  3506  079E  0875               	movf	strncmp@s1,w
  3507  079F  0084               	movwf	4
  3508  07A0  0800               	movf	0,w
  3509  07A1  00F4               	movwf	??_strncmp+1
  3510  07A2  0873               	movf	??_strncmp,w
  3511  07A3  0274               	subwf	??_strncmp+1,w
  3512  07A4  00F0               	movwf	?_strncmp
  3513  07A5  01F1               	clrf	?_strncmp+1
  3514  07A6  1C03               	skipc
  3515  07A7  03F1               	decf	?_strncmp+1,f
  3516  07A8  0008               	return
  3517  07A9                     i1l1629:
  3518  07A9  3001               	movlw	1
  3519  07AA  00F3               	movwf	??_strncmp
  3520  07AB  0873               	movf	??_strncmp,w
  3521  07AC  07F5               	addwf	strncmp@s1,f
  3522  07AD  3001               	movlw	1
  3523  07AE  00F3               	movwf	??_strncmp
  3524  07AF  0873               	movf	??_strncmp,w
  3525  07B0  07F0               	addwf	strncmp@s2,f
  3526  07B1  2F79               	goto	i1l751
  3527  07B2                     i1l1631:
  3528  07B2  01F0               	clrf	?_strncmp
  3529  07B3  01F1               	clrf	?_strncmp+1
  3530  07B4  0008               	return
  3531  07B5                     __end_of_strncmp:
  3532                           
  3533                           	psect	text15
  3534  07EC                     __ptext15:	
  3535 ;; *************** function ___lwtoft *****************
  3536 ;; Defined at:
  3537 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwtoft.c"
  3538 ;; Parameters:    Size  Location     Type
  3539 ;;  c               2    8[COMMON] unsigned int 
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;		None
  3542 ;; Return value:  Size  Location     Type
  3543 ;;                  3    8[COMMON] float 
  3544 ;; Registers used:
  3545 ;;		wreg, status,2, status,0, pclath, cstack
  3546 ;; Tracked objects:
  3547 ;;		On entry : 0/0
  3548 ;;		On exit  : 0/0
  3549 ;;		Unchanged: 0/0
  3550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3551 ;;      Params:         3       0       0       0       0
  3552 ;;      Locals:         0       0       0       0       0
  3553 ;;      Temps:          1       0       0       0       0
  3554 ;;      Totals:         4       0       0       0       0
  3555 ;;Total ram usage:        4 bytes
  3556 ;; Hardware stack levels used:    1
  3557 ;; Hardware stack levels required when called:    1
  3558 ;; This function calls:
  3559 ;;		___ftpack
  3560 ;; This function is called by:
  3561 ;;		_Count_Up
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           
  3566                           ;psect for function ___lwtoft
  3567  07EC                     ___lwtoft:
  3568                           
  3569                           ;incstack = 0
  3570                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  3571  07EC  0878               	movf	___lwtoft@c,w
  3572  07ED  00F0               	movwf	___ftpack@arg
  3573  07EE  0879               	movf	___lwtoft@c+1,w
  3574  07EF  00F1               	movwf	___ftpack@arg+1
  3575  07F0  01F2               	clrf	___ftpack@arg+2
  3576  07F1  308E               	movlw	142
  3577  07F2  00FB               	movwf	??___lwtoft
  3578  07F3  087B               	movf	??___lwtoft,w
  3579  07F4  00F3               	movwf	___ftpack@exp
  3580  07F5  01F4               	clrf	___ftpack@sign
  3581  07F6  120A  118A  253D   	fcall	___ftpack
  3582  07F9  0870               	movf	?___ftpack,w
  3583  07FA  00F8               	movwf	?___lwtoft
  3584  07FB  0871               	movf	?___ftpack+1,w
  3585  07FC  00F9               	movwf	?___lwtoft+1
  3586  07FD  0872               	movf	?___ftpack+2,w
  3587  07FE  00FA               	movwf	?___lwtoft+2
  3588  07FF  0008               	return
  3589  0800                     __end_of___lwtoft:
  3590                           
  3591                           	psect	text16
  3592  0354                     __ptext16:	
  3593 ;; *************** function ___ftmul *****************
  3594 ;; Defined at:
  3595 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ftmul.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  f1              3    8[COMMON] float 
  3598 ;;  f2              3   11[COMMON] float 
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  3601 ;;  sign            1    9[BANK0 ] unsigned char 
  3602 ;;  cntr            1    8[BANK0 ] unsigned char 
  3603 ;;  exp             1    4[BANK0 ] unsigned char 
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  3    8[COMMON] float 
  3606 ;; Registers used:
  3607 ;;		wreg, status,2, status,0, pclath, cstack
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3613 ;;      Params:         6       0       0       0       0
  3614 ;;      Locals:         0       6       0       0       0
  3615 ;;      Temps:          0       4       0       0       0
  3616 ;;      Totals:         6      10       0       0       0
  3617 ;;Total ram usage:       16 bytes
  3618 ;; Hardware stack levels used:    1
  3619 ;; Hardware stack levels required when called:    1
  3620 ;; This function calls:
  3621 ;;		___ftpack
  3622 ;; This function is called by:
  3623 ;;		_Count_Up
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           
  3627                           
  3628                           ;psect for function ___ftmul
  3629  0354                     ___ftmul:
  3630                           
  3631                           ;incstack = 0
  3632                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3633  0354  0878               	movf	___ftmul@f1,w
  3634  0355  1283               	bcf	3,5	;RP0=0, select bank0
  3635  0356  1303               	bcf	3,6	;RP1=0, select bank0
  3636  0357  00C0               	movwf	??___ftmul
  3637  0358  0879               	movf	___ftmul@f1+1,w
  3638  0359  00C1               	movwf	??___ftmul+1
  3639  035A  087A               	movf	___ftmul@f1+2,w
  3640  035B  00C2               	movwf	??___ftmul+2
  3641  035C  1003               	clrc
  3642  035D  0D41               	rlf	??___ftmul+1,w
  3643  035E  0D42               	rlf	??___ftmul+2,w
  3644  035F  00C3               	movwf	??___ftmul+3
  3645  0360  0843               	movf	??___ftmul+3,w
  3646  0361  00C4               	movwf	___ftmul@exp
  3647  0362  0844               	movf	___ftmul@exp,w
  3648  0363  1D03               	btfss	3,2
  3649  0364  2B6C               	goto	i1l1761
  3650  0365  3000               	movlw	0
  3651  0366  00F8               	movwf	?___ftmul
  3652  0367  3000               	movlw	0
  3653  0368  00F9               	movwf	?___ftmul+1
  3654  0369  3000               	movlw	0
  3655  036A  00FA               	movwf	?___ftmul+2
  3656  036B  0008               	return
  3657  036C                     i1l1761:
  3658  036C  087B               	movf	___ftmul@f2,w
  3659  036D  00C0               	movwf	??___ftmul
  3660  036E  087C               	movf	___ftmul@f2+1,w
  3661  036F  00C1               	movwf	??___ftmul+1
  3662  0370  087D               	movf	___ftmul@f2+2,w
  3663  0371  00C2               	movwf	??___ftmul+2
  3664  0372  1003               	clrc
  3665  0373  0D41               	rlf	??___ftmul+1,w
  3666  0374  0D42               	rlf	??___ftmul+2,w
  3667  0375  00C3               	movwf	??___ftmul+3
  3668  0376  0843               	movf	??___ftmul+3,w
  3669  0377  00C9               	movwf	___ftmul@sign
  3670  0378  0849               	movf	___ftmul@sign,w
  3671  0379  1D03               	btfss	3,2
  3672  037A  2B82               	goto	i1l1767
  3673  037B  3000               	movlw	0
  3674  037C  00F8               	movwf	?___ftmul
  3675  037D  3000               	movlw	0
  3676  037E  00F9               	movwf	?___ftmul+1
  3677  037F  3000               	movlw	0
  3678  0380  00FA               	movwf	?___ftmul+2
  3679  0381  0008               	return
  3680  0382                     i1l1767:
  3681  0382  0849               	movf	___ftmul@sign,w
  3682  0383  3E7B               	addlw	123
  3683  0384  00C0               	movwf	??___ftmul
  3684  0385  0840               	movf	??___ftmul,w
  3685  0386  07C4               	addwf	___ftmul@exp,f
  3686  0387  0878               	movf	___ftmul@f1,w
  3687  0388  00C0               	movwf	??___ftmul
  3688  0389  0879               	movf	___ftmul@f1+1,w
  3689  038A  00C1               	movwf	??___ftmul+1
  3690  038B  087A               	movf	___ftmul@f1+2,w
  3691  038C  00C2               	movwf	??___ftmul+2
  3692  038D  3010               	movlw	16
  3693  038E                     u129_25:
  3694  038E  1003               	clrc
  3695  038F  0CC2               	rrf	??___ftmul+2,f
  3696  0390  0CC1               	rrf	??___ftmul+1,f
  3697  0391  0CC0               	rrf	??___ftmul,f
  3698  0392  3EFF               	addlw	-1
  3699  0393  1D03               	skipz
  3700  0394  2B8E               	goto	u129_25
  3701  0395  0840               	movf	??___ftmul,w
  3702  0396  00C3               	movwf	??___ftmul+3
  3703  0397  0843               	movf	??___ftmul+3,w
  3704  0398  00C9               	movwf	___ftmul@sign
  3705  0399  087B               	movf	___ftmul@f2,w
  3706  039A  00C0               	movwf	??___ftmul
  3707  039B  087C               	movf	___ftmul@f2+1,w
  3708  039C  00C1               	movwf	??___ftmul+1
  3709  039D  087D               	movf	___ftmul@f2+2,w
  3710  039E  00C2               	movwf	??___ftmul+2
  3711  039F  3010               	movlw	16
  3712  03A0                     u130_25:
  3713  03A0  1003               	clrc
  3714  03A1  0CC2               	rrf	??___ftmul+2,f
  3715  03A2  0CC1               	rrf	??___ftmul+1,f
  3716  03A3  0CC0               	rrf	??___ftmul,f
  3717  03A4  3EFF               	addlw	-1
  3718  03A5  1D03               	skipz
  3719  03A6  2BA0               	goto	u130_25
  3720  03A7  0840               	movf	??___ftmul,w
  3721  03A8  00C3               	movwf	??___ftmul+3
  3722  03A9  0843               	movf	??___ftmul+3,w
  3723  03AA  06C9               	xorwf	___ftmul@sign,f
  3724  03AB  3080               	movlw	128
  3725  03AC  00C0               	movwf	??___ftmul
  3726  03AD  0840               	movf	??___ftmul,w
  3727  03AE  05C9               	andwf	___ftmul@sign,f
  3728  03AF  17F9               	bsf	___ftmul@f1+1,7
  3729  03B0  17FC               	bsf	___ftmul@f2+1,7
  3730  03B1  30FF               	movlw	255
  3731  03B2  05FB               	andwf	___ftmul@f2,f
  3732  03B3  30FF               	movlw	255
  3733  03B4  05FC               	andwf	___ftmul@f2+1,f
  3734  03B5  3000               	movlw	0
  3735  03B6  05FD               	andwf	___ftmul@f2+2,f
  3736  03B7  3000               	movlw	0
  3737  03B8  00C5               	movwf	___ftmul@f3_as_product
  3738  03B9  3000               	movlw	0
  3739  03BA  00C6               	movwf	___ftmul@f3_as_product+1
  3740  03BB  3000               	movlw	0
  3741  03BC  00C7               	movwf	___ftmul@f3_as_product+2
  3742  03BD  3007               	movlw	7
  3743  03BE  00C0               	movwf	??___ftmul
  3744  03BF  0840               	movf	??___ftmul,w
  3745  03C0  00C8               	movwf	___ftmul@cntr
  3746  03C1                     i1l1779:
  3747  03C1  1C78               	btfss	___ftmul@f1,0
  3748  03C2  2BD1               	goto	i1l1783
  3749  03C3  087B               	movf	___ftmul@f2,w
  3750  03C4  07C5               	addwf	___ftmul@f3_as_product,f
  3751  03C5  087C               	movf	___ftmul@f2+1,w
  3752  03C6  1103               	clrz
  3753  03C7  1803               	skipnc
  3754  03C8  0A7C               	incf	___ftmul@f2+1,w
  3755  03C9  1D03               	btfss	3,2
  3756  03CA  07C6               	addwf	___ftmul@f3_as_product+1,f
  3757  03CB  087D               	movf	___ftmul@f2+2,w
  3758  03CC  1103               	clrz
  3759  03CD  1803               	skipnc
  3760  03CE  0A7D               	incf	___ftmul@f2+2,w
  3761  03CF  1D03               	btfss	3,2
  3762  03D0  07C7               	addwf	___ftmul@f3_as_product+2,f
  3763  03D1                     i1l1783:
  3764  03D1  3001               	movlw	1
  3765  03D2                     u133_25:
  3766  03D2  1003               	clrc
  3767  03D3  0CFA               	rrf	___ftmul@f1+2,f
  3768  03D4  0CF9               	rrf	___ftmul@f1+1,f
  3769  03D5  0CF8               	rrf	___ftmul@f1,f
  3770  03D6  3EFF               	addlw	-1
  3771  03D7  1D03               	skipz
  3772  03D8  2BD2               	goto	u133_25
  3773  03D9  3001               	movlw	1
  3774  03DA                     u134_25:
  3775  03DA  1003               	clrc
  3776  03DB  0DFB               	rlf	___ftmul@f2,f
  3777  03DC  0DFC               	rlf	___ftmul@f2+1,f
  3778  03DD  0DFD               	rlf	___ftmul@f2+2,f
  3779  03DE  3EFF               	addlw	-1
  3780  03DF  1D03               	skipz
  3781  03E0  2BDA               	goto	u134_25
  3782  03E1  3001               	movlw	1
  3783  03E2  02C8               	subwf	___ftmul@cntr,f
  3784  03E3  1D03               	btfss	3,2
  3785  03E4  2BC1               	goto	i1l1779
  3786  03E5  3009               	movlw	9
  3787  03E6  00C0               	movwf	??___ftmul
  3788  03E7  0840               	movf	??___ftmul,w
  3789  03E8  00C8               	movwf	___ftmul@cntr
  3790  03E9                     i1l1791:
  3791  03E9  1C78               	btfss	___ftmul@f1,0
  3792  03EA  2BF9               	goto	i1l1795
  3793  03EB  087B               	movf	___ftmul@f2,w
  3794  03EC  07C5               	addwf	___ftmul@f3_as_product,f
  3795  03ED  087C               	movf	___ftmul@f2+1,w
  3796  03EE  1103               	clrz
  3797  03EF  1803               	skipnc
  3798  03F0  0A7C               	incf	___ftmul@f2+1,w
  3799  03F1  1D03               	btfss	3,2
  3800  03F2  07C6               	addwf	___ftmul@f3_as_product+1,f
  3801  03F3  087D               	movf	___ftmul@f2+2,w
  3802  03F4  1103               	clrz
  3803  03F5  1803               	skipnc
  3804  03F6  0A7D               	incf	___ftmul@f2+2,w
  3805  03F7  1D03               	btfss	3,2
  3806  03F8  07C7               	addwf	___ftmul@f3_as_product+2,f
  3807  03F9                     i1l1795:
  3808  03F9  3001               	movlw	1
  3809  03FA                     u138_25:
  3810  03FA  1003               	clrc
  3811  03FB  0CFA               	rrf	___ftmul@f1+2,f
  3812  03FC  0CF9               	rrf	___ftmul@f1+1,f
  3813  03FD  0CF8               	rrf	___ftmul@f1,f
  3814  03FE  3EFF               	addlw	-1
  3815  03FF  1D03               	skipz
  3816  0400  2BFA               	goto	u138_25
  3817  0401  3001               	movlw	1
  3818  0402                     u139_25:
  3819  0402  1003               	clrc
  3820  0403  0CC7               	rrf	___ftmul@f3_as_product+2,f
  3821  0404  0CC6               	rrf	___ftmul@f3_as_product+1,f
  3822  0405  0CC5               	rrf	___ftmul@f3_as_product,f
  3823  0406  3EFF               	addlw	-1
  3824  0407  1D03               	skipz
  3825  0408  2C02               	goto	u139_25
  3826  0409  3001               	movlw	1
  3827  040A  02C8               	subwf	___ftmul@cntr,f
  3828  040B  1D03               	btfss	3,2
  3829  040C  2BE9               	goto	i1l1791
  3830  040D  0845               	movf	___ftmul@f3_as_product,w
  3831  040E  00F0               	movwf	___ftpack@arg
  3832  040F  0846               	movf	___ftmul@f3_as_product+1,w
  3833  0410  00F1               	movwf	___ftpack@arg+1
  3834  0411  0847               	movf	___ftmul@f3_as_product+2,w
  3835  0412  00F2               	movwf	___ftpack@arg+2
  3836  0413  0844               	movf	___ftmul@exp,w
  3837  0414  00C0               	movwf	??___ftmul
  3838  0415  0840               	movf	??___ftmul,w
  3839  0416  00F3               	movwf	___ftpack@exp
  3840  0417  0849               	movf	___ftmul@sign,w
  3841  0418  00C1               	movwf	??___ftmul+1
  3842  0419  0841               	movf	??___ftmul+1,w
  3843  041A  00F4               	movwf	___ftpack@sign
  3844  041B  120A  118A  253D   	fcall	___ftpack
  3845  041E  0870               	movf	?___ftpack,w
  3846  041F  00F8               	movwf	?___ftmul
  3847  0420  0871               	movf	?___ftpack+1,w
  3848  0421  00F9               	movwf	?___ftmul+1
  3849  0422  0872               	movf	?___ftpack+2,w
  3850  0423  00FA               	movwf	?___ftmul+2
  3851  0424  0008               	return
  3852  0425                     __end_of___ftmul:
  3853                           
  3854                           	psect	text17
  3855  053D                     __ptext17:	
  3856 ;; *************** function ___ftpack *****************
  3857 ;; Defined at:
  3858 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\float.c"
  3859 ;; Parameters:    Size  Location     Type
  3860 ;;  arg             3    0[COMMON] unsigned um
  3861 ;;  exp             1    3[COMMON] unsigned char 
  3862 ;;  sign            1    4[COMMON] unsigned char 
  3863 ;; Auto vars:     Size  Location     Type
  3864 ;;		None
  3865 ;; Return value:  Size  Location     Type
  3866 ;;                  3    0[COMMON] float 
  3867 ;; Registers used:
  3868 ;;		wreg, status,2, status,0
  3869 ;; Tracked objects:
  3870 ;;		On entry : 0/0
  3871 ;;		On exit  : 0/0
  3872 ;;		Unchanged: 0/0
  3873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3874 ;;      Params:         5       0       0       0       0
  3875 ;;      Locals:         0       0       0       0       0
  3876 ;;      Temps:          3       0       0       0       0
  3877 ;;      Totals:         8       0       0       0       0
  3878 ;;Total ram usage:        8 bytes
  3879 ;; Hardware stack levels used:    1
  3880 ;; This function calls:
  3881 ;;		Nothing
  3882 ;; This function is called by:
  3883 ;;		___ftmul
  3884 ;;		___lwtoft
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           
  3889                           ;psect for function ___ftpack
  3890  053D                     ___ftpack:
  3891                           
  3892                           ;incstack = 0
  3893                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3894  053D  0873               	movf	___ftpack@exp,w
  3895  053E  1903               	btfsc	3,2
  3896  053F  2D45               	goto	i1l1505
  3897  0540  0872               	movf	___ftpack@arg+2,w
  3898  0541  0471               	iorwf	___ftpack@arg+1,w
  3899  0542  0470               	iorwf	___ftpack@arg,w
  3900  0543  1D03               	skipz
  3901  0544  2D58               	goto	i1l1511
  3902  0545                     i1l1505:
  3903  0545  3000               	movlw	0
  3904  0546  00F0               	movwf	?___ftpack
  3905  0547  3000               	movlw	0
  3906  0548  00F1               	movwf	?___ftpack+1
  3907  0549  3000               	movlw	0
  3908  054A  00F2               	movwf	?___ftpack+2
  3909  054B  0008               	return
  3910  054C                     i1l1509:
  3911  054C  3001               	movlw	1
  3912  054D  00F5               	movwf	??___ftpack
  3913  054E  0875               	movf	??___ftpack,w
  3914  054F  07F3               	addwf	___ftpack@exp,f
  3915  0550  3001               	movlw	1
  3916  0551                     u92_25:
  3917  0551  1003               	clrc
  3918  0552  0CF2               	rrf	___ftpack@arg+2,f
  3919  0553  0CF1               	rrf	___ftpack@arg+1,f
  3920  0554  0CF0               	rrf	___ftpack@arg,f
  3921  0555  3EFF               	addlw	-1
  3922  0556  1D03               	skipz
  3923  0557  2D51               	goto	u92_25
  3924  0558                     i1l1511:
  3925  0558  30FE               	movlw	254
  3926  0559  0572               	andwf	___ftpack@arg+2,w
  3927  055A  1903               	btfsc	3,2
  3928  055B  2D73               	goto	i1l537
  3929  055C  2D4C               	goto	i1l1509
  3930  055D                     i1l1513:
  3931  055D  3001               	movlw	1
  3932  055E  00F5               	movwf	??___ftpack
  3933  055F  0875               	movf	??___ftpack,w
  3934  0560  07F3               	addwf	___ftpack@exp,f
  3935  0561  3001               	movlw	1
  3936  0562  07F0               	addwf	___ftpack@arg,f
  3937  0563  3000               	movlw	0
  3938  0564  1803               	skipnc
  3939  0565  3001               	movlw	1
  3940  0566  07F1               	addwf	___ftpack@arg+1,f
  3941  0567  3000               	movlw	0
  3942  0568  1803               	skipnc
  3943  0569  3001               	movlw	1
  3944  056A  07F2               	addwf	___ftpack@arg+2,f
  3945  056B  3001               	movlw	1
  3946  056C                     u94_25:
  3947  056C  1003               	clrc
  3948  056D  0CF2               	rrf	___ftpack@arg+2,f
  3949  056E  0CF1               	rrf	___ftpack@arg+1,f
  3950  056F  0CF0               	rrf	___ftpack@arg,f
  3951  0570  3EFF               	addlw	-1
  3952  0571  1D03               	skipz
  3953  0572  2D6C               	goto	u94_25
  3954  0573                     i1l537:
  3955  0573  30FF               	movlw	255
  3956  0574  0572               	andwf	___ftpack@arg+2,w
  3957  0575  1903               	btfsc	3,2
  3958  0576  2D86               	goto	i1l1521
  3959  0577  2D5D               	goto	i1l1513
  3960  0578                     i1l1523:
  3961  0578  3002               	movlw	2
  3962  0579  0273               	subwf	___ftpack@exp,w
  3963  057A  1C03               	btfss	3,0
  3964  057B  2D88               	goto	i1l544
  3965  057C  3001               	movlw	1
  3966  057D  02F3               	subwf	___ftpack@exp,f
  3967  057E  3001               	movlw	1
  3968  057F                     u96_25:
  3969  057F  1003               	clrc
  3970  0580  0DF0               	rlf	___ftpack@arg,f
  3971  0581  0DF1               	rlf	___ftpack@arg+1,f
  3972  0582  0DF2               	rlf	___ftpack@arg+2,f
  3973  0583  3EFF               	addlw	-1
  3974  0584  1D03               	skipz
  3975  0585  2D7F               	goto	u96_25
  3976  0586                     i1l1521:
  3977  0586  1FF1               	btfss	___ftpack@arg+1,7
  3978  0587  2D78               	goto	i1l1523
  3979  0588                     i1l544:
  3980  0588  1873               	btfsc	___ftpack@exp,0
  3981  0589  2D90               	goto	i1l545
  3982  058A  30FF               	movlw	255
  3983  058B  05F0               	andwf	___ftpack@arg,f
  3984  058C  307F               	movlw	127
  3985  058D  05F1               	andwf	___ftpack@arg+1,f
  3986  058E  30FF               	movlw	255
  3987  058F  05F2               	andwf	___ftpack@arg+2,f
  3988  0590                     i1l545:
  3989  0590  1003               	clrc
  3990  0591  0CF3               	rrf	___ftpack@exp,f
  3991  0592  0873               	movf	___ftpack@exp,w
  3992  0593  00F5               	movwf	??___ftpack
  3993  0594  01F6               	clrf	??___ftpack+1
  3994  0595  01F7               	clrf	??___ftpack+2
  3995  0596  3010               	movlw	16
  3996  0597                     u100_25:
  3997  0597  1003               	clrc
  3998  0598  0DF5               	rlf	??___ftpack,f
  3999  0599  0DF6               	rlf	??___ftpack+1,f
  4000  059A  0DF7               	rlf	??___ftpack+2,f
  4001  059B  3EFF               	addlw	-1
  4002  059C  1D03               	skipz
  4003  059D  2D97               	goto	u100_25
  4004  059E  0875               	movf	??___ftpack,w
  4005  059F  04F0               	iorwf	___ftpack@arg,f
  4006  05A0  0876               	movf	??___ftpack+1,w
  4007  05A1  04F1               	iorwf	___ftpack@arg+1,f
  4008  05A2  0877               	movf	??___ftpack+2,w
  4009  05A3  04F2               	iorwf	___ftpack@arg+2,f
  4010  05A4  0874               	movf	___ftpack@sign,w
  4011  05A5  1903               	btfsc	3,2
  4012  05A6  0008               	return
  4013  05A7  17F2               	bsf	___ftpack@arg+2,7
  4014  05A8  0008               	return
  4015  05A9                     __end_of___ftpack:
  4016                           
  4017                           	psect	text18
  4018  07B5                     __ptext18:	
  4019 ;; *************** function _ReadAdc *****************
  4020 ;; Defined at:
  4021 ;;		line 10 in file "adc.c"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;  Channel         1    wreg     unsigned char 
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;  Channel         1    6[COMMON] unsigned char 
  4026 ;;  value           2    4[COMMON] unsigned int 
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  2    0[COMMON] unsigned int 
  4029 ;; Registers used:
  4030 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4036 ;;      Params:         2       0       0       0       0
  4037 ;;      Locals:         3       0       0       0       0
  4038 ;;      Temps:          2       0       0       0       0
  4039 ;;      Totals:         7       0       0       0       0
  4040 ;;Total ram usage:        7 bytes
  4041 ;; Hardware stack levels used:    1
  4042 ;; This function calls:
  4043 ;;		Nothing
  4044 ;; This function is called by:
  4045 ;;		_Count_Up
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           
  4050                           ;psect for function _ReadAdc
  4051  07B5                     _ReadAdc:
  4052                           
  4053                           ;incstack = 0
  4054                           ; Regs used in _ReadAdc: [wreg-fsr0h+status,2+status,0]
  4055                           ;ReadAdc@Channel stored from wreg
  4056  07B5  00F6               	movwf	ReadAdc@Channel
  4057                           
  4058                           ;adc.c: 10: unsigned int ReadAdc(unsigned char Channel);adc.c: 11: {;adc.c: 12:     unsi
      +                          gned int value;;adc.c: 13:     switch(Channel)
  4059  07B6  2FC1               	goto	i1l1603
  4060  07B7                     i1l208:	
  4061                           ;adc.c: 14:  {;adc.c: 15:  case 0: CHS0 = 0; CHS1 = 0; CHS2 = 0; break;
  4062                           
  4063  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  4064  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  4065  07B9  119F               	bcf	31,3	;volatile
  4066  07BA  2FBE               	goto	L4
  4067  07BB                     i1l210:	
  4068                           ;adc.c: 16:     case 1: CHS0=1; CHS1 = 0; CHS2 = 0;
  4069                           
  4070  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  4071  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  4072  07BD  159F               	bsf	31,3	;volatile
  4073  07BE                     L4:
  4074  07BE  121F               	bcf	31,4	;volatile
  4075  07BF  129F               	bcf	31,5	;volatile
  4076                           
  4077                           ;adc.c: 17:     }
  4078  07C0  2FD1               	goto	i1l209
  4079  07C1                     i1l1603:
  4080  07C1  0876               	movf	ReadAdc@Channel,w
  4081  07C2  00F2               	movwf	??_ReadAdc
  4082  07C3  01F3               	clrf	??_ReadAdc+1
  4083                           
  4084                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4085                           ; Switch size 1, requested type "simple"
  4086                           ; Number of cases is 1, Range of values is 0 to 0
  4087                           ; switch strategies available:
  4088                           ; Name         Instructions Cycles
  4089                           ; simple_byte            4     3 (average)
  4090                           ; direct_byte           11     8 (fixed)
  4091                           ; jumptable            260     6 (fixed)
  4092                           ;	Chosen strategy is simple_byte
  4093  07C4  0873               	movf	??_ReadAdc+1,w
  4094  07C5  3A00               	xorlw	0	; case 0
  4095  07C6  1903               	skipnz
  4096  07C7  2FC9               	goto	i1l2621
  4097  07C8  2FD1               	goto	i1l209
  4098  07C9                     i1l2621:
  4099                           
  4100                           ; Switch size 1, requested type "simple"
  4101                           ; Number of cases is 2, Range of values is 0 to 1
  4102                           ; switch strategies available:
  4103                           ; Name         Instructions Cycles
  4104                           ; simple_byte            7     4 (average)
  4105                           ; direct_byte           14     8 (fixed)
  4106                           ; jumptable            260     6 (fixed)
  4107                           ;	Chosen strategy is simple_byte
  4108  07C9  0872               	movf	??_ReadAdc,w
  4109  07CA  3A00               	xorlw	0	; case 0
  4110  07CB  1903               	skipnz
  4111  07CC  2FB7               	goto	i1l208
  4112  07CD  3A01               	xorlw	1	; case 1
  4113  07CE  1903               	skipnz
  4114  07CF  2FBB               	goto	i1l210
  4115  07D0  2FD1               	goto	i1l209
  4116  07D1                     i1l209:
  4117                           
  4118                           ;adc.c: 18:     ADON=1;
  4119  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  4120  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  4121  07D3  141F               	bsf	31,0	;volatile
  4122                           
  4123                           ;adc.c: 19:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  4124  07D4  3006               	movlw	6
  4125  07D5  00F2               	movwf	??_ReadAdc
  4126  07D6                     u235_27:
  4127  07D6  0BF2               	decfsz	??_ReadAdc,f
  4128  07D7  2FD6               	goto	u235_27
  4129  07D8  0000               	nop
  4130                           
  4131                           ;adc.c: 20:     GO_DONE=1;
  4132  07D9  1283               	bcf	3,5	;RP0=0, select bank0
  4133  07DA  1303               	bcf	3,6	;RP1=0, select bank0
  4134  07DB  151F               	bsf	31,2	;volatile
  4135  07DC                     i1l211:	
  4136                           ;adc.c: 21:     while(GO_DONE);
  4137                           
  4138  07DC  191F               	btfsc	31,2	;volatile
  4139  07DD  2FDC               	goto	i1l211
  4140                           
  4141                           ;adc.c: 22:     value=(unsigned int)ADRESH*256+ADRESL;
  4142  07DE  081E               	movf	30,w	;volatile
  4143  07DF  00F5               	movwf	ReadAdc@value+1
  4144  07E0  1683               	bsf	3,5	;RP0=1, select bank1
  4145  07E1  1303               	bcf	3,6	;RP1=0, select bank1
  4146  07E2  081E               	movf	30,w	;volatile
  4147  07E3  00F4               	movwf	ReadAdc@value
  4148                           
  4149                           ;adc.c: 23:     ADON=0;
  4150  07E4  1283               	bcf	3,5	;RP0=0, select bank0
  4151  07E5  1303               	bcf	3,6	;RP1=0, select bank0
  4152  07E6  101F               	bcf	31,0	;volatile
  4153                           
  4154                           ;adc.c: 25:     return value;
  4155  07E7  0875               	movf	ReadAdc@value+1,w
  4156  07E8  00F1               	movwf	?_ReadAdc+1
  4157  07E9  0874               	movf	ReadAdc@value,w
  4158  07EA  00F0               	movwf	?_ReadAdc
  4159  07EB  0008               	return
  4160  07EC                     __end_of_ReadAdc:
  4161  007E                     btemp	set	126	;btemp
  4162  007E                     wtemp0	set	126
  4163                           
  4164                           	psect	config
  4165                           
  4166                           ;Config register CONFIG @ 0x2007
  4167                           ;	Oscillator Selection bits
  4168                           ;	FOSC = HS, HS oscillator
  4169                           ;	Watchdog Timer Enable bit
  4170                           ;	WDTE = OFF, WDT disabled
  4171                           ;	Power-up Timer Enable bit
  4172                           ;	PWRTE = OFF, PWRT disabled
  4173                           ;	Brown-out Reset Enable bit
  4174                           ;	BOREN = ON, BOR enabled
  4175                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4176                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  4177                           ;	Data EEPROM Memory Code Protection bit
  4178                           ;	CPD = OFF, Data EEPROM code protection off
  4179                           ;	Flash Program Memory Write Enable bits
  4180                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4181                           ;	In-Circuit Debugger Mode bit
  4182                           ;	DEBUG = 0x1, unprogrammed default
  4183                           ;	Flash Program Memory Code Protection bit
  4184                           ;	CP = OFF, Code protection off
  4185  2007                     	org	8199
  4186  2007  3FFA               	dw	16378

Data Sizes:
    Strings     44
    Constant    0
    Data        64
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     32      64
    BANK1            80      4      78
    BANK3            96     10      10
    BANK2            96      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[4]), STR_1(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 6
		 -> in_buffer(BANK0[6]), 

    LCDWriteString@msg	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_5(CODE[12]), STR_4(CODE[12]), STR_3(CODE[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Count_Up in COMMON

    _Count_Up->___ftmul
    ___lwtoft->___ftpack
    ___ftmul->___ftpack

Critical Paths under _main in BANK0

    _main->_LCDGotoXY
    _main->_LCDInit
    _main->_Send_data
    _Send_data->___lwdiv
    ___lwdiv->___lwmod
    _LCDWriteString->_LCDByte
    _LCDInit->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _Count_Up in BANK0

    _Count_Up->___ftmul

Critical Paths under _main in BANK1

    _main->_Send_data

Critical Paths under _Count_Up in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Count_Up in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Count_Up in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   14091
                                              0 BANK3     10    10      0
                            _InitADC
                          _Init_uart
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                     _LCDWriteString
                          _Send_data
                            ___fttol
                            ___lwdiv
                            ___lwmod
                  _timer2_initialize
 ---------------------------------------------------------------------------------
 (1) _timer2_initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     501
                                             16 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _Send_data                                            6     4      2    2649
                                             30 BANK0      2     0      2
                                              0 BANK1      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4    1272
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4    1021
                                             22 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       3     3      0    2117
                                             28 BANK0      3     3      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0    2076
                                             28 BANK0      4     4      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDGotoXY                                            4     3      1    2005
                                             28 BANK0      4     3      1
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDByte                                              7     6      1    1770
                                             21 BANK0      7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (3) _LCDBusyLoop                                          5     5      0     176
                                             16 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _Init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Count_Up                                             6     6      0    4916
                                             10 BANK0      6     6      0
                            _ReadAdc
                            ___ftmul
                           ___lwtoft
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              6     3      3     400
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (5) ___lwtoft                                             4     1      3    1997
                                              8 COMMON     4     1      3
                            _ReadAdc (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    2407
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    1869
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (5) _ReadAdc                                              7     5      2      45
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitADC
   _Init_uart
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   _Send_data
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   ___fttol
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod
   _timer2_initialize

 _Count_Up (ROOT)
   _ReadAdc
   ___ftmul
     ___ftpack
   ___lwtoft
     _ReadAdc (ARG)
     ___ftpack (ARG)
   _strncmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      A       A       9       10.4%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      4      4E       7       97.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     20      40       5       80.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A6      12        0.0%
ABS                  0      0      A6       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Jan 03 16:56:21 2022

              ?_LCDBusyLoop 0070                           _i 0034                           pc 0002  
                        fsr 0004                         l133 06D0                         l134 06D1  
                       l236 04B3                         l178 0FC5                         l179 0FA6  
                       l628 0517                         _GIE 005F                  Count_Up@ch 004F  
                       _RD4 0044                         _RD5 0045                         _RD6 0046  
                       _PR2 0092                         fsr0 0004                         indf 0000  
           __end_of_LCDByte 06FA             __end_of_LCDInit 0612                 LCDByte@temp 005B  
                      l2241 0752                        l2163 061F                        l2403 0FA8  
                      l2251 0773                        l2405 0FAA                        l2343 05FB  
                      l2247 0768                        l2239 0744                        l2263 0FD4  
                      l2423 04DA                        l2409 0FAF                        l2265 0FE2  
                      l2273 0FFB                        l2441 0503                        l2371 06A2  
                      l2451 0526                        l2443 0513                        l2419 04D1  
                      l2269 0FF0                        l2367 0698                        l2375 066A  
                      l2455 0534                        l2393 04AB                        l2619 0FB7  
                      l2485 007E                        _ADON 00F8                        _CHS0 00FB  
                      _CHS1 00FC                        _CHS2 00FD                        STR_1 0829  
                      STR_2 082E                        STR_3 081E                        STR_4 0806  
                      STR_5 0812                        u2025 0FD7                        u2045 0FE8  
                      u2055 0FF1                        u2225 051C                        u2165 04E1  
                      u2337 006E                        u2347 05B2                        u2195 0504  
                      u1905 062C                        u1925 06BD                        u1955 0747  
                      _PEIE 005E                        u1975 0753                        u1985 075F  
                      u1995 0769                        _RCIE 0465                        _RCIF 0065  
                      _TRMT 04C1                        _Dong 002B                        _main 0035  
              ___ftpack@arg 0070          __size_of_LCDGotoXY 002E                ___ftpack@exp 0073  
                      btemp 007E                        start 0012                ___ftmul@cntr 0048  
              ___ftmul@sign 0049             __end_of_InitADC 0F6A             __end_of_ReadAdc 07EC  
              ___fttol@exp1 005D                ___fttol@lval 0059                       ?_main 0070  
              LCDInit@style 005E             __end_of___ftmul 0425             __end_of___fttol 053D  
           __end_of___lwdiv 0778                       i1l101 0347                       i1l210 07BB  
                     i1l211 07DC                       i1l208 07B7                       i1l209 07D1  
           __end_of___lwmod 1000                       i1l544 0588                       i1l545 0590  
                     i1l537 0573                       i1l751 0779                       _RCREG 001A  
                     _RCSTA 0018                       _SPBRG 0099                       _PORTD 0008  
                     _TRISD 0088                       u92_25 0551                       u94_25 056C  
                     u96_25 057F                       _TXREG 0019                       _TXSTA 0098  
                     _count 0032               ___ftpack@sign 0074                       pclath 000A  
                     status 0003                       wtemp0 007E             __end_of_strncmp 07B5  
           __initialization 0015                __end_of_main 026B            __end_of_Count_Up 0354  
                Send_data@i 00ED                  Send_data@k 00EB                ReadAdc@value 0074  
                    ??_main 0190               ___fttol@sign1 0058           __end_of_LCDGotoXY 0FCC  
             LCDByte@isdata 0055                   ??_LCDByte 0056                   ??_LCDInit 005C  
                    _ADCON0 001F                      _ADCON1 009F                      _ADRESH 001E  
                    _ADRESL 009E            __end_of___ftpack 05A9                      u100_25 0597  
                    i1l1511 0558                      i1l1521 0586                      i1l1513 055D  
                    i1l1505 0545                      i1l1603 07C1                      i1l1523 0578  
                    i1l1509 054C                      i1l1631 07B2                      i1l1625 0798  
                    i1l2621 07C9                      i1l1629 07A9                      i1l1901 0316  
                    i1l1761 036C                      u130_25 03A0                      i1l1909 0330  
                    i1l1791 03E9                      i1l1783 03D1                      i1l1767 0382  
                    i1l1873 02BD                      i1l1795 03F9                      i1l1779 03C1  
                    i1l1891 0309                      i1l1877 02ED                      i1l1895 030F  
                    i1l1879 02EE                      u133_25 03D2                      u134_25 03DA  
                    u129_25 038E                      u138_25 03FA                      u139_25 0402  
                    u235_27 07D6            __end_of___lwtoft 0800                      _TMR2IE 0461  
                    _TMR2IF 0061                      _TMR2ON 0092                   ??_InitADC 0050  
                 ??_ReadAdc 0072          __size_of_Init_uart 000E                      _Dienap 0028  
            _LCDWriteString 0667                      _adc_ok 0038                   ??___ftmul 0040  
                 ??___fttol 0054          __size_of_Send_data 009B                   ??___lwdiv 005A  
                 ??___lwmod 0054                      _count1 0030        __size_of_LCDBusyLoop 0055  
     ___ftmul@f3_as_product 0045                      saved_w 007E                   ??_strncmp 0073  
   __end_of__initialization 0031      __end_of_LCDWriteString 06B7                   LCDByte@hn 0058  
                 LCDByte@ln 0059                  ___ftmul@f1 0078                  ___ftmul@f2 007B  
                ___fttol@f1 0050              __pcstackCOMMON 0070                __pidataBANK1 06FA  
                ___lwtoft@c 0078              Send_data@Value 005E           __end_of_Init_uart 0F78  
         __end_of_Send_data 04C0                  __pbssBANK0 0020                  __pbssBANK1 00E0  
                 ?_Count_Up 0070                  _check_sang 0036             ?_LCDWriteString 0070  
                __pmaintext 0035                  __pintentry 0004                   ?___ftpack 0070  
                   _T2CKPS0 0090                     _T2CKPS1 0091                   ?___lwtoft 0078  
                   _LCDByte 06B7                     _LCDInit 05A9                     _GO_DONE 00FA  
                _commbuffer 00E0                     _TOUTPS0 0093                     _TOUTPS1 0094  
                   _TOUTPS2 0095                     _TOUTPS3 0096                  __stringtab 0800  
                ??_Count_Up 004A                     _InitADC 0F61                     _ReadAdc 07B5  
                   ___cgram 00A0                     ___ftmul 0354                     ___fttol 04C0  
                   ___lwdiv 073A                     ___lwmod 0FCC           _timer2_initialize 0F89  
                ??___ftpack 0075                     __ptext1 0F89                     __ptext2 04C0  
                   __ptext3 0425                     __ptext4 0FCC                     __ptext5 073A  
                   __ptext6 0667                     __ptext7 05A9                     __ptext8 0F9E  
                   __ptext9 06B7                  ??___lwtoft 007B          ?_timer2_initialize 0070  
                   _count_s 002E                   _LCDGotoXY 0F9E         ??_timer2_initialize 0050  
                   clrloop0 0F5A                     _strncmp 0778        end_of_initialization 0031  
 __end_of_timer2_initialize 0F9E                   _PORTEbits 0009           LCDWriteString@msg 005E  
                 _TRISAbits 0085                   _TRISDbits 0088                   _TRISEbits 0089  
                ?_LCDGotoXY 005C                  LCDInit@__i 005F              ReadAdc@Channel 0076  
                LCDGotoXY@x 005F                  LCDGotoXY@y 005C                 ___ftmul@exp 0044  
             ??_LCDBusyLoop 0050         start_initialization 0015                   _Init_uart 0F6A  
          ??_LCDWriteString 005C           __size_of_Count_Up 00E9                   _Send_data 0425  
__size_of_timer2_initialize 0015                  init_fetch0 0F78                 __pdataBANK1 00A0  
       __end_of_LCDBusyLoop 0667                    ?_LCDByte 0055                    ?_LCDInit 0070  
         __size_of___ftpack 006C                    LCDByte@c 005A                   ___latbits 0002  
         __size_of___lwtoft 0014               __pcstackBANK0 0040               __pcstackBANK1 00EA  
             __pcstackBANK3 0190                 ??_LCDGotoXY 005D                  ?_Init_uart 0070  
                  ?_InitADC 0070                  ?_Send_data 005E                    ?_ReadAdc 0070  
          ___lwdiv@dividend 0058                   _do_dienap 0039                    ?___ftmul 0078  
                  ?___fttol 0050                    ?___lwdiv 0056                    ?___lwmod 0050  
                 __pstrings 0800                   _in_buffer 003A             LCDBusyLoop@busy 0052  
           LCDBusyLoop@temp 0053            ___lwdiv@quotient 005C                    ?_strncmp 0070  
         interrupt_function 0004                   clear_ram0 0F59                   main@F1000 0025  
               _LCDBusyLoop 0612            LCDWriteString@cc 005D                   main@Digit 0195  
               __stringbase 0805            __size_of_LCDByte 0043            __size_of_LCDInit 0069  
               ??_Init_uart 0050                    _Count_Up 026B                 ??_Send_data 00EA  
          __size_of_InitADC 0009            __size_of_ReadAdc 0037            __size_of___ftmul 00D1  
          __size_of___fttol 007D           LCDBusyLoop@status 0054            __size_of___lwdiv 003E  
          __size_of___lwmod 0034                    ___ftpack 053D          __end_of__stringtab 0806  
                  ___lwtoft 07EC             LCDWriteInt@F912 0020                    _main$840 0193  
           ___lwdiv@divisor 0056             ___lwdiv@counter 005B                    __ptext10 0612  
                  __ptext11 0F6A                    __ptext12 0F61                    __ptext13 026B  
                  __ptext14 0778                    __ptext15 07EC                    __ptext16 0354  
                  __ptext17 053D                    __ptext18 07B5                    _in_count 0037  
          __size_of_strncmp 003D               __size_of_main 0236                  strncmp@len 0071  
             main@ADC_Value 0198                    init_ram0 0F7C                    intlevel1 0000  
          ___lwmod@dividend 0052                   strncmp@s1 0075                   strncmp@s2 0070  
                 stringcode 0800             ___lwmod@divisor 0050             ___lwmod@counter 0055  
                  stringdir 0800                    stringtab 0800     __size_of_LCDWriteString 0050  
