

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Aug 02 12:03:49 2021

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.30
    14                           ; Generated 26/08/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0013                     _SSPBUF	set	19
   169  0014                     _SSPCON	set	20
   170  0094                     _SSPSTAT	set	148
   171  0087                     _TRISCbits	set	135
   172                           
   173                           	psect	cinit
   174  07FC                     start_initialization:	
   175                           ; #config settings
   176                           
   177  07FC                     __initialization:
   178  07FC                     end_of_initialization:	
   179                           ;End of C runtime variable initialization code
   180                           
   181  07FC                     __end_of__initialization:
   182  07FC  0183               	clrf	3
   183  07FD  120A  118A  2FBB   	ljmp	_main	;jump to C main() function
   184                           
   185                           	psect	cstackCOMMON
   186  0070                     __pcstackCOMMON:
   187  0070                     ?_SPI_Initialize_Slave:
   188  0070                     ??_SPI_Initialize_Slave:	
   189                           ; 1 bytes @ 0x0
   190                           
   191  0070                     ?_SPI_Ready2Read:	
   192                           ; 1 bytes @ 0x0
   193                           
   194  0070                     ??_SPI_Ready2Read:	
   195                           ; 1 bytes @ 0x0
   196                           
   197  0070                     ?_SPI_Write:	
   198                           ; 1 bytes @ 0x0
   199                           
   200  0070                     ??_SPI_Write:	
   201                           ; 1 bytes @ 0x0
   202                           
   203  0070                     SPI_Write@incoming:	
   204                           ; 1 bytes @ 0x0
   205                           
   206                           
   207                           ; 1 bytes @ 0x0
   208  0070                     	ds	1
   209  0071                     ?_main:
   210  0071                     main@argc:	
   211                           ; 2 bytes @ 0x1
   212                           
   213                           
   214                           ; 2 bytes @ 0x1
   215  0071                     	ds	2
   216  0073                     main@argv:
   217                           
   218                           ; 2 bytes @ 0x3
   219  0073                     	ds	2
   220  0075                     ??_main:
   221                           
   222                           ; 1 bytes @ 0x5
   223  0075                     	ds	1
   224                           
   225                           	psect	cstackBANK0
   226  0020                     __pcstackBANK0:
   227  0020                     main@Rx_data:
   228                           
   229                           ; 10 bytes @ 0x0
   230  0020                     	ds	10
   231  002A                     main@Tx_data:
   232                           
   233                           ; 10 bytes @ 0xA
   234  002A                     	ds	10
   235  0034                     main@i:
   236                           
   237                           ; 1 bytes @ 0x14
   238  0034                     	ds	1
   239                           
   240                           	psect	maintext
   241  07BB                     __pmaintext:	
   242 ;;
   243 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   244 ;;
   245 ;; *************** function _main *****************
   246 ;; Defined at:
   247 ;;		line 34 in file "Slave.c"
   248 ;; Parameters:    Size  Location     Type
   249 ;;  argc            2    1[COMMON] int 
   250 ;;  argv            2    3[COMMON] PTR PTR unsigned char 
   251 ;; Auto vars:     Size  Location     Type
   252 ;;  Tx_data        10   10[BANK0 ] unsigned char [10]
   253 ;;  Rx_data        10    0[BANK0 ] unsigned char [10]
   254 ;;  i               1   20[BANK0 ] unsigned char 
   255 ;; Return value:  Size  Location     Type
   256 ;;                  2    1[COMMON] int 
   257 ;; Registers used:
   258 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   259 ;; Tracked objects:
   260 ;;		On entry : B00/0
   261 ;;		On exit  : 0/0
   262 ;;		Unchanged: 0/0
   263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   264 ;;      Params:         4       0       0       0       0
   265 ;;      Locals:         0      21       0       0       0
   266 ;;      Temps:          1       0       0       0       0
   267 ;;      Totals:         5      21       0       0       0
   268 ;;Total ram usage:       26 bytes
   269 ;; Hardware stack levels required when called:    1
   270 ;; This function calls:
   271 ;;		_SPI_Initialize_Slave
   272 ;;		_SPI_Ready2Read
   273 ;;		_SPI_Write
   274 ;; This function is called by:
   275 ;;		Startup code after reset
   276 ;; This function uses a non-reentrant model
   277 ;;
   278                           
   279                           
   280                           ;psect for function _main
   281  07BB                     _main:
   282  07BB                     l683:	
   283                           ;incstack = 0
   284                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   285                           
   286                           
   287                           ;Slave.c: 35:     unsigned char i;;Slave.c: 36:     char Rx_data[10];;Slave.c: 37:     c
      +                          har Tx_data[10];;Slave.c: 39:     SPI_Initialize_Slave();
   288  07BB  120A  118A  27AE  120A  118A  	fcall	_SPI_Initialize_Slave
   289  07C0                     l685:
   290                           
   291                           ;Slave.c: 40:     Tx_data[0]=0xaa;
   292  07C0  30AA               	movlw	170
   293  07C1  00F5               	movwf	??_main
   294  07C2  0875               	movf	??_main,w
   295  07C3  1283               	bcf	3,5	;RP0=0, select bank0
   296  07C4  1303               	bcf	3,6	;RP1=0, select bank0
   297  07C5  00AA               	movwf	main@Tx_data
   298  07C6                     l687:
   299                           
   300                           ;Slave.c: 41:     Tx_data[1]=0x11;
   301  07C6  3011               	movlw	17
   302  07C7  00F5               	movwf	??_main
   303  07C8  0875               	movf	??_main,w
   304  07C9  00AB               	movwf	main@Tx_data+1
   305  07CA                     l689:
   306                           
   307                           ;Slave.c: 42:     Tx_data[2]=0x22;
   308  07CA  3022               	movlw	34
   309  07CB  00F5               	movwf	??_main
   310  07CC  0875               	movf	??_main,w
   311  07CD  00AC               	movwf	main@Tx_data+2
   312  07CE                     l691:
   313                           
   314                           ;Slave.c: 44:     {;Slave.c: 45:         if (SPI_Ready2Read())
   315  07CE  120A  118A  27A4  120A  118A  	fcall	_SPI_Ready2Read
   316  07D3  3A00               	xorlw	0
   317  07D4  1903               	skipnz
   318  07D5  2FD7               	goto	u51
   319  07D6  2FD8               	goto	u50
   320  07D7                     u51:
   321  07D7  2FCE               	goto	l691
   322  07D8                     u50:
   323  07D8                     l693:
   324                           
   325                           ;Slave.c: 46:         {;Slave.c: 47:            Rx_data[i]= SSPBUF;
   326  07D8  1283               	bcf	3,5	;RP0=0, select bank0
   327  07D9  1303               	bcf	3,6	;RP1=0, select bank0
   328  07DA  0813               	movf	19,w	;volatile
   329  07DB  00F5               	movwf	??_main
   330  07DC  0834               	movf	main@i,w
   331  07DD  3E20               	addlw	(low (main@Rx_data| 0))& (0+255)
   332  07DE  0084               	movwf	4
   333  07DF  0875               	movf	??_main,w
   334  07E0  1383               	bcf	3,7	;select IRP bank0
   335  07E1  0080               	movwf	0
   336  07E2                     l695:
   337                           
   338                           ;Slave.c: 48:            SPI_Write(Tx_data[i]);
   339  07E2  0834               	movf	main@i,w
   340  07E3  3E2A               	addlw	(low (main@Tx_data| 0))& (0+255)
   341  07E4  0084               	movwf	4
   342  07E5  0800               	movf	0,w
   343  07E6  120A  118A  279E  120A  118A  	fcall	_SPI_Write
   344  07EB                     l697:
   345                           
   346                           ;Slave.c: 49:         if(i++==3) i=0;
   347  07EB  3001               	movlw	1
   348  07EC  00F5               	movwf	??_main
   349  07ED  0875               	movf	??_main,w
   350  07EE  1283               	bcf	3,5	;RP0=0, select bank0
   351  07EF  1303               	bcf	3,6	;RP1=0, select bank0
   352  07F0  07B4               	addwf	main@i,f
   353  07F1  3004               	movlw	4
   354  07F2  0634               	xorwf	main@i,w
   355  07F3  1D03               	btfss	3,2
   356  07F4  2FF6               	goto	u61
   357  07F5  2FF7               	goto	u60
   358  07F6                     u61:
   359  07F6  2FCE               	goto	l691
   360  07F7                     u60:
   361  07F7                     l699:
   362  07F7  01B4               	clrf	main@i
   363  07F8  2FCE               	goto	l691
   364  07F9  120A  118A  2800   	ljmp	start
   365  07FC                     __end_of_main:
   366                           
   367                           	psect	text1
   368  079E                     __ptext1:	
   369 ;; *************** function _SPI_Write *****************
   370 ;; Defined at:
   371 ;;		line 29 in file "Slave.c"
   372 ;; Parameters:    Size  Location     Type
   373 ;;  incoming        1    wreg     unsigned char 
   374 ;; Auto vars:     Size  Location     Type
   375 ;;  incoming        1    0[COMMON] unsigned char 
   376 ;; Return value:  Size  Location     Type
   377 ;;                  1    wreg      void 
   378 ;; Registers used:
   379 ;;		wreg
   380 ;; Tracked objects:
   381 ;;		On entry : 0/0
   382 ;;		On exit  : 0/0
   383 ;;		Unchanged: 0/0
   384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   385 ;;      Params:         0       0       0       0       0
   386 ;;      Locals:         1       0       0       0       0
   387 ;;      Temps:          0       0       0       0       0
   388 ;;      Totals:         1       0       0       0       0
   389 ;;Total ram usage:        1 bytes
   390 ;; Hardware stack levels used:    1
   391 ;; This function calls:
   392 ;;		Nothing
   393 ;; This function is called by:
   394 ;;		_main
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398                           
   399                           ;psect for function _SPI_Write
   400  079E                     _SPI_Write:
   401                           
   402                           ;incstack = 0
   403                           ; Regs used in _SPI_Write: [wreg]
   404                           ;SPI_Write@incoming stored from wreg
   405  079E  00F0               	movwf	SPI_Write@incoming
   406  079F                     l681:
   407                           
   408                           ;Slave.c: 29: void SPI_Write(char incoming);Slave.c: 30: {;Slave.c: 31:     SSPBUF = inc
      +                          oming;
   409  079F  0870               	movf	SPI_Write@incoming,w
   410  07A0  1283               	bcf	3,5	;RP0=0, select bank0
   411  07A1  1303               	bcf	3,6	;RP1=0, select bank0
   412  07A2  0093               	movwf	19	;volatile
   413  07A3                     l19:
   414  07A3  0008               	return
   415  07A4                     __end_of_SPI_Write:
   416                           
   417                           	psect	text2
   418  07A4                     __ptext2:	
   419 ;; *************** function _SPI_Ready2Read *****************
   420 ;; Defined at:
   421 ;;		line 22 in file "Slave.c"
   422 ;; Parameters:    Size  Location     Type
   423 ;;		None
   424 ;; Auto vars:     Size  Location     Type
   425 ;;		None
   426 ;; Return value:  Size  Location     Type
   427 ;;                  1    wreg      unsigned char 
   428 ;; Registers used:
   429 ;;		wreg
   430 ;; Tracked objects:
   431 ;;		On entry : 0/0
   432 ;;		On exit  : 0/0
   433 ;;		Unchanged: 0/0
   434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   435 ;;      Params:         0       0       0       0       0
   436 ;;      Locals:         0       0       0       0       0
   437 ;;      Temps:          0       0       0       0       0
   438 ;;      Totals:         0       0       0       0       0
   439 ;;Total ram usage:        0 bytes
   440 ;; Hardware stack levels used:    1
   441 ;; This function calls:
   442 ;;		Nothing
   443 ;; This function is called by:
   444 ;;		_main
   445 ;; This function uses a non-reentrant model
   446 ;;
   447                           
   448                           
   449                           ;psect for function _SPI_Ready2Read
   450  07A4                     _SPI_Ready2Read:
   451  07A4                     l669:	
   452                           ;incstack = 0
   453                           ; Regs used in _SPI_Ready2Read: [wreg]
   454                           
   455                           
   456                           ;Slave.c: 24:     if (SSPSTAT & 0b00000001)
   457  07A4  1683               	bsf	3,5	;RP0=1, select bank1
   458  07A5  1303               	bcf	3,6	;RP1=0, select bank1
   459  07A6  1C14               	btfss	20,0	;volatile
   460  07A7  2FA9               	goto	u41
   461  07A8  2FAA               	goto	u40
   462  07A9                     u41:
   463  07A9  2FAC               	goto	l677
   464  07AA                     u40:
   465  07AA                     l671:
   466                           
   467                           ;Slave.c: 25:         return 1;
   468  07AA  3001               	movlw	1
   469  07AB  2FAD               	goto	l15
   470  07AC                     l677:
   471                           
   472                           ;Slave.c: 27:         return 0;
   473  07AC  3000               	movlw	0
   474  07AD                     l15:
   475  07AD  0008               	return
   476  07AE                     __end_of_SPI_Ready2Read:
   477                           
   478                           	psect	text3
   479  07AE                     __ptext3:	
   480 ;; *************** function _SPI_Initialize_Slave *****************
   481 ;; Defined at:
   482 ;;		line 11 in file "Slave.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;		None
   485 ;; Auto vars:     Size  Location     Type
   486 ;;		None
   487 ;; Return value:  Size  Location     Type
   488 ;;                  1    wreg      void 
   489 ;; Registers used:
   490 ;;		wreg, status,2
   491 ;; Tracked objects:
   492 ;;		On entry : 0/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   496 ;;      Params:         0       0       0       0       0
   497 ;;      Locals:         0       0       0       0       0
   498 ;;      Temps:          0       0       0       0       0
   499 ;;      Totals:         0       0       0       0       0
   500 ;;Total ram usage:        0 bytes
   501 ;; Hardware stack levels used:    1
   502 ;; This function calls:
   503 ;;		Nothing
   504 ;; This function is called by:
   505 ;;		_main
   506 ;; This function uses a non-reentrant model
   507 ;;
   508                           
   509                           
   510                           ;psect for function _SPI_Initialize_Slave
   511  07AE                     _SPI_Initialize_Slave:
   512  07AE                     l661:	
   513                           ;incstack = 0
   514                           ; Regs used in _SPI_Initialize_Slave: [wreg+status,2]
   515                           
   516                           
   517                           ;Slave.c: 15:      TRISCbits.TRISC5=0;
   518  07AE  1683               	bsf	3,5	;RP0=1, select bank1
   519  07AF  1303               	bcf	3,6	;RP1=0, select bank1
   520  07B0  1287               	bcf	7,5	;volatile
   521                           
   522                           ;Slave.c: 16:      TRISCbits.TRISC4=1;
   523  07B1  1607               	bsf	7,4	;volatile
   524  07B2                     l663:
   525                           
   526                           ;Slave.c: 17:      SSPSTAT = 0b00000000;
   527  07B2  0194               	clrf	20	;volatile
   528  07B3                     l665:
   529                           
   530                           ;Slave.c: 18:      SSPCON = 0b00100000;
   531  07B3  3020               	movlw	32
   532  07B4  1283               	bcf	3,5	;RP0=0, select bank0
   533  07B5  1303               	bcf	3,6	;RP1=0, select bank0
   534  07B6  0094               	movwf	20	;volatile
   535  07B7                     l667:
   536                           
   537                           ;Slave.c: 19:      TRISCbits.TRISC3 = 1;
   538  07B7  1683               	bsf	3,5	;RP0=1, select bank1
   539  07B8  1303               	bcf	3,6	;RP1=0, select bank1
   540  07B9  1587               	bsf	7,3	;volatile
   541  07BA                     l11:
   542  07BA  0008               	return
   543  07BB                     __end_of_SPI_Initialize_Slave:
   544  007E                     btemp	set	126	;btemp
   545  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80     21      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    22      4     185
                                              1 COMMON     5     1      4
                                              0 BANK0     21    21      0
               _SPI_Initialize_Slave
                     _SPI_Ready2Read
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (1) _SPI_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_Ready2Read                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Initialize_Slave                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Initialize_Slave
   _SPI_Ready2Read
   _SPI_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     15      15       5       26.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Aug 02 12:03:49 2021

                           l11 07BA                             l15 07AD                             l19 07A3  
                           u40 07AA                             u41 07A9                             u50 07D8  
                           u51 07D7                             u60 07F7                             u61 07F6  
                          l661 07AE                            l663 07B2                            l671 07AA  
                          l665 07B3                            l681 079F                            l667 07B7  
                          l691 07CE                            l683 07BB                            l677 07AC  
                          l669 07A4                            l693 07D8                            l685 07C0  
                          l695 07E2                            l687 07C6                            l697 07EB  
                          l689 07CA                            l699 07F7                    main@Rx_data 0020  
                  main@Tx_data 002A                            fsr0 0004                            indf 0000  
                         _main 07BB                           btemp 007E         __end_of_SPI_Ready2Read 07AE  
                         start 0000                          ?_main 0071   __end_of_SPI_Initialize_Slave 07BB  
                        main@i 0034                          status 0003                          wtemp0 007E  
           __size_of_SPI_Write 0006                ?_SPI_Ready2Read 0070                __initialization 07FC  
                 __end_of_main 07FC                         ??_main 0075                         _SSPCON 0014  
                       _SSPBUF 0013              __end_of_SPI_Write 07A4        __end_of__initialization 07FC  
         _SPI_Initialize_Slave 07AE                 __pcstackCOMMON 0070          ?_SPI_Initialize_Slave 0070  
                   __pmaintext 07BB              SPI_Write@incoming 0070                        _SSPSTAT 0094  
             ??_SPI_Ready2Read 0070                        __ptext1 079E                        __ptext2 07A4  
                      __ptext3 07AE           end_of_initialization 07FC         ??_SPI_Initialize_Slave 0070  
                    _TRISCbits 0087                      _SPI_Write 079E            start_initialization 07FC  
                   ?_SPI_Write 0070                      ___latbits 0002                  __pcstackBANK0 0020  
                  ??_SPI_Write 0070  __size_of_SPI_Initialize_Slave 000D        __size_of_SPI_Ready2Read 000A  
                __size_of_main 0041                       main@argc 0071                       main@argv 0073  
               _SPI_Ready2Read 07A4  
