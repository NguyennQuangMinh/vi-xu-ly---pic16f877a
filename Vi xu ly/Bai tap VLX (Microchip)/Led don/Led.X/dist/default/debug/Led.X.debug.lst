

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Fri Sep 10 08:02:31 2021

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.30
    15                           ; Generated 26/08/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0006                     _PORTB	set	6
   170  0006                     _PORTBbits	set	6
   171  0001                     _TMR0	set	1
   172  005A                     _TMR0IF	set	90
   173  005F                     _GIE	set	95
   174  005D                     _TMR0IE	set	93
   175  0086                     _TRISB	set	134
   176  040A                     _PS2	set	1034
   177  0409                     _PS1	set	1033
   178  0408                     _PS0	set	1032
   179  040B                     _PSA	set	1035
   180  040D                     _T0CS	set	1037
   181                           
   182                           	psect	cinit
   183  0011                     start_initialization:	
   184                           ; #config settings
   185                           
   186  0011                     __initialization:
   187                           
   188                           ; Clear objects allocated to COMMON
   189  0011  01F0               	clrf	__pbssCOMMON& (0+127)
   190  0012  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   191  0013  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   192  0014  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   193  0015                     end_of_initialization:	
   194                           ;End of C runtime variable initialization code
   195                           
   196  0015                     __end_of__initialization:
   197  0015  0183               	clrf	3
   198  0016  120A  118A  2873   	ljmp	_main	;jump to C main() function
   199                           
   200                           	psect	bssCOMMON
   201  0070                     __pbssCOMMON:
   202  0070                     _buoc:
   203  0070                     	ds	2
   204  0072                     _count_t0:
   205  0072                     	ds	2
   206                           
   207                           	psect	cstackCOMMON
   208  0074                     __pcstackCOMMON:
   209  0074                     ?_timer0_initialize:
   210  0074                     ?_Count_Up:	
   211                           ; 1 bytes @ 0x0
   212                           
   213  0074                     ??_Count_Up:	
   214                           ; 1 bytes @ 0x0
   215                           
   216  0074                     ?_main:	
   217                           ; 1 bytes @ 0x0
   218                           
   219                           
   220                           ; 2 bytes @ 0x0
   221  0074                     	ds	4
   222  0078                     ??_timer0_initialize:
   223  0078                     ??_main:	
   224                           ; 1 bytes @ 0x4
   225                           
   226                           
   227                           	psect	maintext
   228  0073                     __pmaintext:	
   229                           ; 1 bytes @ 0x4
   230 ;;
   231 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   232 ;;
   233 ;; *************** function _main *****************
   234 ;; Defined at:
   235 ;;		line 69 in file "Led.c"
   236 ;; Parameters:    Size  Location     Type
   237 ;;		None
   238 ;; Auto vars:     Size  Location     Type
   239 ;;		None
   240 ;; Return value:  Size  Location     Type
   241 ;;                  2   51[None  ] int 
   242 ;; Registers used:
   243 ;;		wreg, status,2, status,0, pclath, cstack
   244 ;; Tracked objects:
   245 ;;		On entry : B00/0
   246 ;;		On exit  : 0/0
   247 ;;		Unchanged: 0/0
   248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   249 ;;      Params:         0       0       0       0       0
   250 ;;      Locals:         0       0       0       0       0
   251 ;;      Temps:          0       0       0       0       0
   252 ;;      Totals:         0       0       0       0       0
   253 ;;Total ram usage:        0 bytes
   254 ;; Hardware stack levels required when called:    2
   255 ;; This function calls:
   256 ;;		_timer0_initialize
   257 ;; This function is called by:
   258 ;;		Startup code after reset
   259 ;; This function uses a non-reentrant model
   260 ;;
   261                           
   262                           
   263                           ;psect for function _main
   264  0073                     _main:
   265  0073                     l681:	
   266                           ;incstack = 0
   267                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   268                           
   269  0073  1683               	bsf	3,5	;RP0=1, select bank1
   270  0074  1303               	bcf	3,6	;RP1=0, select bank1
   271  0075  0186               	clrf	6	;volatile
   272  0076                     l683:
   273  0076  30FF               	movlw	255
   274  0077  1283               	bcf	3,5	;RP0=0, select bank0
   275  0078  1303               	bcf	3,6	;RP1=0, select bank0
   276  0079  0086               	movwf	6	;volatile
   277  007A                     l685:
   278  007A  120A  118A  2083  120A  118A  	fcall	_timer0_initialize
   279  007F                     l52:
   280  007F                     l53:
   281  007F  287F               	goto	l52
   282  0080  120A  118A  280E   	ljmp	start
   283  0083                     __end_of_main:
   284                           
   285                           	psect	text1
   286  0083                     __ptext1:	
   287 ;; *************** function _timer0_initialize *****************
   288 ;; Defined at:
   289 ;;		line 27 in file "Led.c"
   290 ;; Parameters:    Size  Location     Type
   291 ;;		None
   292 ;; Auto vars:     Size  Location     Type
   293 ;;		None
   294 ;; Return value:  Size  Location     Type
   295 ;;                  1    wreg      void 
   296 ;; Registers used:
   297 ;;		wreg
   298 ;; Tracked objects:
   299 ;;		On entry : 0/0
   300 ;;		On exit  : 0/0
   301 ;;		Unchanged: 0/0
   302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   303 ;;      Params:         0       0       0       0       0
   304 ;;      Locals:         0       0       0       0       0
   305 ;;      Temps:          0       0       0       0       0
   306 ;;      Totals:         0       0       0       0       0
   307 ;;Total ram usage:        0 bytes
   308 ;; Hardware stack levels used:    1
   309 ;; Hardware stack levels required when called:    1
   310 ;; This function calls:
   311 ;;		Nothing
   312 ;; This function is called by:
   313 ;;		_main
   314 ;; This function uses a non-reentrant model
   315 ;;
   316                           
   317                           
   318                           ;psect for function _timer0_initialize
   319  0083                     _timer0_initialize:
   320  0083                     l647:	
   321                           ;incstack = 0
   322                           ; Regs used in _timer0_initialize: [wreg]
   323                           
   324                           
   325                           ;Led.c: 29:               buoc++;
   326  0083  1683               	bsf	3,5	;RP0=1, select bank1
   327  0084  1303               	bcf	3,6	;RP1=0, select bank1
   328  0085  1281               	bcf	1,5	;volatile
   329                           
   330                           ;Led.c: 30:               switch (buoc)
   331  0086  1181               	bcf	1,3	;volatile
   332                           
   333                           ;Led.c: 31:               {
   334  0087  1401               	bsf	1,0	;volatile
   335                           
   336                           ;Led.c: 32:                case 1: PORTBbits.RB0=0;
   337  0088  1481               	bsf	1,1	;volatile
   338                           
   339                           ;Led.c: 33:                            break;
   340  0089  1101               	bcf	1,2	;volatile
   341  008A                     l649:
   342                           
   343                           ;Led.c: 34:                case 2: PORTBbits.RB1=0;
   344  008A  3005               	movlw	5
   345  008B  1283               	bcf	3,5	;RP0=0, select bank0
   346  008C  1303               	bcf	3,6	;RP1=0, select bank0
   347  008D  0081               	movwf	1	;volatile
   348  008E                     l651:
   349                           
   350                           ;Led.c: 35:                            break;
   351  008E  168B               	bsf	11,5	;volatile
   352  008F                     l653:
   353                           
   354                           ;Led.c: 36:                case 3: PORTBbits.RB2=0;
   355  008F  178B               	bsf	11,7	;volatile
   356  0090                     l31:
   357  0090  0008               	return
   358  0091                     __end_of_timer0_initialize:
   359                           
   360                           	psect	text2
   361  0019                     __ptext2:	
   362 ;; *************** function _Count_Up *****************
   363 ;; Defined at:
   364 ;;		line 39 in file "Led.c"
   365 ;; Parameters:    Size  Location     Type
   366 ;;		None
   367 ;; Auto vars:     Size  Location     Type
   368 ;;		None
   369 ;; Return value:  Size  Location     Type
   370 ;;                  1    wreg      void 
   371 ;; Registers used:
   372 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   373 ;; Tracked objects:
   374 ;;		On entry : 0/0
   375 ;;		On exit  : 0/0
   376 ;;		Unchanged: 0/0
   377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   378 ;;      Params:         0       0       0       0       0
   379 ;;      Locals:         0       0       0       0       0
   380 ;;      Temps:          4       0       0       0       0
   381 ;;      Totals:         4       0       0       0       0
   382 ;;Total ram usage:        4 bytes
   383 ;; Hardware stack levels used:    1
   384 ;; This function calls:
   385 ;;		Nothing
   386 ;; This function is called by:
   387 ;;		Interrupt level 1
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           
   391                           
   392                           ;psect for function _Count_Up
   393  0019                     _Count_Up:
   394  0019                     i1l655:
   395                           
   396                           ;Led.c: 41:                case 6: PORTB|=0x0f;
   397  0019  1E8B               	btfss	11,5	;volatile
   398  001A  281C               	goto	u1_21
   399  001B  281D               	goto	u1_20
   400  001C                     u1_21:
   401  001C  286A               	goto	i1l47
   402  001D                     u1_20:
   403  001D                     i1l657:
   404  001D  1D0B               	btfss	11,2	;volatile
   405  001E  2820               	goto	u2_21
   406  001F  2821               	goto	u2_20
   407  0020                     u2_21:
   408  0020  286A               	goto	i1l47
   409  0021                     u2_20:
   410  0021                     i1l659:
   411                           
   412                           ;Led.c: 42:                            break;;Led.c: 43:                case 7: buoc=0;
   413  0021  3005               	movlw	5
   414  0022  1283               	bcf	3,5	;RP0=0, select bank0
   415  0023  1303               	bcf	3,6	;RP1=0, select bank0
   416  0024  0081               	movwf	1	;volatile
   417  0025                     i1l661:
   418                           
   419                           ;Led.c: 44:               }
   420  0025  110B               	bcf	11,2	;volatile
   421                           
   422                           ;Led.c: 45:          }
   423  0026  3001               	movlw	1
   424  0027  07F2               	addwf	_count_t0,f
   425  0028  1803               	skipnc
   426  0029  0AF3               	incf	_count_t0+1,f
   427  002A  3000               	movlw	0
   428  002B  07F3               	addwf	_count_t0+1,f
   429  002C                     i1l663:
   430                           
   431                           ;Led.c: 46:   }
   432  002C  30E8               	movlw	232
   433  002D  0672               	xorwf	_count_t0,w
   434  002E  3003               	movlw	3
   435  002F  1903               	skipnz
   436  0030  0673               	xorwf	_count_t0+1,w
   437  0031  1D03               	btfss	3,2
   438  0032  2834               	goto	u3_21
   439  0033  2835               	goto	u3_20
   440  0034                     u3_21:
   441  0034  286A               	goto	i1l47
   442  0035                     u3_20:
   443  0035                     i1l665:
   444                           
   445                           ;Led.c: 47: };Led.c: 48: 
   446  0035  01F2               	clrf	_count_t0
   447  0036  01F3               	clrf	_count_t0+1
   448  0037                     i1l667:
   449                           
   450                           ;Led.c: 49: int main ()
   451  0037  3001               	movlw	1
   452  0038  07F0               	addwf	_buoc,f
   453  0039  1803               	skipnc
   454  003A  0AF1               	incf	_buoc+1,f
   455  003B  3000               	movlw	0
   456  003C  07F1               	addwf	_buoc+1,f
   457                           
   458                           ;Led.c: 50: {
   459  003D  284E               	goto	i1l673
   460  003E                     i1l39:	
   461                           ;Led.c: 51:   TRISB=0x00;;Led.c: 52:   PORTB=0xff;
   462                           
   463  003E  1006               	bcf	6,0	;volatile
   464                           
   465                           ;Led.c: 53: 
   466  003F  286A               	goto	i1l47
   467  0040                     i1l41:	
   468                           ;Led.c: 54: timer0_initialize () ;
   469                           
   470  0040  1086               	bcf	6,1	;volatile
   471                           
   472                           ;Led.c: 55: while(1)
   473  0041  286A               	goto	i1l47
   474  0042                     i1l42:	
   475                           ;Led.c: 56:    {
   476                           
   477  0042  1106               	bcf	6,2	;volatile
   478                           
   479                           ;Led.c: 57:    }
   480  0043  286A               	goto	i1l47
   481  0044                     i1l43:	
   482                           ;Led.c: 58: }
   483                           
   484  0044  1186               	bcf	6,3	;volatile
   485  0045  286A               	goto	i1l47
   486  0046                     i1l669:
   487  0046  300F               	movlw	15
   488  0047  00F4               	movwf	??_Count_Up
   489  0048  0874               	movf	??_Count_Up,w
   490  0049  0486               	iorwf	6,f	;volatile
   491  004A  286A               	goto	i1l47
   492  004B                     i1l671:
   493  004B  01F0               	clrf	_buoc
   494  004C  01F1               	clrf	_buoc+1
   495  004D  286A               	goto	i1l47
   496  004E                     i1l673:
   497                           
   498                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   499                           ; Switch size 1, requested type "simple"
   500                           ; Number of cases is 1, Range of values is 0 to 0
   501                           ; switch strategies available:
   502                           ; Name         Instructions Cycles
   503                           ; simple_byte            4     3 (average)
   504                           ; direct_byte           11     8 (fixed)
   505                           ; jumptable            260     6 (fixed)
   506                           ;	Chosen strategy is simple_byte
   507  004E  0871               	movf	_buoc+1,w
   508  004F  3A00               	xorlw	0	; case 0
   509  0050  1903               	skipnz
   510  0051  2853               	goto	i1l717
   511  0052  286A               	goto	i1l47
   512  0053                     i1l717:
   513                           
   514                           ; Switch size 1, requested type "simple"
   515                           ; Number of cases is 7, Range of values is 1 to 7
   516                           ; switch strategies available:
   517                           ; Name         Instructions Cycles
   518                           ; simple_byte           22    12 (average)
   519                           ; direct_byte           32    11 (fixed)
   520                           ; jumptable            263     9 (fixed)
   521                           ;	Chosen strategy is simple_byte
   522  0053  0870               	movf	_buoc,w
   523  0054  3A01               	xorlw	1	; case 1
   524  0055  1903               	skipnz
   525  0056  283E               	goto	i1l39
   526  0057  3A03               	xorlw	3	; case 2
   527  0058  1903               	skipnz
   528  0059  2840               	goto	i1l41
   529  005A  3A01               	xorlw	1	; case 3
   530  005B  1903               	skipnz
   531  005C  2842               	goto	i1l42
   532  005D  3A07               	xorlw	7	; case 4
   533  005E  1903               	skipnz
   534  005F  2844               	goto	i1l43
   535  0060  3A01               	xorlw	1	; case 5
   536  0061  1903               	skipnz
   537  0062  2846               	goto	i1l669
   538  0063  3A03               	xorlw	3	; case 6
   539  0064  1903               	skipnz
   540  0065  2846               	goto	i1l669
   541  0066  3A01               	xorlw	1	; case 7
   542  0067  1903               	skipnz
   543  0068  284B               	goto	i1l671
   544  0069  286A               	goto	i1l47
   545  006A                     i1l47:
   546  006A  0877               	movf	??_Count_Up+3,w
   547  006B  008A               	movwf	10
   548  006C  0876               	movf	??_Count_Up+2,w
   549  006D  0084               	movwf	4
   550  006E  0E75               	swapf	??_Count_Up+1,w
   551  006F  0083               	movwf	3
   552  0070  0EFE               	swapf	btemp,f
   553  0071  0E7E               	swapf	btemp,w
   554  0072  0009               	retfie
   555  0073                     __end_of_Count_Up:
   556  007E                     btemp	set	126	;btemp
   557  007E                     wtemp0	set	126
   558                           
   559                           	psect	intentry
   560  0004                     __pintentry:	
   561                           ;incstack = 0
   562                           ; Regs used in _Count_Up: [wreg-fsr0h+status,2+status,0]
   563                           
   564  0004                     interrupt_function:
   565  007E                     saved_w	set	btemp
   566  0004  00FE               	movwf	btemp
   567  0005  0E03               	swapf	3,w
   568  0006  00F5               	movwf	??_Count_Up+1
   569  0007  0804               	movf	4,w
   570  0008  00F6               	movwf	??_Count_Up+2
   571  0009  080A               	movf	10,w
   572  000A  00F7               	movwf	??_Count_Up+3
   573  000B  120A  118A  2819   	ljmp	_Count_Up
   574                           
   575                           	psect	config
   576                           
   577                           ;Config register CONFIG @ 0x2007
   578                           ;	Oscillator Selection bits
   579                           ;	FOSC = XT, XT oscillator
   580                           ;	Watchdog Timer Enable bit
   581                           ;	WDTE = OFF, WDT disabled
   582                           ;	Power-up Timer Enable bit
   583                           ;	PWRTE = ON, PWRT enabled
   584                           ;	Brown-out Reset Enable bit
   585                           ;	BOREN = ON, BOR enabled
   586                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   587                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   588                           ;	Data EEPROM Memory Code Protection bit
   589                           ;	CPD = OFF, Data EEPROM code protection off
   590                           ;	Flash Program Memory Write Enable bits
   591                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   592                           ;	In-Circuit Debugger Mode bit
   593                           ;	DEBUG = 0x1, unprogrammed default
   594                           ;	Flash Program Memory Code Protection bit
   595                           ;	CP = OFF, Code protection off
   596  2007                     	org	8199
   597  2007  3FF1               	dw	16369

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Count_Up in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Count_Up in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Count_Up in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Count_Up in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Count_Up in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                  _timer0_initialize
 ---------------------------------------------------------------------------------
 (1) _timer0_initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Count_Up                                             4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _timer0_initialize

 _Count_Up (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Fri Sep 10 08:02:31 2021

                        l31 0090                          l52 007F                          l53 007F  
                       l651 008E                         l653 008F                         l647 0083  
                       l649 008A                         l681 0073                         l683 0076  
                       l685 007A                         _GIE 005F                         _PS0 0408  
                       _PS1 0409                         _PS2 040A                         _PSA 040B  
                       fsr0 0004                        _T0CS 040D                        i1l41 0040  
                      i1l42 0042                        i1l43 0044                        i1l39 003E  
                      i1l47 006A                        _TMR0 0001                        u1_20 001D  
                      u1_21 001C                        u2_20 0021                        u2_21 0020  
                      u3_20 0035                        u3_21 0034                        _buoc 0070  
                      _main 0073                        btemp 007E                        start 000E  
                     ?_main 0074                       i1l717 0053                       i1l661 0025  
                     i1l671 004B                       i1l663 002C                       i1l655 0019  
                     i1l673 004E                       i1l665 0035                       i1l657 001D  
                     i1l667 0037                       i1l659 0021                       i1l669 0046  
                     _PORTB 0006                       _TRISB 0086                       pclath 000A  
                     status 0003                       wtemp0 007E             __initialization 0011  
              __end_of_main 0083            __end_of_Count_Up 0073                      ??_main 0078  
                    _TMR0IE 005D                      _TMR0IF 005A                      saved_w 007E  
   __end_of__initialization 0015              __pcstackCOMMON 0074                   ?_Count_Up 0074  
                __pmaintext 0073                  __pintentry 0004           _timer0_initialize 0083  
        ?_timer0_initialize 0074         ??_timer0_initialize 0078                  ??_Count_Up 0074  
 __end_of_timer0_initialize 0091                     __ptext1 0083                     __ptext2 0019  
      end_of_initialization 0015                   _PORTBbits 0006  __size_of_timer0_initialize 000E  
       start_initialization 0011           __size_of_Count_Up 005A                 __pbssCOMMON 0070  
                 ___latbits 0002           interrupt_function 0004                    _Count_Up 0019  
                  _count_t0 0072               __size_of_main 0010                    intlevel1 0000  
