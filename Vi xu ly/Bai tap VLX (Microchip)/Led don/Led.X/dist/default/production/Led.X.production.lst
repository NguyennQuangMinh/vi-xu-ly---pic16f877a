

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Fri Oct 08 09:33:18 2021

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.30
    22                           ; Generated 26/08/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F877A Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  010F                     	;# 
   114  018C                     	;# 
   115  018D                     	;# 
   116  0000                     	;# 
   117  0001                     	;# 
   118  0002                     	;# 
   119  0003                     	;# 
   120  0004                     	;# 
   121  0005                     	;# 
   122  0006                     	;# 
   123  0007                     	;# 
   124  0008                     	;# 
   125  0009                     	;# 
   126  000A                     	;# 
   127  000B                     	;# 
   128  000C                     	;# 
   129  000D                     	;# 
   130  000E                     	;# 
   131  000E                     	;# 
   132  000F                     	;# 
   133  0010                     	;# 
   134  0011                     	;# 
   135  0012                     	;# 
   136  0013                     	;# 
   137  0014                     	;# 
   138  0015                     	;# 
   139  0015                     	;# 
   140  0016                     	;# 
   141  0017                     	;# 
   142  0018                     	;# 
   143  0019                     	;# 
   144  001A                     	;# 
   145  001B                     	;# 
   146  001B                     	;# 
   147  001C                     	;# 
   148  001D                     	;# 
   149  001E                     	;# 
   150  001F                     	;# 
   151  0081                     	;# 
   152  0085                     	;# 
   153  0086                     	;# 
   154  0087                     	;# 
   155  0088                     	;# 
   156  0089                     	;# 
   157  008C                     	;# 
   158  008D                     	;# 
   159  008E                     	;# 
   160  0091                     	;# 
   161  0092                     	;# 
   162  0093                     	;# 
   163  0094                     	;# 
   164  0098                     	;# 
   165  0099                     	;# 
   166  009C                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  010C                     	;# 
   171  010D                     	;# 
   172  010E                     	;# 
   173  010F                     	;# 
   174  018C                     	;# 
   175  018D                     	;# 
   176                           
   177                           	psect	idataBANK0
   178  0250                     __pidataBANK0:
   179                           
   180                           ;initializer for _ma
   181  0250  34C0               	retlw	192
   182  0251  34F9               	retlw	249
   183  0252  34A4               	retlw	164
   184  0253  34B0               	retlw	176
   185  0254  3499               	retlw	153
   186  0255  3492               	retlw	146
   187  0256  3482               	retlw	130
   188  0257  34F8               	retlw	248
   189  0258  3480               	retlw	128
   190  0259  3490               	retlw	144
   191  0006                     _PORTBbits	set	6
   192  0005                     _PORTAbits	set	5
   193  0008                     _PORTD	set	8
   194  0001                     _TMR0	set	1
   195  005A                     _TMR0IF	set	90
   196  005F                     _GIE	set	95
   197  005D                     _TMR0IE	set	93
   198  0088                     _TRISD	set	136
   199  0085                     _TRISAbits	set	133
   200  009F                     _ADCON1	set	159
   201  040A                     _PS2	set	1034
   202  0409                     _PS1	set	1033
   203  0408                     _PS0	set	1032
   204  040B                     _PSA	set	1035
   205  040D                     _T0CS	set	1037
   206                           
   207                           	psect	cinit
   208  0011                     start_initialization:	
   209                           ; #config settings
   210                           
   211  0011                     __initialization:
   212                           
   213                           ; Initialize objects allocated to BANK0
   214  0011  1383               	bcf	3,7	;select IRP bank0
   215  0012  302A               	movlw	low (__pdataBANK0+10)
   216  0013  00FD               	movwf	btemp+-1
   217  0014  3002               	movlw	high __pidataBANK0
   218  0015  00FE               	movwf	btemp
   219  0016  3050               	movlw	low __pidataBANK0
   220  0017  00FF               	movwf	btemp+1
   221  0018  3020               	movlw	low __pdataBANK0
   222  0019  0084               	movwf	4
   223  001A  120A  118A  2233  120A  118A  	fcall	init_ram0
   224                           
   225                           ; Clear objects allocated to BANK0
   226  001F  01AA               	clrf	__pbssBANK0& (0+127)
   227  0020  01AB               	clrf	(__pbssBANK0+1)& (0+127)
   228  0021  01AC               	clrf	(__pbssBANK0+2)& (0+127)
   229  0022  01AD               	clrf	(__pbssBANK0+3)& (0+127)
   230  0023  01AE               	clrf	(__pbssBANK0+4)& (0+127)
   231  0024  01AF               	clrf	(__pbssBANK0+5)& (0+127)
   232  0025  01B0               	clrf	(__pbssBANK0+6)& (0+127)
   233  0026  01B1               	clrf	(__pbssBANK0+7)& (0+127)
   234  0027  01B2               	clrf	(__pbssBANK0+8)& (0+127)
   235                           
   236                           ; Clear objects allocated to COMMON
   237  0028  01F8               	clrf	__pbssCOMMON& (0+127)
   238  0029  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   239  002A  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   240  002B                     end_of_initialization:	
   241                           ;End of C runtime variable initialization code
   242                           
   243  002B                     __end_of__initialization:
   244  002B  0183               	clrf	3
   245  002C  120A  118A  282F   	ljmp	_main	;jump to C main() function
   246                           
   247                           	psect	bssCOMMON
   248  0078                     __pbssCOMMON:
   249  0078                     _j:
   250  0078                     	ds	2
   251  007A                     _n:
   252  007A                     	ds	1
   253                           
   254                           	psect	bssBANK0
   255  002A                     __pbssBANK0:
   256  002A                     _count_t0:
   257  002A                     	ds	2
   258  002C                     _counter:
   259  002C                     	ds	2
   260  002E                     _num:
   261  002E                     	ds	2
   262  0030                     _dv:
   263  0030                     	ds	1
   264  0031                     _c:
   265  0031                     	ds	1
   266  0032                     _t:
   267  0032                     	ds	1
   268                           
   269                           	psect	dataBANK0
   270  0020                     __pdataBANK0:
   271  0020                     _ma:
   272  0020                     	ds	10
   273                           
   274                           	psect	inittext
   275  022F                     init_fetch0:	
   276                           ;	Called with low address in FSR and high address in W
   277                           
   278  022F  087E               	movf	btemp,w
   279  0230  008A               	movwf	10
   280  0231  087F               	movf	btemp+1,w
   281  0232  0082               	movwf	2
   282  0233                     init_ram0:	
   283                           ;Called with:
   284                           ;	high address of idata address in btemp 
   285                           ;	low address of idata address in btemp+1 
   286                           ;	low address of data in FSR
   287                           ;	high address + 1 of data in btemp-1
   288                           
   289  0233  120A  118A  222F  120A  118A  	fcall	init_fetch0
   290  0238  0080               	movwf	0
   291  0239  0A84               	incf	4,f
   292  023A  0804               	movf	4,w
   293  023B  067D               	xorwf	btemp+-1,w
   294  023C  1903               	btfsc	3,2
   295  023D  3400               	retlw	0
   296  023E  0AFF               	incf	btemp+1,f
   297  023F  1903               	btfsc	3,2
   298  0240  0AFE               	incf	btemp,f
   299  0241  2A33               	goto	init_ram0
   300                           
   301                           	psect	cstackCOMMON
   302  0070                     __pcstackCOMMON:
   303  0070                     ?_timer0_initialize:
   304  0070                     ?_Count_Up:	
   305                           ; 1 bytes @ 0x0
   306                           
   307  0070                     ??_Count_Up:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ?_main:	
   311                           ; 1 bytes @ 0x0
   312                           
   313                           
   314                           ; 2 bytes @ 0x0
   315  0070                     	ds	3
   316  0073                     ??_timer0_initialize:
   317  0073                     ?___lwdiv:	
   318                           ; 1 bytes @ 0x3
   319                           
   320  0073                     ?___lwmod:	
   321                           ; 2 bytes @ 0x3
   322                           
   323  0073                     ___lwdiv@divisor:	
   324                           ; 2 bytes @ 0x3
   325                           
   326  0073                     ___lwmod@divisor:	
   327                           ; 2 bytes @ 0x3
   328                           
   329                           
   330                           ; 2 bytes @ 0x3
   331  0073                     	ds	2
   332  0075                     ___lwdiv@dividend:
   333  0075                     ___lwmod@dividend:	
   334                           ; 2 bytes @ 0x5
   335                           
   336                           
   337                           ; 2 bytes @ 0x5
   338  0075                     	ds	2
   339  0077                     ??___lwdiv:
   340  0077                     ??___lwmod:	
   341                           ; 1 bytes @ 0x7
   342                           
   343                           
   344                           ; 1 bytes @ 0x7
   345  0077                     	ds	1
   346                           
   347                           	psect	cstackBANK0
   348  0033                     __pcstackBANK0:
   349  0033                     ___lwdiv@counter:
   350  0033                     ___lwmod@counter:	
   351                           ; 1 bytes @ 0x0
   352                           
   353                           
   354                           ; 1 bytes @ 0x0
   355  0033                     	ds	1
   356  0034                     ___lwdiv@quotient:
   357                           
   358                           ; 2 bytes @ 0x1
   359  0034                     	ds	2
   360  0036                     ??_main:
   361                           
   362                           ; 1 bytes @ 0x3
   363  0036                     	ds	1
   364                           
   365                           	psect	maintext
   366  002F                     __pmaintext:	
   367 ;;
   368 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   369 ;;
   370 ;; *************** function _main *****************
   371 ;; Defined at:
   372 ;;		line 89 in file "Vinh.c"
   373 ;; Parameters:    Size  Location     Type
   374 ;;		None
   375 ;; Auto vars:     Size  Location     Type
   376 ;;		None
   377 ;; Return value:  Size  Location     Type
   378 ;;                  2   67[None  ] int 
   379 ;; Registers used:
   380 ;;		wreg, status,2, status,0, pclath, cstack
   381 ;; Tracked objects:
   382 ;;		On entry : B00/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   386 ;;      Params:         0       0       0       0       0
   387 ;;      Locals:         0       0       0       0       0
   388 ;;      Temps:          0       1       0       0       0
   389 ;;      Totals:         0       1       0       0       0
   390 ;;Total ram usage:        1 bytes
   391 ;; Hardware stack levels required when called:    2
   392 ;; This function calls:
   393 ;;		___lwdiv
   394 ;;		___lwmod
   395 ;;		_timer0_initialize
   396 ;; This function is called by:
   397 ;;		Startup code after reset
   398 ;; This function uses a non-reentrant model
   399 ;;
   400                           
   401                           
   402                           ;psect for function _main
   403  002F                     _main:
   404  002F                     l1065:	
   405                           ;incstack = 0
   406                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   407                           
   408                           
   409                           ;Vinh.c: 91:    ADCON1 = 0x06;
   410  002F  3006               	movlw	6
   411  0030  1683               	bsf	3,5	;RP0=1, select bank1
   412  0031  1303               	bcf	3,6	;RP1=0, select bank1
   413  0032  009F               	movwf	31	;volatile
   414  0033                     l1067:
   415                           
   416                           ;Vinh.c: 92: TRISAbits.TRISA0=0;
   417  0033  1005               	bcf	5,0	;volatile
   418  0034                     l1069:
   419                           
   420                           ;Vinh.c: 93: TRISAbits.TRISA1=0;
   421  0034  1085               	bcf	5,1	;volatile
   422  0035                     l1071:
   423                           
   424                           ;Vinh.c: 94: TRISAbits.TRISA2=0;
   425  0035  1105               	bcf	5,2	;volatile
   426  0036                     l1073:
   427                           
   428                           ;Vinh.c: 95: TRISAbits.TRISA3=0;
   429  0036  1185               	bcf	5,3	;volatile
   430  0037                     l1075:
   431                           
   432                           ;Vinh.c: 96: TRISD=0;
   433  0037  0188               	clrf	8	;volatile
   434  0038                     l1077:
   435                           
   436                           ;Vinh.c: 97: timer0_initialize();
   437  0038  120A  118A  2242  120A  118A  	fcall	_timer0_initialize
   438  003D                     l1079:
   439                           
   440                           ;Vinh.c: 99: {;Vinh.c: 101: if(PORTBbits.RB6==0)
   441  003D  1283               	bcf	3,5	;RP0=0, select bank0
   442  003E  1303               	bcf	3,6	;RP1=0, select bank0
   443  003F  1B06               	btfsc	6,6	;volatile
   444  0040  2842               	goto	u601
   445  0041  2843               	goto	u600
   446  0042                     u601:
   447  0042  28B5               	goto	l1095
   448  0043                     u600:
   449  0043                     l1081:
   450                           
   451                           ;Vinh.c: 102: {;Vinh.c: 103: num=1234;
   452  0043  30D2               	movlw	210
   453  0044  00AE               	movwf	_num
   454  0045  3004               	movlw	4
   455  0046  00AF               	movwf	_num+1
   456  0047                     l1083:
   457                           
   458                           ;Vinh.c: 104: j=num%1000;
   459  0047  30E8               	movlw	232
   460  0048  00F3               	movwf	___lwmod@divisor
   461  0049  3003               	movlw	3
   462  004A  00F4               	movwf	___lwmod@divisor+1
   463  004B  30D2               	movlw	210
   464  004C  00F5               	movwf	___lwmod@dividend
   465  004D  3004               	movlw	4
   466  004E  00F6               	movwf	___lwmod@dividend+1
   467  004F  120A  118A  21F3  120A  118A  	fcall	___lwmod
   468  0054  0874               	movf	?___lwmod+1,w
   469  0055  00F9               	movwf	_j+1
   470  0056  0873               	movf	?___lwmod,w
   471  0057  00F8               	movwf	_j
   472  0058                     l1085:
   473                           
   474                           ;Vinh.c: 105: n=num/1000;
   475  0058  30E8               	movlw	232
   476  0059  00F3               	movwf	___lwdiv@divisor
   477  005A  3003               	movlw	3
   478  005B  00F4               	movwf	___lwdiv@divisor+1
   479  005C  30D2               	movlw	210
   480  005D  00F5               	movwf	___lwdiv@dividend
   481  005E  3004               	movlw	4
   482  005F  00F6               	movwf	___lwdiv@dividend+1
   483  0060  120A  118A  21AD  120A  118A  	fcall	___lwdiv
   484  0065  0873               	movf	?___lwdiv,w
   485  0066  1283               	bcf	3,5	;RP0=0, select bank0
   486  0067  1303               	bcf	3,6	;RP1=0, select bank0
   487  0068  00B6               	movwf	??_main
   488  0069  0836               	movf	??_main,w
   489  006A  00FA               	movwf	_n
   490  006B                     l1087:
   491                           
   492                           ;Vinh.c: 106: t=j/100;
   493  006B  3064               	movlw	100
   494  006C  00F3               	movwf	___lwdiv@divisor
   495  006D  3000               	movlw	0
   496  006E  00F4               	movwf	___lwdiv@divisor+1
   497  006F  0879               	movf	_j+1,w
   498  0070  00F6               	movwf	___lwdiv@dividend+1
   499  0071  0878               	movf	_j,w
   500  0072  00F5               	movwf	___lwdiv@dividend
   501  0073  120A  118A  21AD  120A  118A  	fcall	___lwdiv
   502  0078  0873               	movf	?___lwdiv,w
   503  0079  1283               	bcf	3,5	;RP0=0, select bank0
   504  007A  1303               	bcf	3,6	;RP1=0, select bank0
   505  007B  00B6               	movwf	??_main
   506  007C  0836               	movf	??_main,w
   507  007D  00B2               	movwf	_t
   508  007E                     l1089:
   509                           
   510                           ;Vinh.c: 107: j=j%100;
   511  007E  3064               	movlw	100
   512  007F  00F3               	movwf	___lwmod@divisor
   513  0080  3000               	movlw	0
   514  0081  00F4               	movwf	___lwmod@divisor+1
   515  0082  0879               	movf	_j+1,w
   516  0083  00F6               	movwf	___lwmod@dividend+1
   517  0084  0878               	movf	_j,w
   518  0085  00F5               	movwf	___lwmod@dividend
   519  0086  120A  118A  21F3  120A  118A  	fcall	___lwmod
   520  008B  0874               	movf	?___lwmod+1,w
   521  008C  00F9               	movwf	_j+1
   522  008D  0873               	movf	?___lwmod,w
   523  008E  00F8               	movwf	_j
   524  008F                     l1091:
   525                           
   526                           ;Vinh.c: 108: c=j/10;
   527  008F  300A               	movlw	10
   528  0090  00F3               	movwf	___lwdiv@divisor
   529  0091  3000               	movlw	0
   530  0092  00F4               	movwf	___lwdiv@divisor+1
   531  0093  0879               	movf	_j+1,w
   532  0094  00F6               	movwf	___lwdiv@dividend+1
   533  0095  0878               	movf	_j,w
   534  0096  00F5               	movwf	___lwdiv@dividend
   535  0097  120A  118A  21AD  120A  118A  	fcall	___lwdiv
   536  009C  0873               	movf	?___lwdiv,w
   537  009D  1283               	bcf	3,5	;RP0=0, select bank0
   538  009E  1303               	bcf	3,6	;RP1=0, select bank0
   539  009F  00B6               	movwf	??_main
   540  00A0  0836               	movf	??_main,w
   541  00A1  00B1               	movwf	_c
   542  00A2                     l1093:
   543                           
   544                           ;Vinh.c: 109: dv=j%10;
   545  00A2  300A               	movlw	10
   546  00A3  00F3               	movwf	___lwmod@divisor
   547  00A4  3000               	movlw	0
   548  00A5  00F4               	movwf	___lwmod@divisor+1
   549  00A6  0879               	movf	_j+1,w
   550  00A7  00F6               	movwf	___lwmod@dividend+1
   551  00A8  0878               	movf	_j,w
   552  00A9  00F5               	movwf	___lwmod@dividend
   553  00AA  120A  118A  21F3  120A  118A  	fcall	___lwmod
   554  00AF  0873               	movf	?___lwmod,w
   555  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   556  00B1  1303               	bcf	3,6	;RP1=0, select bank0
   557  00B2  00B6               	movwf	??_main
   558  00B3  0836               	movf	??_main,w
   559  00B4  00B0               	movwf	_dv
   560  00B5                     l1095:
   561                           
   562                           ;Vinh.c: 111: if(PORTBbits.RB7==0)
   563  00B5  1B86               	btfsc	6,7	;volatile
   564  00B6  28B8               	goto	u611
   565  00B7  28B9               	goto	u610
   566  00B8                     u611:
   567  00B8  283D               	goto	l1079
   568  00B9                     u610:
   569  00B9                     l1097:
   570                           
   571                           ;Vinh.c: 112: {;Vinh.c: 113: num=5678;
   572  00B9  302E               	movlw	46
   573  00BA  00AE               	movwf	_num
   574  00BB  3016               	movlw	22
   575  00BC  00AF               	movwf	_num+1
   576  00BD                     l1099:
   577                           
   578                           ;Vinh.c: 114: j=num%1000;
   579  00BD  30E8               	movlw	232
   580  00BE  00F3               	movwf	___lwmod@divisor
   581  00BF  3003               	movlw	3
   582  00C0  00F4               	movwf	___lwmod@divisor+1
   583  00C1  302E               	movlw	46
   584  00C2  00F5               	movwf	___lwmod@dividend
   585  00C3  3016               	movlw	22
   586  00C4  00F6               	movwf	___lwmod@dividend+1
   587  00C5  120A  118A  21F3  120A  118A  	fcall	___lwmod
   588  00CA  0874               	movf	?___lwmod+1,w
   589  00CB  00F9               	movwf	_j+1
   590  00CC  0873               	movf	?___lwmod,w
   591  00CD  00F8               	movwf	_j
   592  00CE                     l1101:
   593                           
   594                           ;Vinh.c: 115: n=num/1000;
   595  00CE  30E8               	movlw	232
   596  00CF  00F3               	movwf	___lwdiv@divisor
   597  00D0  3003               	movlw	3
   598  00D1  00F4               	movwf	___lwdiv@divisor+1
   599  00D2  302E               	movlw	46
   600  00D3  00F5               	movwf	___lwdiv@dividend
   601  00D4  3016               	movlw	22
   602  00D5  00F6               	movwf	___lwdiv@dividend+1
   603  00D6  120A  118A  21AD  120A  118A  	fcall	___lwdiv
   604  00DB  0873               	movf	?___lwdiv,w
   605  00DC  1283               	bcf	3,5	;RP0=0, select bank0
   606  00DD  1303               	bcf	3,6	;RP1=0, select bank0
   607  00DE  00B6               	movwf	??_main
   608  00DF  0836               	movf	??_main,w
   609  00E0  00FA               	movwf	_n
   610  00E1                     l1103:
   611                           
   612                           ;Vinh.c: 116: t=j/100;
   613  00E1  3064               	movlw	100
   614  00E2  00F3               	movwf	___lwdiv@divisor
   615  00E3  3000               	movlw	0
   616  00E4  00F4               	movwf	___lwdiv@divisor+1
   617  00E5  0879               	movf	_j+1,w
   618  00E6  00F6               	movwf	___lwdiv@dividend+1
   619  00E7  0878               	movf	_j,w
   620  00E8  00F5               	movwf	___lwdiv@dividend
   621  00E9  120A  118A  21AD  120A  118A  	fcall	___lwdiv
   622  00EE  0873               	movf	?___lwdiv,w
   623  00EF  1283               	bcf	3,5	;RP0=0, select bank0
   624  00F0  1303               	bcf	3,6	;RP1=0, select bank0
   625  00F1  00B6               	movwf	??_main
   626  00F2  0836               	movf	??_main,w
   627  00F3  00B2               	movwf	_t
   628  00F4                     l1105:
   629                           
   630                           ;Vinh.c: 117: j=j%100;
   631  00F4  3064               	movlw	100
   632  00F5  00F3               	movwf	___lwmod@divisor
   633  00F6  3000               	movlw	0
   634  00F7  00F4               	movwf	___lwmod@divisor+1
   635  00F8  0879               	movf	_j+1,w
   636  00F9  00F6               	movwf	___lwmod@dividend+1
   637  00FA  0878               	movf	_j,w
   638  00FB  00F5               	movwf	___lwmod@dividend
   639  00FC  120A  118A  21F3  120A  118A  	fcall	___lwmod
   640  0101  0874               	movf	?___lwmod+1,w
   641  0102  00F9               	movwf	_j+1
   642  0103  0873               	movf	?___lwmod,w
   643  0104  00F8               	movwf	_j
   644  0105                     l1107:
   645                           
   646                           ;Vinh.c: 118: c=j/10;
   647  0105  300A               	movlw	10
   648  0106  00F3               	movwf	___lwdiv@divisor
   649  0107  3000               	movlw	0
   650  0108  00F4               	movwf	___lwdiv@divisor+1
   651  0109  0879               	movf	_j+1,w
   652  010A  00F6               	movwf	___lwdiv@dividend+1
   653  010B  0878               	movf	_j,w
   654  010C  00F5               	movwf	___lwdiv@dividend
   655  010D  120A  118A  21AD  120A  118A  	fcall	___lwdiv
   656  0112  0873               	movf	?___lwdiv,w
   657  0113  1283               	bcf	3,5	;RP0=0, select bank0
   658  0114  1303               	bcf	3,6	;RP1=0, select bank0
   659  0115  00B6               	movwf	??_main
   660  0116  0836               	movf	??_main,w
   661  0117  00B1               	movwf	_c
   662  0118                     l1109:
   663                           
   664                           ;Vinh.c: 119: dv=j%10;
   665  0118  300A               	movlw	10
   666  0119  00F3               	movwf	___lwmod@divisor
   667  011A  3000               	movlw	0
   668  011B  00F4               	movwf	___lwmod@divisor+1
   669  011C  0879               	movf	_j+1,w
   670  011D  00F6               	movwf	___lwmod@dividend+1
   671  011E  0878               	movf	_j,w
   672  011F  00F5               	movwf	___lwmod@dividend
   673  0120  120A  118A  21F3  120A  118A  	fcall	___lwmod
   674  0125  0873               	movf	?___lwmod,w
   675  0126  1283               	bcf	3,5	;RP0=0, select bank0
   676  0127  1303               	bcf	3,6	;RP1=0, select bank0
   677  0128  00B6               	movwf	??_main
   678  0129  0836               	movf	??_main,w
   679  012A  00B0               	movwf	_dv
   680  012B  283D               	goto	l1079
   681  012C  120A  118A  280E   	ljmp	start
   682  012F                     __end_of_main:
   683                           
   684                           	psect	text1
   685  0242                     __ptext1:	
   686 ;; *************** function _timer0_initialize *****************
   687 ;; Defined at:
   688 ;;		line 36 in file "Vinh.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;		None
   691 ;; Auto vars:     Size  Location     Type
   692 ;;		None
   693 ;; Return value:  Size  Location     Type
   694 ;;                  1    wreg      void 
   695 ;; Registers used:
   696 ;;		wreg
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   702 ;;      Params:         0       0       0       0       0
   703 ;;      Locals:         0       0       0       0       0
   704 ;;      Temps:          0       0       0       0       0
   705 ;;      Totals:         0       0       0       0       0
   706 ;;Total ram usage:        0 bytes
   707 ;; Hardware stack levels used:    1
   708 ;; Hardware stack levels required when called:    1
   709 ;; This function calls:
   710 ;;		Nothing
   711 ;; This function is called by:
   712 ;;		_main
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716                           
   717                           ;psect for function _timer0_initialize
   718  0242                     _timer0_initialize:
   719  0242                     l841:	
   720                           ;incstack = 0
   721                           ; Regs used in _timer0_initialize: [wreg]
   722                           
   723                           
   724                           ;Vinh.c: 38: T0CS=0;
   725  0242  1683               	bsf	3,5	;RP0=1, select bank1
   726  0243  1303               	bcf	3,6	;RP1=0, select bank1
   727  0244  1281               	bcf	1,5	;volatile
   728                           
   729                           ;Vinh.c: 39: PSA=0;
   730  0245  1181               	bcf	1,3	;volatile
   731                           
   732                           ;Vinh.c: 40: PS0=1;
   733  0246  1401               	bsf	1,0	;volatile
   734                           
   735                           ;Vinh.c: 41: PS1=1;
   736  0247  1481               	bsf	1,1	;volatile
   737                           
   738                           ;Vinh.c: 42: PS2=0;
   739  0248  1101               	bcf	1,2	;volatile
   740  0249                     l843:
   741                           
   742                           ;Vinh.c: 43: TMR0=5;
   743  0249  3005               	movlw	5
   744  024A  1283               	bcf	3,5	;RP0=0, select bank0
   745  024B  1303               	bcf	3,6	;RP1=0, select bank0
   746  024C  0081               	movwf	1	;volatile
   747  024D                     l845:
   748                           
   749                           ;Vinh.c: 44: TMR0IE=1;
   750  024D  168B               	bsf	11,5	;volatile
   751  024E                     l847:
   752                           
   753                           ;Vinh.c: 45: GIE=1;
   754  024E  178B               	bsf	11,7	;volatile
   755  024F                     l51:
   756  024F  0008               	return
   757  0250                     __end_of_timer0_initialize:
   758                           
   759                           	psect	text2
   760  01F3                     __ptext2:	
   761 ;; *************** function ___lwmod *****************
   762 ;; Defined at:
   763 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;  divisor         2    3[COMMON] unsigned int 
   766 ;;  dividend        2    5[COMMON] unsigned int 
   767 ;; Auto vars:     Size  Location     Type
   768 ;;  counter         1    0[BANK0 ] unsigned char 
   769 ;; Return value:  Size  Location     Type
   770 ;;                  2    3[COMMON] unsigned int 
   771 ;; Registers used:
   772 ;;		wreg, status,2, status,0
   773 ;; Tracked objects:
   774 ;;		On entry : 0/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   778 ;;      Params:         4       0       0       0       0
   779 ;;      Locals:         0       1       0       0       0
   780 ;;      Temps:          1       0       0       0       0
   781 ;;      Totals:         5       1       0       0       0
   782 ;;Total ram usage:        6 bytes
   783 ;; Hardware stack levels used:    1
   784 ;; Hardware stack levels required when called:    1
   785 ;; This function calls:
   786 ;;		Nothing
   787 ;; This function is called by:
   788 ;;		_main
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792                           
   793                           ;psect for function ___lwmod
   794  01F3                     ___lwmod:
   795  01F3                     l1043:	
   796                           ;incstack = 0
   797                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   798                           
   799  01F3  0873               	movf	___lwmod@divisor,w
   800  01F4  0474               	iorwf	___lwmod@divisor+1,w
   801  01F5  1903               	btfsc	3,2
   802  01F6  29F8               	goto	u541
   803  01F7  29F9               	goto	u540
   804  01F8                     u541:
   805  01F8  2A2A               	goto	l1061
   806  01F9                     u540:
   807  01F9                     l1045:
   808  01F9  1283               	bcf	3,5	;RP0=0, select bank0
   809  01FA  1303               	bcf	3,6	;RP1=0, select bank0
   810  01FB  01B3               	clrf	___lwmod@counter
   811  01FC  0AB3               	incf	___lwmod@counter,f
   812  01FD  2A09               	goto	l1051
   813  01FE                     l1047:
   814  01FE  3001               	movlw	1
   815  01FF                     u555:
   816  01FF  1003               	clrc
   817  0200  0DF3               	rlf	___lwmod@divisor,f
   818  0201  0DF4               	rlf	___lwmod@divisor+1,f
   819  0202  3EFF               	addlw	-1
   820  0203  1D03               	skipz
   821  0204  29FF               	goto	u555
   822  0205                     l1049:
   823  0205  3001               	movlw	1
   824  0206  00F7               	movwf	??___lwmod
   825  0207  0877               	movf	??___lwmod,w
   826  0208  07B3               	addwf	___lwmod@counter,f
   827  0209                     l1051:
   828  0209  1FF4               	btfss	___lwmod@divisor+1,7
   829  020A  2A0C               	goto	u561
   830  020B  2A0D               	goto	u560
   831  020C                     u561:
   832  020C  29FE               	goto	l1047
   833  020D                     u560:
   834  020D                     l1053:
   835  020D  0874               	movf	___lwmod@divisor+1,w
   836  020E  0276               	subwf	___lwmod@dividend+1,w
   837  020F  1D03               	skipz
   838  0210  2A13               	goto	u575
   839  0211  0873               	movf	___lwmod@divisor,w
   840  0212  0275               	subwf	___lwmod@dividend,w
   841  0213                     u575:
   842  0213  1C03               	skipc
   843  0214  2A16               	goto	u571
   844  0215  2A17               	goto	u570
   845  0216                     u571:
   846  0216  2A1D               	goto	l1057
   847  0217                     u570:
   848  0217                     l1055:
   849  0217  0873               	movf	___lwmod@divisor,w
   850  0218  02F5               	subwf	___lwmod@dividend,f
   851  0219  0874               	movf	___lwmod@divisor+1,w
   852  021A  1C03               	skipc
   853  021B  03F6               	decf	___lwmod@dividend+1,f
   854  021C  02F6               	subwf	___lwmod@dividend+1,f
   855  021D                     l1057:
   856  021D  3001               	movlw	1
   857  021E                     u585:
   858  021E  1003               	clrc
   859  021F  0CF4               	rrf	___lwmod@divisor+1,f
   860  0220  0CF3               	rrf	___lwmod@divisor,f
   861  0221  3EFF               	addlw	-1
   862  0222  1D03               	skipz
   863  0223  2A1E               	goto	u585
   864  0224                     l1059:
   865  0224  3001               	movlw	1
   866  0225  02B3               	subwf	___lwmod@counter,f
   867  0226  1D03               	btfss	3,2
   868  0227  2A29               	goto	u591
   869  0228  2A2A               	goto	u590
   870  0229                     u591:
   871  0229  2A0D               	goto	l1053
   872  022A                     u590:
   873  022A                     l1061:
   874  022A  0876               	movf	___lwmod@dividend+1,w
   875  022B  00F4               	movwf	?___lwmod+1
   876  022C  0875               	movf	___lwmod@dividend,w
   877  022D  00F3               	movwf	?___lwmod
   878  022E                     l441:
   879  022E  0008               	return
   880  022F                     __end_of___lwmod:
   881                           
   882                           	psect	text3
   883  01AD                     __ptext3:	
   884 ;; *************** function ___lwdiv *****************
   885 ;; Defined at:
   886 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;  divisor         2    3[COMMON] unsigned int 
   889 ;;  dividend        2    5[COMMON] unsigned int 
   890 ;; Auto vars:     Size  Location     Type
   891 ;;  quotient        2    1[BANK0 ] unsigned int 
   892 ;;  counter         1    0[BANK0 ] unsigned char 
   893 ;; Return value:  Size  Location     Type
   894 ;;                  2    3[COMMON] unsigned int 
   895 ;; Registers used:
   896 ;;		wreg, status,2, status,0
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   902 ;;      Params:         4       0       0       0       0
   903 ;;      Locals:         0       3       0       0       0
   904 ;;      Temps:          1       0       0       0       0
   905 ;;      Totals:         5       3       0       0       0
   906 ;;Total ram usage:        8 bytes
   907 ;; Hardware stack levels used:    1
   908 ;; Hardware stack levels required when called:    1
   909 ;; This function calls:
   910 ;;		Nothing
   911 ;; This function is called by:
   912 ;;		_main
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           
   917                           ;psect for function ___lwdiv
   918  01AD                     ___lwdiv:
   919  01AD                     l1017:	
   920                           ;incstack = 0
   921                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   922                           
   923  01AD  1283               	bcf	3,5	;RP0=0, select bank0
   924  01AE  1303               	bcf	3,6	;RP1=0, select bank0
   925  01AF  01B4               	clrf	___lwdiv@quotient
   926  01B0  01B5               	clrf	___lwdiv@quotient+1
   927  01B1                     l1019:
   928  01B1  0873               	movf	___lwdiv@divisor,w
   929  01B2  0474               	iorwf	___lwdiv@divisor+1,w
   930  01B3  1903               	btfsc	3,2
   931  01B4  29B6               	goto	u471
   932  01B5  29B7               	goto	u470
   933  01B6                     u471:
   934  01B6  29EE               	goto	l1039
   935  01B7                     u470:
   936  01B7                     l1021:
   937  01B7  01B3               	clrf	___lwdiv@counter
   938  01B8  0AB3               	incf	___lwdiv@counter,f
   939  01B9  29C5               	goto	l1027
   940  01BA                     l1023:
   941  01BA  3001               	movlw	1
   942  01BB                     u485:
   943  01BB  1003               	clrc
   944  01BC  0DF3               	rlf	___lwdiv@divisor,f
   945  01BD  0DF4               	rlf	___lwdiv@divisor+1,f
   946  01BE  3EFF               	addlw	-1
   947  01BF  1D03               	skipz
   948  01C0  29BB               	goto	u485
   949  01C1                     l1025:
   950  01C1  3001               	movlw	1
   951  01C2  00F7               	movwf	??___lwdiv
   952  01C3  0877               	movf	??___lwdiv,w
   953  01C4  07B3               	addwf	___lwdiv@counter,f
   954  01C5                     l1027:
   955  01C5  1FF4               	btfss	___lwdiv@divisor+1,7
   956  01C6  29C8               	goto	u491
   957  01C7  29C9               	goto	u490
   958  01C8                     u491:
   959  01C8  29BA               	goto	l1023
   960  01C9                     u490:
   961  01C9                     l1029:
   962  01C9  3001               	movlw	1
   963  01CA                     u505:
   964  01CA  1003               	clrc
   965  01CB  0DB4               	rlf	___lwdiv@quotient,f
   966  01CC  0DB5               	rlf	___lwdiv@quotient+1,f
   967  01CD  3EFF               	addlw	-1
   968  01CE  1D03               	skipz
   969  01CF  29CA               	goto	u505
   970  01D0  0874               	movf	___lwdiv@divisor+1,w
   971  01D1  0276               	subwf	___lwdiv@dividend+1,w
   972  01D2  1D03               	skipz
   973  01D3  29D6               	goto	u515
   974  01D4  0873               	movf	___lwdiv@divisor,w
   975  01D5  0275               	subwf	___lwdiv@dividend,w
   976  01D6                     u515:
   977  01D6  1C03               	skipc
   978  01D7  29D9               	goto	u511
   979  01D8  29DA               	goto	u510
   980  01D9                     u511:
   981  01D9  29E1               	goto	l1035
   982  01DA                     u510:
   983  01DA                     l1031:
   984  01DA  0873               	movf	___lwdiv@divisor,w
   985  01DB  02F5               	subwf	___lwdiv@dividend,f
   986  01DC  0874               	movf	___lwdiv@divisor+1,w
   987  01DD  1C03               	skipc
   988  01DE  03F6               	decf	___lwdiv@dividend+1,f
   989  01DF  02F6               	subwf	___lwdiv@dividend+1,f
   990  01E0                     l1033:
   991  01E0  1434               	bsf	___lwdiv@quotient,0
   992  01E1                     l1035:
   993  01E1  3001               	movlw	1
   994  01E2                     u525:
   995  01E2  1003               	clrc
   996  01E3  0CF4               	rrf	___lwdiv@divisor+1,f
   997  01E4  0CF3               	rrf	___lwdiv@divisor,f
   998  01E5  3EFF               	addlw	-1
   999  01E6  1D03               	skipz
  1000  01E7  29E2               	goto	u525
  1001  01E8                     l1037:
  1002  01E8  3001               	movlw	1
  1003  01E9  02B3               	subwf	___lwdiv@counter,f
  1004  01EA  1D03               	btfss	3,2
  1005  01EB  29ED               	goto	u531
  1006  01EC  29EE               	goto	u530
  1007  01ED                     u531:
  1008  01ED  29C9               	goto	l1029
  1009  01EE                     u530:
  1010  01EE                     l1039:
  1011  01EE  0835               	movf	___lwdiv@quotient+1,w
  1012  01EF  00F4               	movwf	?___lwdiv+1
  1013  01F0  0834               	movf	___lwdiv@quotient,w
  1014  01F1  00F3               	movwf	?___lwdiv
  1015  01F2                     l431:
  1016  01F2  0008               	return
  1017  01F3                     __end_of___lwdiv:
  1018                           
  1019                           	psect	text4
  1020  012F                     __ptext4:	
  1021 ;; *************** function _Count_Up *****************
  1022 ;; Defined at:
  1023 ;;		line 47 in file "Vinh.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;		None
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;		None
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      void 
  1030 ;; Registers used:
  1031 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1037 ;;      Params:         0       0       0       0       0
  1038 ;;      Locals:         0       0       0       0       0
  1039 ;;      Temps:          3       0       0       0       0
  1040 ;;      Totals:         3       0       0       0       0
  1041 ;;Total ram usage:        3 bytes
  1042 ;; Hardware stack levels used:    1
  1043 ;; This function calls:
  1044 ;;		Nothing
  1045 ;; This function is called by:
  1046 ;;		Interrupt level 1
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           
  1051                           ;psect for function _Count_Up
  1052  012F                     _Count_Up:
  1053  012F                     i1l897:
  1054                           
  1055                           ;Vinh.c: 49: if (TMR0IE && TMR0IF)
  1056  012F  1E8B               	btfss	11,5	;volatile
  1057  0130  2932               	goto	u37_21
  1058  0131  2933               	goto	u37_20
  1059  0132                     u37_21:
  1060  0132  29A4               	goto	i1l63
  1061  0133                     u37_20:
  1062  0133                     i1l899:
  1063  0133  1D0B               	btfss	11,2	;volatile
  1064  0134  2936               	goto	u38_21
  1065  0135  2937               	goto	u38_20
  1066  0136                     u38_21:
  1067  0136  29A4               	goto	i1l63
  1068  0137                     u38_20:
  1069  0137                     i1l901:
  1070                           
  1071                           ;Vinh.c: 50: {;Vinh.c: 51: TMR0=5;
  1072  0137  3005               	movlw	5
  1073  0138  1283               	bcf	3,5	;RP0=0, select bank0
  1074  0139  1303               	bcf	3,6	;RP1=0, select bank0
  1075  013A  0081               	movwf	1	;volatile
  1076  013B                     i1l903:
  1077                           
  1078                           ;Vinh.c: 52: TMR0IF=0;
  1079  013B  110B               	bcf	11,2	;volatile
  1080                           
  1081                           ;Vinh.c: 53: counter++;
  1082  013C  3001               	movlw	1
  1083  013D  07AC               	addwf	_counter,f
  1084  013E  1803               	skipnc
  1085  013F  0AAD               	incf	_counter+1,f
  1086  0140  3000               	movlw	0
  1087  0141  07AD               	addwf	_counter+1,f
  1088  0142                     i1l905:
  1089                           
  1090                           ;Vinh.c: 54: if(counter==4)
  1091  0142  3004               	movlw	4
  1092  0143  062C               	xorwf	_counter,w
  1093  0144  042D               	iorwf	_counter+1,w
  1094  0145  1D03               	btfss	3,2
  1095  0146  2948               	goto	u39_21
  1096  0147  2949               	goto	u39_20
  1097  0148                     u39_21:
  1098  0148  295A               	goto	i1l915
  1099  0149                     u39_20:
  1100  0149                     i1l907:
  1101                           
  1102                           ;Vinh.c: 55: {;Vinh.c: 56: counter=0;
  1103  0149  01AC               	clrf	_counter
  1104  014A  01AD               	clrf	_counter+1
  1105  014B                     i1l909:
  1106                           
  1107                           ;Vinh.c: 57: count_t0++;
  1108  014B  3001               	movlw	1
  1109  014C  07AA               	addwf	_count_t0,f
  1110  014D  1803               	skipnc
  1111  014E  0AAB               	incf	_count_t0+1,f
  1112  014F  3000               	movlw	0
  1113  0150  07AB               	addwf	_count_t0+1,f
  1114  0151                     i1l911:
  1115                           
  1116                           ;Vinh.c: 58:   if(count_t0==4)
  1117  0151  3004               	movlw	4
  1118  0152  062A               	xorwf	_count_t0,w
  1119  0153  042B               	iorwf	_count_t0+1,w
  1120  0154  1D03               	btfss	3,2
  1121  0155  2957               	goto	u40_21
  1122  0156  2958               	goto	u40_20
  1123  0157                     u40_21:
  1124  0157  295A               	goto	i1l915
  1125  0158                     u40_20:
  1126  0158                     i1l913:
  1127                           
  1128                           ;Vinh.c: 59:     count_t0=0;
  1129  0158  01AA               	clrf	_count_t0
  1130  0159  01AB               	clrf	_count_t0+1
  1131  015A                     i1l915:
  1132                           
  1133                           ;Vinh.c: 62: if(count_t0==0)
  1134  015A  082A               	movf	_count_t0,w
  1135  015B  042B               	iorwf	_count_t0+1,w
  1136  015C  1D03               	btfss	3,2
  1137  015D  295F               	goto	u41_21
  1138  015E  2960               	goto	u41_20
  1139  015F                     u41_21:
  1140  015F  296C               	goto	i1l929
  1141  0160                     u41_20:
  1142  0160                     i1l917:
  1143                           
  1144                           ;Vinh.c: 63: {;Vinh.c: 64: PORTD=0xff;
  1145  0160  30FF               	movlw	255
  1146  0161  0088               	movwf	8	;volatile
  1147  0162                     i1l919:
  1148                           
  1149                           ;Vinh.c: 65: PORTAbits.RA0=0; PORTAbits.RA1=1; PORTAbits.RA2=1; PORTAbits.RA3=1;
  1150  0162  1005               	bcf	5,0	;volatile
  1151  0163                     i1l921:
  1152  0163  1485               	bsf	5,1	;volatile
  1153  0164                     i1l923:
  1154  0164  1505               	bsf	5,2	;volatile
  1155  0165                     i1l925:
  1156  0165  1585               	bsf	5,3	;volatile
  1157  0166                     i1l927:
  1158                           
  1159                           ;Vinh.c: 66: PORTD=ma[n];
  1160  0166  087A               	movf	_n,w
  1161  0167  3E20               	addlw	(low (_ma| 0))& (0+255)
  1162  0168  0084               	movwf	4
  1163  0169  1383               	bcf	3,7	;select IRP bank0
  1164  016A  0800               	movf	0,w
  1165  016B  0088               	movwf	8	;volatile
  1166  016C                     i1l929:
  1167                           
  1168                           ;Vinh.c: 68: if(count_t0==1)
  1169  016C  032A               	decf	_count_t0,w
  1170  016D  042B               	iorwf	_count_t0+1,w
  1171  016E  1D03               	btfss	3,2
  1172  016F  2971               	goto	u42_21
  1173  0170  2972               	goto	u42_20
  1174  0171                     u42_21:
  1175  0171  297E               	goto	i1l943
  1176  0172                     u42_20:
  1177  0172                     i1l931:
  1178                           
  1179                           ;Vinh.c: 69: {;Vinh.c: 70: PORTD=0xff;
  1180  0172  30FF               	movlw	255
  1181  0173  0088               	movwf	8	;volatile
  1182  0174                     i1l933:
  1183                           
  1184                           ;Vinh.c: 71: PORTAbits.RA0=1; PORTAbits.RA1=0; PORTAbits.RA2=1; PORTAbits.RA3=1;
  1185  0174  1405               	bsf	5,0	;volatile
  1186  0175                     i1l935:
  1187  0175  1085               	bcf	5,1	;volatile
  1188  0176                     i1l937:
  1189  0176  1505               	bsf	5,2	;volatile
  1190  0177                     i1l939:
  1191  0177  1585               	bsf	5,3	;volatile
  1192  0178                     i1l941:
  1193                           
  1194                           ;Vinh.c: 72: PORTD=ma[t];
  1195  0178  0832               	movf	_t,w
  1196  0179  3E20               	addlw	(low (_ma| 0))& (0+255)
  1197  017A  0084               	movwf	4
  1198  017B  1383               	bcf	3,7	;select IRP bank0
  1199  017C  0800               	movf	0,w
  1200  017D  0088               	movwf	8	;volatile
  1201  017E                     i1l943:
  1202                           
  1203                           ;Vinh.c: 74: if(count_t0==2)
  1204  017E  3002               	movlw	2
  1205  017F  062A               	xorwf	_count_t0,w
  1206  0180  042B               	iorwf	_count_t0+1,w
  1207  0181  1D03               	btfss	3,2
  1208  0182  2984               	goto	u43_21
  1209  0183  2985               	goto	u43_20
  1210  0184                     u43_21:
  1211  0184  2991               	goto	i1l957
  1212  0185                     u43_20:
  1213  0185                     i1l945:
  1214                           
  1215                           ;Vinh.c: 75: {;Vinh.c: 76: PORTD=0xff;
  1216  0185  30FF               	movlw	255
  1217  0186  0088               	movwf	8	;volatile
  1218  0187                     i1l947:
  1219                           
  1220                           ;Vinh.c: 77: PORTAbits.RA0=1; PORTAbits.RA1=1; PORTAbits.RA2=0; PORTAbits.RA3=1;
  1221  0187  1405               	bsf	5,0	;volatile
  1222  0188                     i1l949:
  1223  0188  1485               	bsf	5,1	;volatile
  1224  0189                     i1l951:
  1225  0189  1105               	bcf	5,2	;volatile
  1226  018A                     i1l953:
  1227  018A  1585               	bsf	5,3	;volatile
  1228  018B                     i1l955:
  1229                           
  1230                           ;Vinh.c: 78: PORTD=ma[c];
  1231  018B  0831               	movf	_c,w
  1232  018C  3E20               	addlw	(low (_ma| 0))& (0+255)
  1233  018D  0084               	movwf	4
  1234  018E  1383               	bcf	3,7	;select IRP bank0
  1235  018F  0800               	movf	0,w
  1236  0190  0088               	movwf	8	;volatile
  1237  0191                     i1l957:
  1238                           
  1239                           ;Vinh.c: 80: if(count_t0==3)
  1240  0191  3003               	movlw	3
  1241  0192  062A               	xorwf	_count_t0,w
  1242  0193  042B               	iorwf	_count_t0+1,w
  1243  0194  1D03               	btfss	3,2
  1244  0195  2997               	goto	u44_21
  1245  0196  2998               	goto	u44_20
  1246  0197                     u44_21:
  1247  0197  29A4               	goto	i1l63
  1248  0198                     u44_20:
  1249  0198                     i1l959:
  1250                           
  1251                           ;Vinh.c: 81: {;Vinh.c: 82: PORTD=0xff;
  1252  0198  30FF               	movlw	255
  1253  0199  0088               	movwf	8	;volatile
  1254  019A                     i1l961:
  1255                           
  1256                           ;Vinh.c: 83: PORTAbits.RA0=1; PORTAbits.RA1=1; PORTAbits.RA2=1; PORTAbits.RA3=0;
  1257  019A  1405               	bsf	5,0	;volatile
  1258  019B                     i1l963:
  1259  019B  1485               	bsf	5,1	;volatile
  1260  019C                     i1l965:
  1261  019C  1505               	bsf	5,2	;volatile
  1262  019D                     i1l967:
  1263  019D  1185               	bcf	5,3	;volatile
  1264  019E                     i1l969:
  1265                           
  1266                           ;Vinh.c: 84: PORTD=ma[dv];
  1267  019E  0830               	movf	_dv,w
  1268  019F  3E20               	addlw	(low (_ma| 0))& (0+255)
  1269  01A0  0084               	movwf	4
  1270  01A1  1383               	bcf	3,7	;select IRP bank0
  1271  01A2  0800               	movf	0,w
  1272  01A3  0088               	movwf	8	;volatile
  1273  01A4                     i1l63:
  1274  01A4  0872               	movf	??_Count_Up+2,w
  1275  01A5  008A               	movwf	10
  1276  01A6  0871               	movf	??_Count_Up+1,w
  1277  01A7  0084               	movwf	4
  1278  01A8  0E70               	swapf	??_Count_Up,w
  1279  01A9  0083               	movwf	3
  1280  01AA  0EFE               	swapf	btemp,f
  1281  01AB  0E7E               	swapf	btemp,w
  1282  01AC  0009               	retfie
  1283  01AD                     __end_of_Count_Up:
  1284  007E                     btemp	set	126	;btemp
  1285  007E                     wtemp0	set	126
  1286                           
  1287                           	psect	intentry
  1288  0004                     __pintentry:	
  1289                           ;incstack = 0
  1290                           ; Regs used in _Count_Up: [wreg-fsr0h+status,2+status,0]
  1291                           
  1292  0004                     interrupt_function:
  1293  007E                     saved_w	set	btemp
  1294  0004  00FE               	movwf	btemp
  1295  0005  0E03               	swapf	3,w
  1296  0006  00F0               	movwf	??_Count_Up
  1297  0007  0804               	movf	4,w
  1298  0008  00F1               	movwf	??_Count_Up+1
  1299  0009  080A               	movf	10,w
  1300  000A  00F2               	movwf	??_Count_Up+2
  1301  000B  120A  118A  292F   	ljmp	_Count_Up
  1302                           
  1303                           	psect	config
  1304                           
  1305                           ;Config register CONFIG @ 0x2007
  1306                           ;	Oscillator Selection bits
  1307                           ;	FOSC = XT, XT oscillator
  1308                           ;	Watchdog Timer Enable bit
  1309                           ;	WDTE = OFF, WDT disabled
  1310                           ;	Power-up Timer Enable bit
  1311                           ;	PWRTE = ON, PWRT enabled
  1312                           ;	Brown-out Reset Enable bit
  1313                           ;	BOREN = ON, BOR enabled
  1314                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1315                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1316                           ;	Data EEPROM Memory Code Protection bit
  1317                           ;	CPD = OFF, Data EEPROM code protection off
  1318                           ;	Flash Program Memory Write Enable bits
  1319                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1320                           ;	In-Circuit Debugger Mode bit
  1321                           ;	DEBUG = 0x1, unprogrammed default
  1322                           ;	Flash Program Memory Code Protection bit
  1323                           ;	CP = OFF, Code protection off
  1324  2007                     	org	8199
  1325  2007  3FF1               	dw	16369

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80      4      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lwdiv
    _main->___lwmod

Critical Paths under _Count_Up in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___lwdiv

Critical Paths under _Count_Up in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Count_Up in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Count_Up in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Count_Up in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2633
                                              3 BANK0      1     1      0
                            ___lwdiv
                            ___lwmod
                  _timer0_initialize
 ---------------------------------------------------------------------------------
 (1) _timer0_initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4    1312
                                              3 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4    1321
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Count_Up                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
   ___lwmod
   _timer0_initialize

 _Count_Up (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      4      17       5       28.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      22      12        0.0%
ABS                  0      0      22       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Fri Oct 08 09:33:18 2021

                         _c 0031                           _j 0078                           _n 007A  
                         _t 0032                           pc 0002                          l51 024F  
                        _ma 0020                          _dv 0030                          fsr 0004  
                       l431 01F2                         l441 022E                         l841 0242  
                       l843 0249                         l845 024D                         l847 024E  
                       _GIE 005F                         u510 01DA                         _PS0 0408  
                       u511 01D9                         _PS1 0409                         u600 0043  
                       _PS2 040A                         u505 01CA                         u601 0042  
                       u530 01EE                         u610 00B9                         u531 01ED  
                       u515 01D6                         u611 00B8                         u540 01F9  
                       u525 01E2                         u541 01F8                         u470 01B7  
                       u471 01B6                         u560 020D                         u561 020C  
                       u490 01C9                         u570 0217                         u491 01C8  
                       u571 0216                         u555 01FF                         u485 01BB  
                       u590 022A                         u591 0229                         u575 0213  
                       _PSA 040B                         u585 021E                         _num 002E  
                       fsr0 0004                         indf 0000                        l1021 01B7  
                      l1101 00CE                        l1031 01DA                        l1023 01BA  
                      l1103 00E1                        l1033 01E0                        l1025 01C1  
                      l1017 01AD                        l1105 00F4                        l1035 01E1  
                      l1027 01C5                        l1019 01B1                        l1051 0209  
                      l1043 01F3                        l1107 0105                        l1037 01E8  
                      l1029 01C9                        l1053 020D                        l1045 01F9  
                      l1061 022A                        l1109 0118                        l1039 01EE  
                      l1055 0217                        l1047 01FE                        l1071 0035  
                      l1057 021D                        l1049 0205                        l1081 0043  
                      l1073 0036                        l1065 002F                        l1059 0224  
                      l1091 008F                        l1083 0047                        l1075 0037  
                      l1067 0033                        l1093 00A2                        l1085 0058  
                      l1077 0038                        l1069 0034                        l1087 006B  
                      l1095 00B5                        l1079 003D                        l1097 00B9  
                      l1089 007E                        l1099 00BD                        _T0CS 040D  
                      i1l63 01A4                        _TMR0 0001                        _main 002F  
                      btemp 007E                        start 000E                       ?_main 0070  
           __end_of___lwdiv 01F3             __end_of___lwmod 022F                       i1l901 0137  
                     i1l911 0151                       i1l903 013B                       i1l921 0163  
                     i1l913 0158                       i1l905 0142                       i1l931 0172  
                     i1l923 0164                       i1l907 0149                       i1l915 015A  
                     i1l941 0178                       i1l933 0174                       i1l925 0165  
                     i1l917 0160                       i1l909 014B                       i1l951 0189  
                     i1l935 0175                       i1l943 017E                       i1l927 0166  
                     i1l919 0162                       i1l961 019A                       i1l953 018A  
                     i1l945 0185                       i1l937 0176                       i1l929 016C  
                     i1l963 019B                       i1l955 018B                       i1l947 0187  
                     i1l939 0177                       i1l965 019C                       i1l949 0188  
                     i1l957 0191                       i1l967 019D                       i1l959 0198  
                     i1l969 019E                       i1l897 012F                       i1l899 0133  
                     u40_20 0158                       u40_21 0157                       u41_20 0160  
                     u41_21 015F                       u42_20 0172                       u42_21 0171  
                     u43_20 0185                       u43_21 0184                       _PORTD 0008  
                     u44_20 0198                       u44_21 0197                       u37_20 0133  
                     u37_21 0132                       u38_20 0137                       u38_21 0136  
                     u39_20 0149                       u39_21 0148                       _TRISD 0088  
                     pclath 000A                       status 0003                       wtemp0 007E  
           __initialization 0011                __end_of_main 012F            __end_of_Count_Up 01AD  
                    ??_main 0036                      _ADCON1 009F                      _TMR0IE 005D  
                    _TMR0IF 005A                   ??___lwdiv 0077                   ??___lwmod 0077  
                    saved_w 007E     __end_of__initialization 002B              __pcstackCOMMON 0070  
              __pidataBANK0 0250                  __pbssBANK0 002A                   ?_Count_Up 0070  
                __pmaintext 002F                  __pintentry 0004           _timer0_initialize 0242  
        ?_timer0_initialize 0070         ??_timer0_initialize 0073                  ??_Count_Up 0070  
 __end_of_timer0_initialize 0250                     ___lwdiv 01AD                     ___lwmod 01F3  
                   __ptext1 0242                     __ptext2 01F3                     __ptext3 01AD  
                   __ptext4 012F                     _counter 002C        end_of_initialization 002B  
                 _PORTAbits 0005                   _PORTBbits 0006                   _TRISAbits 0085  
__size_of_timer0_initialize 000E         start_initialization 0011           __size_of_Count_Up 007E  
                init_fetch0 022F                 __pdataBANK0 0020                 __pbssCOMMON 0078  
                 ___latbits 0002               __pcstackBANK0 0033            ___lwdiv@dividend 0075  
                  ?___lwdiv 0073                    ?___lwmod 0073            ___lwdiv@quotient 0034  
         interrupt_function 0004                    _Count_Up 012F            __size_of___lwdiv 0046  
          __size_of___lwmod 003C             ___lwdiv@divisor 0073             ___lwdiv@counter 0033  
                  _count_t0 002A               __size_of_main 0100                    init_ram0 0233  
                  intlevel1 0000            ___lwmod@dividend 0075             ___lwmod@divisor 0073  
           ___lwmod@counter 0033  
