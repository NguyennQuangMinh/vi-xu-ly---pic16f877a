

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Sep 14 18:06:10 2021

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.30
    25                           ; Generated 26/08/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F877A Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  0008                     	;# 
   128  0009                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000D                     	;# 
   133  000E                     	;# 
   134  000E                     	;# 
   135  000F                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001B                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0081                     	;# 
   155  0085                     	;# 
   156  0086                     	;# 
   157  0087                     	;# 
   158  0088                     	;# 
   159  0089                     	;# 
   160  008C                     	;# 
   161  008D                     	;# 
   162  008E                     	;# 
   163  0091                     	;# 
   164  0092                     	;# 
   165  0093                     	;# 
   166  0094                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009E                     	;# 
   172  009F                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010E                     	;# 
   176  010F                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179                           
   180                           	psect	idataBANK0
   181  0233                     __pidataBANK0:
   182                           
   183                           ;initializer for _number
   184  0233  34C0               	retlw	192
   185  0234  34F9               	retlw	249
   186  0235  34A4               	retlw	164
   187  0236  34B0               	retlw	176
   188  0237  3499               	retlw	153
   189  0238  3492               	retlw	146
   190  0239  3482               	retlw	130
   191  023A  34F8               	retlw	248
   192  023B  3480               	retlw	128
   193  023C  3490               	retlw	144
   194  0009                     _PORTEbits	set	9
   195  0001                     _TMR0	set	1
   196  0005                     _PORTAbits	set	5
   197  0008                     _PORTD	set	8
   198  0061                     _TMR2IF	set	97
   199  005A                     _TMR0IF	set	90
   200  005D                     _TMR0IE	set	93
   201  005F                     _GIE	set	95
   202  005E                     _PEIE	set	94
   203  0092                     _TMR2ON	set	146
   204  0095                     _TOUTPS2	set	149
   205  0094                     _TOUTPS1	set	148
   206  0093                     _TOUTPS0	set	147
   207  0091                     _T2CKPS1	set	145
   208  0090                     _T2CKPS0	set	144
   209  0086                     _TRISB	set	134
   210  0088                     _TRISD	set	136
   211  0089                     _TRISEbits	set	137
   212  0085                     _TRISAbits	set	133
   213  009F                     _ADCON1	set	159
   214  0092                     _PR2	set	146
   215  040A                     _PS2	set	1034
   216  0409                     _PS1	set	1033
   217  0408                     _PS0	set	1032
   218  040B                     _PSA	set	1035
   219  040D                     _T0CS	set	1037
   220  0461                     _TMR2IE	set	1121
   221                           
   222                           	psect	cinit
   223  0011                     start_initialization:	
   224                           ; #config settings
   225                           
   226  0011                     __initialization:
   227                           
   228                           ; Initialize objects allocated to BANK0
   229  0011  1383               	bcf	3,7	;select IRP bank0
   230  0012  303D               	movlw	low (__pdataBANK0+10)
   231  0013  00FD               	movwf	btemp+-1
   232  0014  3002               	movlw	high __pidataBANK0
   233  0015  00FE               	movwf	btemp
   234  0016  3033               	movlw	low __pidataBANK0
   235  0017  00FF               	movwf	btemp+1
   236  0018  3033               	movlw	low __pdataBANK0
   237  0019  0084               	movwf	4
   238  001A  120A  118A  2218  120A  118A  	fcall	init_ram0
   239                           
   240                           ; Clear objects allocated to BANK0
   241  001F  3020               	movlw	low __pbssBANK0
   242  0020  0084               	movwf	4
   243  0021  3033               	movlw	low (__pbssBANK0+19)
   244  0022  120A  118A  223D   	fcall	clear_ram0
   245                           
   246                           ; Clear objects allocated to COMMON
   247  0025  01FC               	clrf	__pbssCOMMON& (0+127)
   248  0026  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   249  0027                     end_of_initialization:	
   250                           ;End of C runtime variable initialization code
   251                           
   252  0027                     __end_of__initialization:
   253  0027  0183               	clrf	3
   254  0028  120A  118A  28F7   	ljmp	_main	;jump to C main() function
   255                           
   256                           	psect	bssCOMMON
   257  007C                     __pbssCOMMON:
   258  007C                     _digit:
   259  007C                     	ds	1
   260  007D                     _donvi:
   261  007D                     	ds	1
   262                           
   263                           	psect	bssBANK0
   264  0020                     __pbssBANK0:
   265  0020                     _count_t0:
   266  0020                     	ds	2
   267  0022                     _count_s:
   268  0022                     	ds	2
   269  0024                     _count:
   270  0024                     	ds	2
   271  0026                     _j:
   272  0026                     	ds	2
   273  0028                     _num:
   274  0028                     	ds	2
   275  002A                     _i:
   276  002A                     	ds	2
   277  002C                     _pre_kb2:
   278  002C                     	ds	1
   279  002D                     _pre_kb1:
   280  002D                     	ds	1
   281  002E                     _pre_kb0:
   282  002E                     	ds	1
   283  002F                     _ngin:
   284  002F                     	ds	1
   285  0030                     _tram:
   286  0030                     	ds	1
   287  0031                     _truc:
   288  0031                     	ds	1
   289  0032                     _bLed:
   290  0032                     	ds	1
   291                           
   292                           	psect	dataBANK0
   293  0033                     __pdataBANK0:
   294  0033                     _number:
   295  0033                     	ds	10
   296                           
   297                           	psect	inittext
   298  0214                     init_fetch0:	
   299                           ;	Called with low address in FSR and high address in W
   300                           
   301  0214  087E               	movf	126,w
   302  0215  008A               	movwf	10
   303  0216  087F               	movf	127,w
   304  0217  0082               	movwf	2
   305  0218                     init_ram0:	
   306                           ;Called with:
   307                           ;	high address of idata address in btemp 
   308                           ;	low address of idata address in btemp+1 
   309                           ;	low address of data in FSR
   310                           ;	high address + 1 of data in btemp-1
   311                           
   312  0218  2214  120A  118A   	fcall	init_fetch0
   313  021B  0080               	movwf	0
   314  021C  0A84               	incf	4,f
   315  021D  0804               	movf	4,w
   316  021E  067D               	xorwf	125,w
   317  021F  1903               	btfsc	3,2
   318  0220  3400               	retlw	0
   319  0221  0AFF               	incf	127,f
   320  0222  1903               	btfsc	3,2
   321  0223  0AFE               	incf	126,f
   322  0224  2A18               	goto	init_ram0
   323                           
   324                           	psect	clrtext
   325  023D                     clear_ram0:	
   326                           ;	Called with FSR containing the base address, and
   327                           ;	W with the last address+1
   328                           
   329  023D  0064               	clrwdt	;clear the watchdog before getting into this loop
   330  023E                     clrloop0:
   331  023E  0180               	clrf	0	;clear RAM location pointed to by FSR
   332  023F  0A84               	incf	4,f	;increment pointer
   333  0240  0604               	xorwf	4,w	;XOR with final address
   334  0241  1903               	btfsc	3,2	;have we reached the end yet?
   335  0242  3400               	retlw	0	;all done for this memory range, return
   336  0243  0604               	xorwf	4,w	;XOR again to restore value
   337  0244  2A3E               	goto	clrloop0	;do the next byte
   338                           
   339                           	psect	cstackCOMMON
   340  0070                     __pcstackCOMMON:
   341  0070                     ?_hienthi:
   342  0070                     ??_hienthi:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ?_timer2_initialize:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ?_timer0_initialize:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ?_Count_Up:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0070                     ?_main:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ?___lwdiv:	
   358                           ; 2 bytes @ 0x0
   359                           
   360  0070                     ?___lwmod:	
   361                           ; 2 bytes @ 0x0
   362                           
   363  0070                     ___lwdiv@divisor:	
   364                           ; 2 bytes @ 0x0
   365                           
   366  0070                     ___lwmod@divisor:	
   367                           ; 2 bytes @ 0x0
   368                           
   369                           
   370                           ; 2 bytes @ 0x0
   371  0070                     	ds	2
   372  0072                     ___lwdiv@dividend:
   373  0072                     ___lwmod@dividend:	
   374                           ; 2 bytes @ 0x2
   375                           
   376                           
   377                           ; 2 bytes @ 0x2
   378  0072                     	ds	2
   379  0074                     ??___lwdiv:
   380  0074                     ??___lwmod:	
   381                           ; 1 bytes @ 0x4
   382                           
   383                           
   384                           ; 1 bytes @ 0x4
   385  0074                     	ds	1
   386  0075                     ___lwmod@counter:
   387  0075                     ___lwdiv@quotient:	
   388                           ; 1 bytes @ 0x5
   389                           
   390                           
   391                           ; 2 bytes @ 0x5
   392  0075                     	ds	2
   393  0077                     ___lwdiv@counter:
   394                           
   395                           ; 1 bytes @ 0x7
   396  0077                     	ds	1
   397  0078                     ??_Count_Up:
   398                           
   399                           ; 1 bytes @ 0x8
   400  0078                     	ds	4
   401                           
   402                           	psect	cstackBANK0
   403  0000                     __pcstackBANK0:
   404  0000                     ??_timer2_initialize:
   405  0000                     ??_timer0_initialize:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0000                     ??_main:	
   409                           ; 1 bytes @ 0x0
   410                           
   411                           
   412                           	psect	maintext
   413  00F7                     __pmaintext:	
   414                           ; 1 bytes @ 0x0
   415 ;;
   416 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   417 ;;
   418 ;; *************** function _main *****************
   419 ;; Defined at:
   420 ;;		line 153 in file "Led_7seg.c"
   421 ;; Parameters:    Size  Location     Type
   422 ;;		None
   423 ;; Auto vars:     Size  Location     Type
   424 ;;		None
   425 ;; Return value:  Size  Location     Type
   426 ;;                  2  116[None  ] int 
   427 ;; Registers used:
   428 ;;		wreg, status,2, status,0, pclath, cstack
   429 ;; Tracked objects:
   430 ;;		On entry : B00/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   434 ;;      Params:         0       0       0       0       0
   435 ;;      Locals:         0       0       0       0       0
   436 ;;      Temps:          0       0       0       0       0
   437 ;;      Totals:         0       0       0       0       0
   438 ;;Total ram usage:        0 bytes
   439 ;; Hardware stack levels required when called:    3
   440 ;; This function calls:
   441 ;;		_timer0_initialize
   442 ;;		_timer2_initialize
   443 ;; This function is called by:
   444 ;;		Startup code after reset
   445 ;; This function uses a non-reentrant model
   446 ;;
   447                           
   448                           
   449                           ;psect for function _main
   450  00F7                     _main:
   451                           
   452                           ;Led_7seg.c: 155:      ADCON1 = 0x06;
   453                           
   454                           ;incstack = 0
   455                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   456  00F7  3006               	movlw	6
   457  00F8  1683               	bsf	3,5	;RP0=1, select bank1
   458  00F9  1303               	bcf	3,6	;RP1=0, select bank1
   459  00FA  009F               	movwf	31	;volatile
   460                           
   461                           ;Led_7seg.c: 157:     TRISAbits.TRISA4=1 ;
   462  00FB  1605               	bsf	5,4	;volatile
   463                           
   464                           ;Led_7seg.c: 158:     TRISAbits.TRISA5=1;
   465  00FC  1685               	bsf	5,5	;volatile
   466                           
   467                           ;Led_7seg.c: 159:     TRISEbits.TRISE0=1;
   468  00FD  1409               	bsf	9,0	;volatile
   469                           
   470                           ;Led_7seg.c: 160:     TRISEbits.TRISE1=1;
   471  00FE  1489               	bsf	9,1	;volatile
   472                           
   473                           ;Led_7seg.c: 162:     TRISEbits.TRISE2=0;
   474  00FF  1109               	bcf	9,2	;volatile
   475                           
   476                           ;Led_7seg.c: 163:     TRISAbits.TRISA0=0;
   477  0100  1005               	bcf	5,0	;volatile
   478                           
   479                           ;Led_7seg.c: 164:     TRISAbits.TRISA1=0;
   480  0101  1085               	bcf	5,1	;volatile
   481                           
   482                           ;Led_7seg.c: 165:     TRISAbits.TRISA2=0;
   483  0102  1105               	bcf	5,2	;volatile
   484                           
   485                           ;Led_7seg.c: 166:     TRISAbits.TRISA3=0;
   486  0103  1185               	bcf	5,3	;volatile
   487                           
   488                           ;Led_7seg.c: 167:     TRISD=0;
   489  0104  0188               	clrf	8	;volatile
   490                           
   491                           ;Led_7seg.c: 168:     TRISB=0;
   492  0105  0186               	clrf	6	;volatile
   493                           
   494                           ;Led_7seg.c: 169:     timer0_initialize ();
   495  0106  120A  118A  2225  120A  118A  	fcall	_timer0_initialize
   496                           
   497                           ;Led_7seg.c: 170:     timer2_initialize ();
   498  010B  120A  118A  21FF  120A  118A  	fcall	_timer2_initialize
   499  0110                     l1067:
   500                           
   501                           ;Led_7seg.c: 173:  {;Led_7seg.c: 174:          if(PORTAbits.RA4)
   502  0110  1283               	bcf	3,5	;RP0=0, select bank0
   503  0111  1303               	bcf	3,6	;RP1=0, select bank0
   504  0112  1E05               	btfss	5,4	;volatile
   505  0113  2916               	goto	l1071
   506                           
   507                           ;Led_7seg.c: 175:                pre_kb0=1;
   508  0114  01AE               	clrf	_pre_kb0
   509  0115  0AAE               	incf	_pre_kb0,f
   510  0116                     l1071:
   511                           
   512                           ;Led_7seg.c: 176:          if(pre_kb0&&!PORTAbits.RA4)
   513  0116  082E               	movf	_pre_kb0,w
   514  0117  1D03               	btfss	3,2
   515  0118  1A05               	btfsc	5,4	;volatile
   516  0119  291D               	goto	l1077
   517                           
   518                           ;Led_7seg.c: 177:   {;Led_7seg.c: 179:          pre_kb0=0;
   519  011A  01AE               	clrf	_pre_kb0
   520                           
   521                           ;Led_7seg.c: 180:     num=0;
   522  011B  01A8               	clrf	_num
   523  011C  01A9               	clrf	_num+1
   524  011D                     l1077:
   525                           
   526                           ;Led_7seg.c: 182:         if(PORTAbits.RA5)
   527  011D  1E85               	btfss	5,5	;volatile
   528  011E  2921               	goto	l1081
   529                           
   530                           ;Led_7seg.c: 183:          pre_kb1=1;
   531  011F  01AD               	clrf	_pre_kb1
   532  0120  0AAD               	incf	_pre_kb1,f
   533  0121                     l1081:
   534                           
   535                           ;Led_7seg.c: 184:          if(pre_kb1&&!PORTAbits.RA5)
   536  0121  082D               	movf	_pre_kb1,w
   537  0122  1D03               	btfss	3,2
   538  0123  1A85               	btfsc	5,5	;volatile
   539  0124  2935               	goto	l1093
   540                           
   541                           ;Led_7seg.c: 185:   {;Led_7seg.c: 187:          pre_kb1=0;
   542  0125  01AD               	clrf	_pre_kb1
   543                           
   544                           ;Led_7seg.c: 188:          num++;
   545  0126  3001               	movlw	1
   546  0127  07A8               	addwf	_num,f
   547  0128  1803               	skipnc
   548  0129  0AA9               	incf	_num+1,f
   549  012A  3000               	movlw	0
   550  012B  07A9               	addwf	_num+1,f
   551                           
   552                           ;Led_7seg.c: 189:    if(num==10000)
   553  012C  3010               	movlw	16
   554  012D  0628               	xorwf	_num,w
   555  012E  3027               	movlw	39
   556  012F  1903               	skipnz
   557  0130  0629               	xorwf	_num+1,w
   558  0131  1D03               	btfss	3,2
   559  0132  2935               	goto	l1093
   560                           
   561                           ;Led_7seg.c: 190:     num=0;
   562  0133  01A8               	clrf	_num
   563  0134  01A9               	clrf	_num+1
   564  0135                     l1093:
   565                           
   566                           ;Led_7seg.c: 192:    if(PORTEbits.RE0)
   567  0135  1C09               	btfss	9,0	;volatile
   568  0136  2939               	goto	l1097
   569                           
   570                           ;Led_7seg.c: 193:          pre_kb2=1;
   571  0137  01AC               	clrf	_pre_kb2
   572  0138  0AAC               	incf	_pre_kb2,f
   573  0139                     l1097:
   574                           
   575                           ;Led_7seg.c: 194:          if(pre_kb2&&!PORTEbits.RE0)
   576  0139  082C               	movf	_pre_kb2,w
   577  013A  1D03               	btfss	3,2
   578  013B  1809               	btfsc	9,0	;volatile
   579  013C  2910               	goto	l1067
   580                           
   581                           ;Led_7seg.c: 195:   {;Led_7seg.c: 197:          pre_kb2=0;
   582  013D  01AC               	clrf	_pre_kb2
   583                           
   584                           ;Led_7seg.c: 198:    if(num>0)
   585  013E  0828               	movf	_num,w
   586  013F  0429               	iorwf	_num+1,w
   587  0140  1903               	btfsc	3,2
   588  0141  2910               	goto	l1067
   589                           
   590                           ;Led_7seg.c: 199:          num--;
   591  0142  3001               	movlw	1
   592  0143  02A8               	subwf	_num,f
   593  0144  3000               	movlw	0
   594  0145  1C03               	skipc
   595  0146  03A9               	decf	_num+1,f
   596  0147  02A9               	subwf	_num+1,f
   597  0148  2910               	goto	l1067
   598  0149                     __end_of_main:
   599                           
   600                           	psect	text1
   601  01FF                     __ptext1:	
   602 ;; *************** function _timer2_initialize *****************
   603 ;; Defined at:
   604 ;;		line 79 in file "Led_7seg.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;		None
   607 ;; Auto vars:     Size  Location     Type
   608 ;;		None
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      void 
   611 ;; Registers used:
   612 ;;		wreg
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   618 ;;      Params:         0       0       0       0       0
   619 ;;      Locals:         0       0       0       0       0
   620 ;;      Temps:          0       0       0       0       0
   621 ;;      Totals:         0       0       0       0       0
   622 ;;Total ram usage:        0 bytes
   623 ;; Hardware stack levels used:    1
   624 ;; Hardware stack levels required when called:    2
   625 ;; This function calls:
   626 ;;		Nothing
   627 ;; This function is called by:
   628 ;;		_main
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           
   633                           ;psect for function _timer2_initialize
   634  01FF                     _timer2_initialize:
   635                           
   636                           ;Led_7seg.c: 81:     T2CKPS0=1;
   637                           
   638                           ;incstack = 0
   639                           ; Regs used in _timer2_initialize: [wreg]
   640  01FF  1283               	bcf	3,5	;RP0=0, select bank0
   641  0200  1303               	bcf	3,6	;RP1=0, select bank0
   642  0201  1412               	bsf	18,0	;volatile
   643                           
   644                           ;Led_7seg.c: 82:     T2CKPS1=0;
   645  0202  1092               	bcf	18,1	;volatile
   646                           
   647                           ;Led_7seg.c: 83:     PR2=100;
   648  0203  3064               	movlw	100
   649  0204  1683               	bsf	3,5	;RP0=1, select bank1
   650  0205  1303               	bcf	3,6	;RP1=0, select bank1
   651  0206  0092               	movwf	18	;volatile
   652                           
   653                           ;Led_7seg.c: 84:     TOUTPS0=1;
   654  0207  1283               	bcf	3,5	;RP0=0, select bank0
   655  0208  1303               	bcf	3,6	;RP1=0, select bank0
   656  0209  1592               	bsf	18,3	;volatile
   657                           
   658                           ;Led_7seg.c: 85:     TOUTPS1=1;
   659  020A  1612               	bsf	18,4	;volatile
   660                           
   661                           ;Led_7seg.c: 86:     TOUTPS2=1;
   662  020B  1692               	bsf	18,5	;volatile
   663                           
   664                           ;Led_7seg.c: 87:     TOUTPS2=1;
   665  020C  1692               	bsf	18,5	;volatile
   666                           
   667                           ;Led_7seg.c: 88:     TMR2ON=1;
   668  020D  1512               	bsf	18,2	;volatile
   669                           
   670                           ;Led_7seg.c: 89:     TMR2IE=1;
   671  020E  1683               	bsf	3,5	;RP0=1, select bank1
   672  020F  1303               	bcf	3,6	;RP1=0, select bank1
   673  0210  148C               	bsf	12,1	;volatile
   674                           
   675                           ;Led_7seg.c: 90:     PEIE=1;
   676  0211  170B               	bsf	11,6	;volatile
   677                           
   678                           ;Led_7seg.c: 91:     GIE=1;
   679  0212  178B               	bsf	11,7	;volatile
   680  0213  0008               	return
   681  0214                     __end_of_timer2_initialize:
   682                           
   683                           	psect	text2
   684  0225                     __ptext2:	
   685 ;; *************** function _timer0_initialize *****************
   686 ;; Defined at:
   687 ;;		line 94 in file "Led_7seg.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   701 ;;      Params:         0       0       0       0       0
   702 ;;      Locals:         0       0       0       0       0
   703 ;;      Temps:          0       0       0       0       0
   704 ;;      Totals:         0       0       0       0       0
   705 ;;Total ram usage:        0 bytes
   706 ;; Hardware stack levels used:    1
   707 ;; Hardware stack levels required when called:    2
   708 ;; This function calls:
   709 ;;		Nothing
   710 ;; This function is called by:
   711 ;;		_main
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           
   716                           ;psect for function _timer0_initialize
   717  0225                     _timer0_initialize:
   718                           
   719                           ;Led_7seg.c: 96:     T0CS=0;
   720                           
   721                           ;incstack = 0
   722                           ; Regs used in _timer0_initialize: [wreg]
   723  0225  1683               	bsf	3,5	;RP0=1, select bank1
   724  0226  1303               	bcf	3,6	;RP1=0, select bank1
   725  0227  1281               	bcf	1,5	;volatile
   726                           
   727                           ;Led_7seg.c: 97:     PSA=0;
   728  0228  1181               	bcf	1,3	;volatile
   729                           
   730                           ;Led_7seg.c: 98:     PS0=1;
   731  0229  1401               	bsf	1,0	;volatile
   732                           
   733                           ;Led_7seg.c: 99:     PS1=1;
   734  022A  1481               	bsf	1,1	;volatile
   735                           
   736                           ;Led_7seg.c: 100:     PS2=0;
   737  022B  1101               	bcf	1,2	;volatile
   738                           
   739                           ;Led_7seg.c: 101:     TMR0=5;
   740  022C  3005               	movlw	5
   741  022D  1283               	bcf	3,5	;RP0=0, select bank0
   742  022E  1303               	bcf	3,6	;RP1=0, select bank0
   743  022F  0081               	movwf	1	;volatile
   744                           
   745                           ;Led_7seg.c: 102:     TMR0IE=1;
   746  0230  168B               	bsf	11,5	;volatile
   747                           
   748                           ;Led_7seg.c: 103:     GIE=1;
   749  0231  178B               	bsf	11,7	;volatile
   750  0232  0008               	return
   751  0233                     __end_of_timer0_initialize:
   752                           
   753                           	psect	text3
   754  002B                     __ptext3:	
   755 ;; *************** function _Count_Up *****************
   756 ;; Defined at:
   757 ;;		line 106 in file "Led_7seg.c"
   758 ;; Parameters:    Size  Location     Type
   759 ;;		None
   760 ;; Auto vars:     Size  Location     Type
   761 ;;		None
   762 ;; Return value:  Size  Location     Type
   763 ;;                  1    wreg      void 
   764 ;; Registers used:
   765 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   771 ;;      Params:         0       0       0       0       0
   772 ;;      Locals:         0       0       0       0       0
   773 ;;      Temps:          4       0       0       0       0
   774 ;;      Totals:         4       0       0       0       0
   775 ;;Total ram usage:        4 bytes
   776 ;; Hardware stack levels used:    1
   777 ;; Hardware stack levels required when called:    1
   778 ;; This function calls:
   779 ;;		___lwdiv
   780 ;;		___lwmod
   781 ;;		_hienthi
   782 ;; This function is called by:
   783 ;;		Interrupt level 1
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787                           
   788                           ;psect for function _Count_Up
   789  002B                     _Count_Up:
   790                           
   791                           ;Led_7seg.c: 108:   if (TMR0IE && TMR0IF)
   792  002B  1A8B               	btfsc	11,5	;volatile
   793  002C  1D0B               	btfss	11,2	;volatile
   794  002D  284C               	goto	i1l1001
   795                           
   796                           ;Led_7seg.c: 109:   {;Led_7seg.c: 110:       TMR0=5;
   797  002E  3005               	movlw	5
   798  002F  1283               	bcf	3,5	;RP0=0, select bank0
   799  0030  1303               	bcf	3,6	;RP1=0, select bank0
   800  0031  0081               	movwf	1	;volatile
   801                           
   802                           ;Led_7seg.c: 111:       TMR0IF=0;
   803  0032  110B               	bcf	11,2	;volatile
   804                           
   805                           ;Led_7seg.c: 112:       count_t0++;
   806  0033  3001               	movlw	1
   807  0034  07A0               	addwf	_count_t0,f
   808  0035  1803               	skipnc
   809  0036  0AA1               	incf	_count_t0+1,f
   810  0037  3000               	movlw	0
   811  0038  07A1               	addwf	_count_t0+1,f
   812                           
   813                           ;Led_7seg.c: 114:       if(count_t0==100)
   814  0039  3064               	movlw	100
   815  003A  0620               	xorwf	_count_t0,w
   816  003B  0421               	iorwf	_count_t0+1,w
   817  003C  1D03               	btfss	3,2
   818  003D  284C               	goto	i1l1001
   819                           
   820                           ;Led_7seg.c: 115:   {;Led_7seg.c: 116:       count_t0=0;
   821  003E  01A0               	clrf	_count_t0
   822  003F  01A1               	clrf	_count_t0+1
   823                           
   824                           ;Led_7seg.c: 117:       PORTEbits.RE2=~PORTEbits.RE2;
   825  0040  1003               	clrc
   826  0041  1D09               	btfss	9,2	;volatile
   827  0042  1403               	setc
   828  0043  1C03               	btfss	3,0
   829  0044  2849               	goto	u51_20
   830  0045  1283               	bcf	3,5	;RP0=0, select bank0
   831  0046  1303               	bcf	3,6	;RP1=0, select bank0
   832  0047  1509               	bsf	9,2	;volatile
   833  0048  284C               	goto	i1l1001
   834  0049                     u51_20:
   835  0049  1283               	bcf	3,5	;RP0=0, select bank0
   836  004A  1303               	bcf	3,6	;RP1=0, select bank0
   837  004B  1109               	bcf	9,2	;volatile
   838  004C                     i1l1001:
   839                           
   840                           ;Led_7seg.c: 121:   if (TMR2IE && TMR2IF)
   841  004C  1683               	bsf	3,5	;RP0=1, select bank1
   842  004D  1303               	bcf	3,6	;RP1=0, select bank1
   843  004E  1C8C               	btfss	12,1	;volatile
   844  004F  28EE               	goto	i1l112
   845  0050  1283               	bcf	3,5	;RP0=0, select bank0
   846  0051  1303               	bcf	3,6	;RP1=0, select bank0
   847  0052  1C8C               	btfss	12,1	;volatile
   848  0053  28EE               	goto	i1l112
   849                           
   850                           ;Led_7seg.c: 122: {;Led_7seg.c: 123:   TMR2IF=0;
   851  0054  108C               	bcf	12,1	;volatile
   852                           
   853                           ;Led_7seg.c: 124:     count++;
   854  0055  3001               	movlw	1
   855  0056  07A4               	addwf	_count,f
   856  0057  1803               	skipnc
   857  0058  0AA5               	incf	_count+1,f
   858  0059  3000               	movlw	0
   859  005A  07A5               	addwf	_count+1,f
   860                           
   861                           ;Led_7seg.c: 126:   if(count==5)
   862  005B  3005               	movlw	5
   863  005C  0624               	xorwf	_count,w
   864  005D  0425               	iorwf	_count+1,w
   865  005E  1D03               	btfss	3,2
   866  005F  28EE               	goto	i1l112
   867                           
   868                           ;Led_7seg.c: 127:   {;Led_7seg.c: 128:       count=0;
   869  0060  01A4               	clrf	_count
   870  0061  01A5               	clrf	_count+1
   871                           
   872                           ;Led_7seg.c: 129:       hienthi();
   873  0062  120A  118A  2149  120A  118A  	fcall	_hienthi
   874                           
   875                           ;Led_7seg.c: 130:       digit++;
   876  0067  3001               	movlw	1
   877  0068  00F8               	movwf	??_Count_Up
   878  0069  0878               	movf	??_Count_Up,w
   879  006A  07FC               	addwf	_digit,f
   880                           
   881                           ;Led_7seg.c: 131:       if(digit==4)
   882  006B  3004               	movlw	4
   883  006C  067C               	xorwf	_digit,w
   884  006D  1903               	btfsc	3,2
   885                           
   886                           ;Led_7seg.c: 132:         digit=0;
   887  006E  01FC               	clrf	_digit
   888                           
   889                           ;Led_7seg.c: 133:       count_s++;
   890  006F  3001               	movlw	1
   891  0070  1283               	bcf	3,5	;RP0=0, select bank0
   892  0071  1303               	bcf	3,6	;RP1=0, select bank0
   893  0072  07A2               	addwf	_count_s,f
   894  0073  1803               	skipnc
   895  0074  0AA3               	incf	_count_s+1,f
   896  0075  3000               	movlw	0
   897  0076  07A3               	addwf	_count_s+1,f
   898                           
   899                           ;Led_7seg.c: 134:       if(count_s==25)
   900  0077  3019               	movlw	25
   901  0078  0622               	xorwf	_count_s,w
   902  0079  0423               	iorwf	_count_s+1,w
   903  007A  1D03               	btfss	3,2
   904  007B  28EE               	goto	i1l112
   905                           
   906                           ;Led_7seg.c: 135:       {;Led_7seg.c: 136:           count_s=0;
   907  007C  01A2               	clrf	_count_s
   908  007D  01A3               	clrf	_count_s+1
   909                           
   910                           ;Led_7seg.c: 137:       ngin=num/1000;
   911  007E  30E8               	movlw	232
   912  007F  00F0               	movwf	___lwdiv@divisor
   913  0080  3003               	movlw	3
   914  0081  00F1               	movwf	___lwdiv@divisor+1
   915  0082  0829               	movf	_num+1,w
   916  0083  00F3               	movwf	___lwdiv@dividend+1
   917  0084  0828               	movf	_num,w
   918  0085  00F2               	movwf	___lwdiv@dividend
   919  0086  120A  118A  2191  120A  118A  	fcall	___lwdiv
   920  008B  0870               	movf	?___lwdiv,w
   921  008C  00F8               	movwf	??_Count_Up
   922  008D  0878               	movf	??_Count_Up,w
   923  008E  1283               	bcf	3,5	;RP0=0, select bank0
   924  008F  1303               	bcf	3,6	;RP1=0, select bank0
   925  0090  00AF               	movwf	_ngin
   926                           
   927                           ;Led_7seg.c: 138:        j=num%1000;
   928  0091  30E8               	movlw	232
   929  0092  00F0               	movwf	___lwmod@divisor
   930  0093  3003               	movlw	3
   931  0094  00F1               	movwf	___lwmod@divisor+1
   932  0095  0829               	movf	_num+1,w
   933  0096  00F3               	movwf	___lwmod@dividend+1
   934  0097  0828               	movf	_num,w
   935  0098  00F2               	movwf	___lwmod@dividend
   936  0099  120A  118A  21CD  120A  118A  	fcall	___lwmod
   937  009E  0871               	movf	?___lwmod+1,w
   938  009F  1283               	bcf	3,5	;RP0=0, select bank0
   939  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   940  00A1  00A7               	movwf	_j+1
   941  00A2  0870               	movf	?___lwmod,w
   942  00A3  00A6               	movwf	_j
   943                           
   944                           ;Led_7seg.c: 139:         tram=j/100;
   945  00A4  3064               	movlw	100
   946  00A5  00F0               	movwf	___lwdiv@divisor
   947  00A6  3000               	movlw	0
   948  00A7  00F1               	movwf	___lwdiv@divisor+1
   949  00A8  0827               	movf	_j+1,w
   950  00A9  00F3               	movwf	___lwdiv@dividend+1
   951  00AA  0826               	movf	_j,w
   952  00AB  00F2               	movwf	___lwdiv@dividend
   953  00AC  120A  118A  2191  120A  118A  	fcall	___lwdiv
   954  00B1  0870               	movf	?___lwdiv,w
   955  00B2  00F8               	movwf	??_Count_Up
   956  00B3  0878               	movf	??_Count_Up,w
   957  00B4  1283               	bcf	3,5	;RP0=0, select bank0
   958  00B5  1303               	bcf	3,6	;RP1=0, select bank0
   959  00B6  00B0               	movwf	_tram
   960                           
   961                           ;Led_7seg.c: 140:     j=j%100;
   962  00B7  3064               	movlw	100
   963  00B8  00F0               	movwf	___lwmod@divisor
   964  00B9  3000               	movlw	0
   965  00BA  00F1               	movwf	___lwmod@divisor+1
   966  00BB  0827               	movf	_j+1,w
   967  00BC  00F3               	movwf	___lwmod@dividend+1
   968  00BD  0826               	movf	_j,w
   969  00BE  00F2               	movwf	___lwmod@dividend
   970  00BF  120A  118A  21CD  120A  118A  	fcall	___lwmod
   971  00C4  0871               	movf	?___lwmod+1,w
   972  00C5  1283               	bcf	3,5	;RP0=0, select bank0
   973  00C6  1303               	bcf	3,6	;RP1=0, select bank0
   974  00C7  00A7               	movwf	_j+1
   975  00C8  0870               	movf	?___lwmod,w
   976  00C9  00A6               	movwf	_j
   977                           
   978                           ;Led_7seg.c: 141:        truc=j/10;
   979  00CA  300A               	movlw	10
   980  00CB  00F0               	movwf	___lwdiv@divisor
   981  00CC  3000               	movlw	0
   982  00CD  00F1               	movwf	___lwdiv@divisor+1
   983  00CE  0827               	movf	_j+1,w
   984  00CF  00F3               	movwf	___lwdiv@dividend+1
   985  00D0  0826               	movf	_j,w
   986  00D1  00F2               	movwf	___lwdiv@dividend
   987  00D2  120A  118A  2191  120A  118A  	fcall	___lwdiv
   988  00D7  0870               	movf	?___lwdiv,w
   989  00D8  00F8               	movwf	??_Count_Up
   990  00D9  0878               	movf	??_Count_Up,w
   991  00DA  1283               	bcf	3,5	;RP0=0, select bank0
   992  00DB  1303               	bcf	3,6	;RP1=0, select bank0
   993  00DC  00B1               	movwf	_truc
   994                           
   995                           ;Led_7seg.c: 142:        donvi=j%10;
   996  00DD  300A               	movlw	10
   997  00DE  00F0               	movwf	___lwmod@divisor
   998  00DF  3000               	movlw	0
   999  00E0  00F1               	movwf	___lwmod@divisor+1
  1000  00E1  0827               	movf	_j+1,w
  1001  00E2  00F3               	movwf	___lwmod@dividend+1
  1002  00E3  0826               	movf	_j,w
  1003  00E4  00F2               	movwf	___lwmod@dividend
  1004  00E5  120A  118A  21CD  120A  118A  	fcall	___lwmod
  1005  00EA  0870               	movf	?___lwmod,w
  1006  00EB  00F8               	movwf	??_Count_Up
  1007  00EC  0878               	movf	??_Count_Up,w
  1008  00ED  00FD               	movwf	_donvi
  1009  00EE                     i1l112:
  1010  00EE  087B               	movf	??_Count_Up+3,w
  1011  00EF  008A               	movwf	10
  1012  00F0  087A               	movf	??_Count_Up+2,w
  1013  00F1  0084               	movwf	4
  1014  00F2  0E79               	swapf	??_Count_Up+1,w
  1015  00F3  0083               	movwf	3
  1016  00F4  0EFE               	swapf	126,f
  1017  00F5  0E7E               	swapf	126,w
  1018  00F6  0009               	retfie
  1019  00F7                     __end_of_Count_Up:
  1020                           
  1021                           	psect	intentry
  1022  0004                     __pintentry:	
  1023                           ;incstack = 0
  1024                           ; Regs used in _Count_Up: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1025                           
  1026  0004                     interrupt_function:
  1027  007E                     saved_w	set	btemp
  1028  0004  00FE               	movwf	btemp
  1029  0005  0E03               	swapf	3,w
  1030  0006  00F9               	movwf	??_Count_Up+1
  1031  0007  0804               	movf	4,w
  1032  0008  00FA               	movwf	??_Count_Up+2
  1033  0009  080A               	movf	10,w
  1034  000A  00FB               	movwf	??_Count_Up+3
  1035  000B  120A  118A  282B   	ljmp	_Count_Up
  1036                           
  1037                           	psect	text4
  1038  0149                     __ptext4:	
  1039 ;; *************** function _hienthi *****************
  1040 ;; Defined at:
  1041 ;;		line 53 in file "Led_7seg.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;		None
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;		None
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      void 
  1048 ;; Registers used:
  1049 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1055 ;;      Params:         0       0       0       0       0
  1056 ;;      Locals:         0       0       0       0       0
  1057 ;;      Temps:          2       0       0       0       0
  1058 ;;      Totals:         2       0       0       0       0
  1059 ;;Total ram usage:        2 bytes
  1060 ;; Hardware stack levels used:    1
  1061 ;; This function calls:
  1062 ;;		Nothing
  1063 ;; This function is called by:
  1064 ;;		_Count_Up
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           
  1069                           ;psect for function _hienthi
  1070  0149                     _hienthi:
  1071                           
  1072                           ;Led_7seg.c: 55:      PORTD=0xff;
  1073                           
  1074                           ;incstack = 0
  1075                           ; Regs used in _hienthi: [wreg-fsr0h+status,2+status,0]
  1076  0149  30FF               	movlw	255
  1077  014A  1283               	bcf	3,5	;RP0=0, select bank0
  1078  014B  1303               	bcf	3,6	;RP1=0, select bank0
  1079  014C  0088               	movwf	8	;volatile
  1080                           
  1081                           ;Led_7seg.c: 56:     switch (digit)
  1082  014D  297A               	goto	i1l905
  1083  014E                     i1l90:	
  1084                           ;Led_7seg.c: 57:     {;Led_7seg.c: 58:        case 0:
  1085                           
  1086                           
  1087                           ;Led_7seg.c: 60:         PORTAbits.RA3=1;PORTAbits.RA0=0;PORTAbits.RA1=1;PORTAbits.RA2=1
      +                          ;
  1088  014E  1585               	bsf	5,3	;volatile
  1089  014F  1005               	bcf	5,0	;volatile
  1090  0150  1485               	bsf	5,1	;volatile
  1091  0151  1505               	bsf	5,2	;volatile
  1092                           
  1093                           ;Led_7seg.c: 61:           PORTD=number[ngin];
  1094  0152  082F               	movf	_ngin,w
  1095  0153  3E33               	addlw	(low (_number| 0))& (0+255)
  1096  0154  0084               	movwf	4
  1097  0155  1383               	bcf	3,7	;select IRP bank0
  1098  0156  0800               	movf	0,w
  1099  0157  0088               	movwf	8	;volatile
  1100                           
  1101                           ;Led_7seg.c: 62:           break;
  1102  0158  0008               	return
  1103  0159                     i1l92:	
  1104                           ;Led_7seg.c: 63:         case 1:
  1105                           
  1106                           
  1107                           ;Led_7seg.c: 65:          PORTAbits.RA0=1;PORTAbits.RA1=0;PORTAbits.RA2=1;PORTAbits.RA3=
      +                          1;
  1108  0159  1405               	bsf	5,0	;volatile
  1109  015A  1085               	bcf	5,1	;volatile
  1110  015B  1505               	bsf	5,2	;volatile
  1111  015C  1585               	bsf	5,3	;volatile
  1112                           
  1113                           ;Led_7seg.c: 66:          PORTD=number[tram];
  1114  015D  0830               	movf	_tram,w
  1115  015E  3E33               	addlw	(low (_number| 0))& (0+255)
  1116  015F  0084               	movwf	4
  1117  0160  1383               	bcf	3,7	;select IRP bank0
  1118  0161  0800               	movf	0,w
  1119  0162  0088               	movwf	8	;volatile
  1120                           
  1121                           ;Led_7seg.c: 67:           break;
  1122  0163  0008               	return
  1123  0164                     i1l93:	
  1124                           ;Led_7seg.c: 68:         case 2:
  1125                           
  1126                           
  1127                           ;Led_7seg.c: 70:          PORTAbits.RA0=1;PORTAbits.RA1=1;PORTAbits.RA2=0;PORTAbits.RA3=
      +                          1;
  1128  0164  1405               	bsf	5,0	;volatile
  1129  0165  1485               	bsf	5,1	;volatile
  1130  0166  1105               	bcf	5,2	;volatile
  1131  0167  1585               	bsf	5,3	;volatile
  1132                           
  1133                           ;Led_7seg.c: 71:          PORTD=number[truc];
  1134  0168  0831               	movf	_truc,w
  1135  0169  3E33               	addlw	(low (_number| 0))& (0+255)
  1136  016A  0084               	movwf	4
  1137  016B  1383               	bcf	3,7	;select IRP bank0
  1138  016C  0800               	movf	0,w
  1139  016D  0088               	movwf	8	;volatile
  1140                           
  1141                           ;Led_7seg.c: 72:           break;
  1142  016E  0008               	return
  1143  016F                     i1l94:	
  1144                           ;Led_7seg.c: 73:           case 3:
  1145                           
  1146                           
  1147                           ;Led_7seg.c: 75:          PORTAbits.RA0=1;PORTAbits.RA1=1;PORTAbits.RA2=1;PORTAbits.RA3=
      +                          0;
  1148  016F  1405               	bsf	5,0	;volatile
  1149  0170  1485               	bsf	5,1	;volatile
  1150  0171  1505               	bsf	5,2	;volatile
  1151  0172  1185               	bcf	5,3	;volatile
  1152                           
  1153                           ;Led_7seg.c: 76:          PORTD=number[donvi];
  1154  0173  087D               	movf	_donvi,w
  1155  0174  3E33               	addlw	(low (_number| 0))& (0+255)
  1156  0175  0084               	movwf	4
  1157  0176  1383               	bcf	3,7	;select IRP bank0
  1158  0177  0800               	movf	0,w
  1159  0178  0088               	movwf	8	;volatile
  1160                           
  1161                           ;Led_7seg.c: 77:     }
  1162  0179  0008               	return
  1163  017A                     i1l905:
  1164  017A  087C               	movf	_digit,w
  1165  017B  00F0               	movwf	??_hienthi
  1166  017C  01F1               	clrf	??_hienthi+1
  1167                           
  1168                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1169                           ; Switch size 1, requested type "simple"
  1170                           ; Number of cases is 1, Range of values is 0 to 0
  1171                           ; switch strategies available:
  1172                           ; Name         Instructions Cycles
  1173                           ; simple_byte            4     3 (average)
  1174                           ; direct_byte           11     8 (fixed)
  1175                           ; jumptable            260     6 (fixed)
  1176                           ;	Chosen strategy is simple_byte
  1177  017D  0871               	movf	??_hienthi+1,w
  1178  017E  3A00               	xorlw	0	; case 0
  1179  017F  1903               	skipnz
  1180  0180  2982               	goto	i1l1127
  1181  0181  2990               	goto	i1l95
  1182  0182                     i1l1127:
  1183                           
  1184                           ; Switch size 1, requested type "simple"
  1185                           ; Number of cases is 4, Range of values is 0 to 3
  1186                           ; switch strategies available:
  1187                           ; Name         Instructions Cycles
  1188                           ; simple_byte           13     7 (average)
  1189                           ; direct_byte           20     8 (fixed)
  1190                           ; jumptable            260     6 (fixed)
  1191                           ;	Chosen strategy is simple_byte
  1192  0182  0870               	movf	??_hienthi,w
  1193  0183  3A00               	xorlw	0	; case 0
  1194  0184  1903               	skipnz
  1195  0185  294E               	goto	i1l90
  1196  0186  3A01               	xorlw	1	; case 1
  1197  0187  1903               	skipnz
  1198  0188  2959               	goto	i1l92
  1199  0189  3A03               	xorlw	3	; case 2
  1200  018A  1903               	skipnz
  1201  018B  2964               	goto	i1l93
  1202  018C  3A01               	xorlw	1	; case 3
  1203  018D  1903               	skipnz
  1204  018E  296F               	goto	i1l94
  1205  018F  2990               	goto	i1l95
  1206  0190                     i1l95:
  1207  0190  0008               	return
  1208  0191                     __end_of_hienthi:
  1209                           
  1210                           	psect	text5
  1211  01CD                     __ptext5:	
  1212 ;; *************** function ___lwmod *****************
  1213 ;; Defined at:
  1214 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;  divisor         2    0[COMMON] unsigned int 
  1217 ;;  dividend        2    2[COMMON] unsigned int 
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;  counter         1    5[COMMON] unsigned char 
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  2    0[COMMON] unsigned int 
  1222 ;; Registers used:
  1223 ;;		wreg, status,2, status,0
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1229 ;;      Params:         4       0       0       0       0
  1230 ;;      Locals:         1       0       0       0       0
  1231 ;;      Temps:          1       0       0       0       0
  1232 ;;      Totals:         6       0       0       0       0
  1233 ;;Total ram usage:        6 bytes
  1234 ;; Hardware stack levels used:    1
  1235 ;; This function calls:
  1236 ;;		Nothing
  1237 ;; This function is called by:
  1238 ;;		_Count_Up
  1239 ;; This function uses a non-reentrant model
  1240 ;;
  1241                           
  1242                           
  1243                           ;psect for function ___lwmod
  1244  01CD                     ___lwmod:
  1245                           
  1246                           ;incstack = 0
  1247                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1248  01CD  0870               	movf	___lwmod@divisor,w
  1249  01CE  0471               	iorwf	___lwmod@divisor+1,w
  1250  01CF  1903               	btfsc	3,2
  1251  01D0  29FA               	goto	i1l983
  1252  01D1  01F5               	clrf	___lwmod@counter
  1253  01D2  0AF5               	incf	___lwmod@counter,f
  1254  01D3                     i1l973:
  1255  01D3  1BF1               	btfsc	___lwmod@divisor+1,7
  1256  01D4  29E1               	goto	i1l975
  1257  01D5  3001               	movlw	1
  1258  01D6                     u43_25:
  1259  01D6  1003               	clrc
  1260  01D7  0DF0               	rlf	___lwmod@divisor,f
  1261  01D8  0DF1               	rlf	___lwmod@divisor+1,f
  1262  01D9  3EFF               	addlw	-1
  1263  01DA  1D03               	skipz
  1264  01DB  29D6               	goto	u43_25
  1265  01DC  3001               	movlw	1
  1266  01DD  00F4               	movwf	??___lwmod
  1267  01DE  0874               	movf	??___lwmod,w
  1268  01DF  07F5               	addwf	___lwmod@counter,f
  1269  01E0  29D3               	goto	i1l973
  1270  01E1                     i1l975:
  1271  01E1  0871               	movf	___lwmod@divisor+1,w
  1272  01E2  0273               	subwf	___lwmod@dividend+1,w
  1273  01E3  1D03               	skipz
  1274  01E4  29E7               	goto	u45_25
  1275  01E5  0870               	movf	___lwmod@divisor,w
  1276  01E6  0272               	subwf	___lwmod@dividend,w
  1277  01E7                     u45_25:
  1278  01E7  1C03               	skipc
  1279  01E8  29EF               	goto	i1l979
  1280  01E9  0870               	movf	___lwmod@divisor,w
  1281  01EA  02F2               	subwf	___lwmod@dividend,f
  1282  01EB  0871               	movf	___lwmod@divisor+1,w
  1283  01EC  1C03               	skipc
  1284  01ED  03F3               	decf	___lwmod@dividend+1,f
  1285  01EE  02F3               	subwf	___lwmod@dividend+1,f
  1286  01EF                     i1l979:
  1287  01EF  3001               	movlw	1
  1288  01F0                     u46_25:
  1289  01F0  1003               	clrc
  1290  01F1  0CF1               	rrf	___lwmod@divisor+1,f
  1291  01F2  0CF0               	rrf	___lwmod@divisor,f
  1292  01F3  3EFF               	addlw	-1
  1293  01F4  1D03               	skipz
  1294  01F5  29F0               	goto	u46_25
  1295  01F6  3001               	movlw	1
  1296  01F7  02F5               	subwf	___lwmod@counter,f
  1297  01F8  1D03               	btfss	3,2
  1298  01F9  29E1               	goto	i1l975
  1299  01FA                     i1l983:
  1300  01FA  0873               	movf	___lwmod@dividend+1,w
  1301  01FB  00F1               	movwf	?___lwmod+1
  1302  01FC  0872               	movf	___lwmod@dividend,w
  1303  01FD  00F0               	movwf	?___lwmod
  1304  01FE  0008               	return
  1305  01FF                     __end_of___lwmod:
  1306                           
  1307                           	psect	text6
  1308  0191                     __ptext6:	
  1309 ;; *************** function ___lwdiv *****************
  1310 ;; Defined at:
  1311 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  divisor         2    0[COMMON] unsigned int 
  1314 ;;  dividend        2    2[COMMON] unsigned int 
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;  quotient        2    5[COMMON] unsigned int 
  1317 ;;  counter         1    7[COMMON] unsigned char 
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  2    0[COMMON] unsigned int 
  1320 ;; Registers used:
  1321 ;;		wreg, status,2, status,0
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1327 ;;      Params:         4       0       0       0       0
  1328 ;;      Locals:         3       0       0       0       0
  1329 ;;      Temps:          1       0       0       0       0
  1330 ;;      Totals:         8       0       0       0       0
  1331 ;;Total ram usage:        8 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; This function calls:
  1334 ;;		Nothing
  1335 ;; This function is called by:
  1336 ;;		_Count_Up
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           
  1341                           ;psect for function ___lwdiv
  1342  0191                     ___lwdiv:
  1343                           
  1344                           ;incstack = 0
  1345                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1346  0191  01F5               	clrf	___lwdiv@quotient
  1347  0192  01F6               	clrf	___lwdiv@quotient+1
  1348  0193  0870               	movf	___lwdiv@divisor,w
  1349  0194  0471               	iorwf	___lwdiv@divisor+1,w
  1350  0195  1903               	btfsc	3,2
  1351  0196  29C8               	goto	i1l961
  1352  0197  01F7               	clrf	___lwdiv@counter
  1353  0198  0AF7               	incf	___lwdiv@counter,f
  1354  0199                     i1l949:
  1355  0199  1BF1               	btfsc	___lwdiv@divisor+1,7
  1356  019A  29A7               	goto	i1l951
  1357  019B  3001               	movlw	1
  1358  019C                     u36_25:
  1359  019C  1003               	clrc
  1360  019D  0DF0               	rlf	___lwdiv@divisor,f
  1361  019E  0DF1               	rlf	___lwdiv@divisor+1,f
  1362  019F  3EFF               	addlw	-1
  1363  01A0  1D03               	skipz
  1364  01A1  299C               	goto	u36_25
  1365  01A2  3001               	movlw	1
  1366  01A3  00F4               	movwf	??___lwdiv
  1367  01A4  0874               	movf	??___lwdiv,w
  1368  01A5  07F7               	addwf	___lwdiv@counter,f
  1369  01A6  2999               	goto	i1l949
  1370  01A7                     i1l951:
  1371  01A7  3001               	movlw	1
  1372  01A8                     u38_25:
  1373  01A8  1003               	clrc
  1374  01A9  0DF5               	rlf	___lwdiv@quotient,f
  1375  01AA  0DF6               	rlf	___lwdiv@quotient+1,f
  1376  01AB  3EFF               	addlw	-1
  1377  01AC  1D03               	skipz
  1378  01AD  29A8               	goto	u38_25
  1379  01AE  0871               	movf	___lwdiv@divisor+1,w
  1380  01AF  0273               	subwf	___lwdiv@dividend+1,w
  1381  01B0  1D03               	skipz
  1382  01B1  29B4               	goto	u39_25
  1383  01B2  0870               	movf	___lwdiv@divisor,w
  1384  01B3  0272               	subwf	___lwdiv@dividend,w
  1385  01B4                     u39_25:
  1386  01B4  1C03               	skipc
  1387  01B5  29BD               	goto	i1l957
  1388  01B6  0870               	movf	___lwdiv@divisor,w
  1389  01B7  02F2               	subwf	___lwdiv@dividend,f
  1390  01B8  0871               	movf	___lwdiv@divisor+1,w
  1391  01B9  1C03               	skipc
  1392  01BA  03F3               	decf	___lwdiv@dividend+1,f
  1393  01BB  02F3               	subwf	___lwdiv@dividend+1,f
  1394  01BC  1475               	bsf	___lwdiv@quotient,0
  1395  01BD                     i1l957:
  1396  01BD  3001               	movlw	1
  1397  01BE                     u40_25:
  1398  01BE  1003               	clrc
  1399  01BF  0CF1               	rrf	___lwdiv@divisor+1,f
  1400  01C0  0CF0               	rrf	___lwdiv@divisor,f
  1401  01C1  3EFF               	addlw	-1
  1402  01C2  1D03               	skipz
  1403  01C3  29BE               	goto	u40_25
  1404  01C4  3001               	movlw	1
  1405  01C5  02F7               	subwf	___lwdiv@counter,f
  1406  01C6  1D03               	btfss	3,2
  1407  01C7  29A7               	goto	i1l951
  1408  01C8                     i1l961:
  1409  01C8  0876               	movf	___lwdiv@quotient+1,w
  1410  01C9  00F1               	movwf	?___lwdiv+1
  1411  01CA  0875               	movf	___lwdiv@quotient,w
  1412  01CB  00F0               	movwf	?___lwdiv
  1413  01CC  0008               	return
  1414  01CD                     __end_of___lwdiv:
  1415  007E                     btemp	set	126	;btemp
  1416  007E                     wtemp0	set	126
  1417                           
  1418                           	psect	config
  1419                           
  1420                           ;Config register CONFIG @ 0x2007
  1421                           ;	Oscillator Selection bits
  1422                           ;	FOSC = XT, XT oscillator
  1423                           ;	Watchdog Timer Enable bit
  1424                           ;	WDTE = OFF, WDT disabled
  1425                           ;	Power-up Timer Enable bit
  1426                           ;	PWRTE = ON, PWRT enabled
  1427                           ;	Brown-out Reset Enable bit
  1428                           ;	BOREN = ON, BOR enabled
  1429                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1430                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1431                           ;	Data EEPROM Memory Code Protection bit
  1432                           ;	CPD = OFF, Data EEPROM code protection off
  1433                           ;	Flash Program Memory Write Enable bits
  1434                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1435                           ;	In-Circuit Debugger Mode bit
  1436                           ;	DEBUG = 0x1, unprogrammed default
  1437                           ;	Flash Program Memory Code Protection bit
  1438                           ;	CP = OFF, Code protection off
  1439  2007                     	org	8199
  1440  2007  3FF1               	dw	16369

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      0      29
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Count_Up in COMMON

    _Count_Up->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _Count_Up in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Count_Up in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Count_Up in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Count_Up in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                  _timer0_initialize
                  _timer2_initialize
 ---------------------------------------------------------------------------------
 (1) _timer2_initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer0_initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Count_Up                                             4     4      0    1089
                                              8 COMMON     4     4      0
                            ___lwdiv
                            ___lwmod
                            _hienthi
 ---------------------------------------------------------------------------------
 (3) _hienthi                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     543
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     546
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _timer0_initialize
   _timer2_initialize

 _Count_Up (ROOT)
   ___lwdiv
   ___lwmod
   _hienthi

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      1D       5       36.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2B      12        0.0%
ABS                  0      0      2B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Sep 14 18:06:10 2021

                         _i 002A                           _j 0026                           pc 0002  
                        fsr 0004                         _GIE 005F                         _PS0 0408  
                       _PR2 0092                         _PS1 0409                         _PS2 040A  
                       _PSA 040B                         _num 0028                         fsr0 0004  
                       indf 0000                        l1071 0116                        l1081 0121  
                      l1067 0110                        l1093 0135                        l1077 011D  
                      l1097 0139                        _T0CS 040D                        _PEIE 005E  
                      i1l90 014E                        i1l92 0159                        i1l93 0164  
                      i1l94 016F                        i1l95 0190                        _TMR0 0001  
                      _bLed 0032                        _main 00F7                        _ngin 002F  
                      _tram 0030                        btemp 007E                        _truc 0031  
                      start 000E                       ?_main 0070             __end_of___lwdiv 01CD  
                     i1l112 00EE             __end_of___lwmod 01FF                       i1l905 017A  
                     i1l951 01A7                       i1l961 01C8                       i1l957 01BD  
                     i1l949 0199                       i1l973 01D3                       i1l975 01E1  
                     i1l983 01FA                       i1l979 01EF                       u40_25 01BE  
                     u51_20 0049                       _PORTD 0008                       u43_25 01D6  
                     u36_25 019C                       u45_25 01E7                       u38_25 01A8  
                     u46_25 01F0                       u39_25 01B4                       _TRISB 0086  
                     _TRISD 0088             __end_of_hienthi 0191                       _digit 007C  
                     _donvi 007D                       _count 0024                       pclath 000A  
                     status 0003                       wtemp0 007E             __initialization 0011  
              __end_of_main 0149            __end_of_Count_Up 00F7                      ??_main 0000  
                    _ADCON1 009F                      i1l1001 004C                      i1l1127 0182  
                    _TMR0IE 005D                      _TMR0IF 005A                      _TMR2IE 0461  
                    _TMR2IF 0061                      _TMR2ON 0092                   ??___lwdiv 0074  
                 ??___lwmod 0074                      _number 0033                   ??_hienthi 0070  
                    saved_w 007E     __end_of__initialization 0027              __pcstackCOMMON 0070  
              __pidataBANK0 0233                  __pbssBANK0 0020                   ?_Count_Up 0070  
                __pmaintext 00F7                  __pintentry 0004           _timer0_initialize 0225  
                   _T2CKPS0 0090                     _T2CKPS1 0091          ?_timer0_initialize 0070  
       ??_timer0_initialize 0000                     _TOUTPS0 0093                     _TOUTPS1 0094  
                   _TOUTPS2 0095                  ??_Count_Up 0078   __end_of_timer0_initialize 0233  
                   ___lwdiv 0191                     ___lwmod 01CD           _timer2_initialize 01FF  
                   __ptext1 01FF                     __ptext2 0225                     __ptext3 002B  
                   __ptext4 0149                     __ptext5 01CD                     __ptext6 0191  
        ?_timer2_initialize 0070                     _hienthi 0149                     _count_s 0022  
                   _pre_kb0 002E                     _pre_kb1 002D                     _pre_kb2 002C  
       ??_timer2_initialize 0000                     clrloop0 023E        end_of_initialization 0027  
 __end_of_timer2_initialize 0214                   _PORTAbits 0005                   _PORTEbits 0009  
                 _TRISAbits 0085                   _TRISEbits 0089  __size_of_timer0_initialize 000E  
       start_initialization 0011           __size_of_Count_Up 00CC  __size_of_timer2_initialize 0015  
                init_fetch0 0214                 __pdataBANK0 0033                 __pbssCOMMON 007C  
                 ___latbits 0002               __pcstackBANK0 0000            ___lwdiv@dividend 0072  
                  ?___lwdiv 0070                    ?___lwmod 0070                    ?_hienthi 0070  
          ___lwdiv@quotient 0075           interrupt_function 0004                   clear_ram0 023D  
                  _Count_Up 002B            __size_of___lwdiv 003C            __size_of___lwmod 0032  
          __size_of_hienthi 0048             ___lwdiv@divisor 0070             ___lwdiv@counter 0077  
                  _count_t0 0020               __size_of_main 0052                    init_ram0 0218  
                  intlevel1 0000            ___lwmod@dividend 0072             ___lwmod@divisor 0070  
           ___lwmod@counter 0075  
