

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed May 10 22:12:31 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35     0000                     
    36                           ; Version 2.40
    37                           ; Generated 17/11/2021 GMT
    38                           ; 
    39                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F877A Definitions
    69                           ; 
    70                           ; SFR Addresses
    71     0000                     	;# 
    72     0001                     	;# 
    73     0002                     	;# 
    74     0003                     	;# 
    75     0004                     	;# 
    76     0005                     	;# 
    77     0006                     	;# 
    78     0007                     	;# 
    79     0008                     	;# 
    80     0009                     	;# 
    81     000A                     	;# 
    82     000B                     	;# 
    83     000C                     	;# 
    84     000D                     	;# 
    85     000E                     	;# 
    86     000E                     	;# 
    87     000F                     	;# 
    88     0010                     	;# 
    89     0011                     	;# 
    90     0012                     	;# 
    91     0013                     	;# 
    92     0014                     	;# 
    93     0015                     	;# 
    94     0015                     	;# 
    95     0016                     	;# 
    96     0017                     	;# 
    97     0018                     	;# 
    98     0019                     	;# 
    99     001A                     	;# 
   100     001B                     	;# 
   101     001B                     	;# 
   102     001C                     	;# 
   103     001D                     	;# 
   104     001E                     	;# 
   105     001F                     	;# 
   106     0081                     	;# 
   107     0085                     	;# 
   108     0086                     	;# 
   109     0087                     	;# 
   110     0088                     	;# 
   111     0089                     	;# 
   112     008C                     	;# 
   113     008D                     	;# 
   114     008E                     	;# 
   115     0091                     	;# 
   116     0092                     	;# 
   117     0093                     	;# 
   118     0094                     	;# 
   119     0098                     	;# 
   120     0099                     	;# 
   121     009C                     	;# 
   122     009D                     	;# 
   123     009E                     	;# 
   124     009F                     	;# 
   125     010C                     	;# 
   126     010D                     	;# 
   127     010E                     	;# 
   128     010F                     	;# 
   129     018C                     	;# 
   130     018D                     	;# 
   131     0000                     	;# 
   132     0001                     	;# 
   133     0002                     	;# 
   134     0003                     	;# 
   135     0004                     	;# 
   136     0005                     	;# 
   137     0006                     	;# 
   138     0007                     	;# 
   139     0008                     	;# 
   140     0009                     	;# 
   141     000A                     	;# 
   142     000B                     	;# 
   143     000C                     	;# 
   144     000D                     	;# 
   145     000E                     	;# 
   146     000E                     	;# 
   147     000F                     	;# 
   148     0010                     	;# 
   149     0011                     	;# 
   150     0012                     	;# 
   151     0013                     	;# 
   152     0014                     	;# 
   153     0015                     	;# 
   154     0015                     	;# 
   155     0016                     	;# 
   156     0017                     	;# 
   157     0018                     	;# 
   158     0019                     	;# 
   159     001A                     	;# 
   160     001B                     	;# 
   161     001B                     	;# 
   162     001C                     	;# 
   163     001D                     	;# 
   164     001E                     	;# 
   165     001F                     	;# 
   166     0081                     	;# 
   167     0085                     	;# 
   168     0086                     	;# 
   169     0087                     	;# 
   170     0088                     	;# 
   171     0089                     	;# 
   172     008C                     	;# 
   173     008D                     	;# 
   174     008E                     	;# 
   175     0091                     	;# 
   176     0092                     	;# 
   177     0093                     	;# 
   178     0094                     	;# 
   179     0098                     	;# 
   180     0099                     	;# 
   181     009C                     	;# 
   182     009D                     	;# 
   183     009E                     	;# 
   184     009F                     	;# 
   185     010C                     	;# 
   186     010D                     	;# 
   187     010E                     	;# 
   188     010F                     	;# 
   189     018C                     	;# 
   190     018D                     	;# 
   191     001E                     _ADRESH	set	30
   192     0001                     _TMR0	set	1
   193     001F                     _ADCON0	set	31
   194     000B                     _INTCON	set	11
   195     0008                     _PORTD	set	8
   196     0006                     _PORTB	set	6
   197     00FA                     _GO_nDONE	set	250
   198     0037                     _RB7	set	55
   199     0036                     _RB6	set	54
   200     0034                     _RB4	set	52
   201     002C                     _RA4	set	44
   202     0032                     _RB2	set	50
   203     0035                     _RB5	set	53
   204     0040                     _RD0	set	64
   205     002B                     _RA3	set	43
   206     0031                     _RB1	set	49
   207     0033                     _RB3	set	51
   208     0029                     _RA1	set	41
   209     002D                     _RA5	set	45
   210     002A                     _RA2	set	42
   211     0030                     _RB0	set	48
   212     005A                     _T0IF	set	90
   213     0043                     _RD3	set	67
   214     0042                     _RD2	set	66
   215     0047                     _RD7	set	71
   216     0046                     _RD6	set	70
   217     0045                     _RD5	set	69
   218     0044                     _RD4	set	68
   219     009E                     _ADRESL	set	158
   220     009F                     _ADCON1	set	159
   221     0081                     _OPTION_REG	set	129
   222     0088                     _TRISDbits	set	136
   223     0085                     _TRISA	set	133
   224     0088                     _TRISD	set	136
   225     0086                     _TRISB	set	134
   226                           
   227                           	psect	strings
   228     0800                     __pstrings:
   229     0800                     stringtab:
   230     0800                     __stringtab:
   231     0800                     stringcode:	
   232                           ;	String table - string pointers are 1 byte each
   233                           
   234     0800                     stringdir:
   235     0800  3008               	movlw	high stringdir
   236     0801  008A               	movwf	10
   237     0802  0804               	movf	4,w
   238     0803  0A84               	incf	4,f
   239     0804  0782               	addwf	2,f
   240     0805                     __stringbase:
   241     0805  3400               	retlw	0
   242     0806                     __end_of__stringtab:
   243     0806                     STR_4:
   244     0806  3448               	retlw	72	;'H'
   245     0807  3465               	retlw	101	;'e'
   246     0808  3461               	retlw	97	;'a'
   247     0809  3474               	retlw	116	;'t'
   248     080A  3469               	retlw	105	;'i'
   249     080B  346E               	retlw	110	;'n'
   250     080C  3467               	retlw	103	;'g'
   251     080D  3420               	retlw	32	;' '
   252     080E  3420               	retlw	32	;' '
   253     080F  3420               	retlw	32	;' '
   254     0810  3420               	retlw	32	;' '
   255     0811  3420               	retlw	32	;' '
   256     0812  3420               	retlw	32	;' '
   257     0813  3420               	retlw	32	;' '
   258     0814  3400               	retlw	0
   259     0815                     STR_3:
   260     0815  3443               	retlw	67	;'C'
   261     0816  3461               	retlw	97	;'a'
   262     0817  3470               	retlw	112	;'p'
   263     0818  3420               	retlw	32	;' '
   264     0819  346E               	retlw	110	;'n'
   265     081A  3475               	retlw	117	;'u'
   266     081B  346F               	retlw	111	;'o'
   267     081C  3463               	retlw	99	;'c'
   268     081D  3420               	retlw	32	;' '
   269     081E  3420               	retlw	32	;' '
   270     081F  3420               	retlw	32	;' '
   271     0820  3420               	retlw	32	;' '
   272     0821  3420               	retlw	32	;' '
   273     0822  3420               	retlw	32	;' '
   274     0823  3400               	retlw	0
   275     0824                     STR_1:
   276     0824  3453               	retlw	83	;'S'
   277     0825  3474               	retlw	116	;'t'
   278     0826  3461               	retlw	97	;'a'
   279     0827  346E               	retlw	110	;'n'
   280     0828  3464               	retlw	100	;'d'
   281     0829  3420               	retlw	32	;' '
   282     082A  3442               	retlw	66	;'B'
   283     082B  3479               	retlw	121	;'y'
   284     082C  3420               	retlw	32	;' '
   285     082D  3420               	retlw	32	;' '
   286     082E  3420               	retlw	32	;' '
   287     082F  3420               	retlw	32	;' '
   288     0830  3420               	retlw	32	;' '
   289     0831  3420               	retlw	32	;' '
   290     0832  3400               	retlw	0
   291     0833                     STR_9:
   292     0833  3456               	retlw	86	;'V'
   293     0834  3461               	retlw	97	;'a'
   294     0835  3474               	retlw	116	;'t'
   295     0836  3420               	retlw	32	;' '
   296     0837  3420               	retlw	32	;' '
   297     0838  3420               	retlw	32	;' '
   298     0839  3420               	retlw	32	;' '
   299     083A  3420               	retlw	32	;' '
   300     083B  3420               	retlw	32	;' '
   301     083C  3420               	retlw	32	;' '
   302     083D  3420               	retlw	32	;' '
   303     083E  3420               	retlw	32	;' '
   304     083F  3420               	retlw	32	;' '
   305     0840  3400               	retlw	0
   306     0841                     STR_2:
   307     0841  3446               	retlw	70	;'F'
   308     0842  3469               	retlw	105	;'i'
   309     0843  346E               	retlw	110	;'n'
   310     0844  3469               	retlw	105	;'i'
   311     0845  3473               	retlw	115	;'s'
   312     0846  3468               	retlw	104	;'h'
   313     0847  3420               	retlw	32	;' '
   314     0848  3420               	retlw	32	;' '
   315     0849  3420               	retlw	32	;' '
   316     084A  3420               	retlw	32	;' '
   317     084B  3420               	retlw	32	;' '
   318     084C  3420               	retlw	32	;' '
   319     084D  3420               	retlw	32	;' '
   320     084E  3400               	retlw	0
   321     084F                     STR_7:
   322     084F  3457               	retlw	87	;'W'
   323     0850  3461               	retlw	97	;'a'
   324     0851  3473               	retlw	115	;'s'
   325     0852  3468               	retlw	104	;'h'
   326     0853  3469               	retlw	105	;'i'
   327     0854  346E               	retlw	110	;'n'
   328     0855  3467               	retlw	103	;'g'
   329     0856  3420               	retlw	32	;' '
   330     0857  3420               	retlw	32	;' '
   331     0858  3420               	retlw	32	;' '
   332     0859  3420               	retlw	32	;' '
   333     085A  3420               	retlw	32	;' '
   334     085B  3420               	retlw	32	;' '
   335     085C  3400               	retlw	0
   336     085D                     STR_11:
   337     085D  3420               	retlw	32	;' '
   338     085E  3420               	retlw	32	;' '
   339     085F  3420               	retlw	32	;' '
   340     0860  3420               	retlw	32	;' '
   341     0861  3420               	retlw	32	;' '
   342     0862  3420               	retlw	32	;' '
   343     0863  3420               	retlw	32	;' '
   344     0864  3420               	retlw	32	;' '
   345     0865  3420               	retlw	32	;' '
   346     0866  3420               	retlw	32	;' '
   347     0867  3420               	retlw	32	;' '
   348     0868  3420               	retlw	32	;' '
   349     0869  3400               	retlw	0
   350     086A                     STR_8:
   351     086A  3458               	retlw	88	;'X'
   352     086B  3461               	retlw	97	;'a'
   353     086C  3420               	retlw	32	;' '
   354     086D  346E               	retlw	110	;'n'
   355     086E  3475               	retlw	117	;'u'
   356     086F  346F               	retlw	111	;'o'
   357     0870  3463               	retlw	99	;'c'
   358     0871  3420               	retlw	32	;' '
   359     0872  3420               	retlw	32	;' '
   360     0873  3420               	retlw	32	;' '
   361     0874  3420               	retlw	32	;' '
   362     0875  3420               	retlw	32	;' '
   363     0876  3400               	retlw	0
   364     0877                     STR_10:
   365     0877  3457               	retlw	87	;'W'
   366     0878  3441               	retlw	65	;'A'
   367     0879  3452               	retlw	82	;'R'
   368     087A  344E               	retlw	78	;'N'
   369     087B  3449               	retlw	73	;'I'
   370     087C  344E               	retlw	78	;'N'
   371     087D  3447               	retlw	71	;'G'
   372     087E  3420               	retlw	32	;' '
   373     087F  3421               	retlw	33	;'!'
   374     0880  3421               	retlw	33	;'!'
   375     0881  3421               	retlw	33	;'!'
   376     0882  3421               	retlw	33	;'!'
   377     0883  3400               	retlw	0
   378     0884                     STR_5:
   379     0884  344E               	retlw	78	;'N'
   380     0885  3468               	retlw	104	;'h'
   381     0886  3469               	retlw	105	;'i'
   382     0887  3465               	retlw	101	;'e'
   383     0888  3474               	retlw	116	;'t'
   384     0889  3420               	retlw	32	;' '
   385     088A  3464               	retlw	100	;'d'
   386     088B  346F               	retlw	111	;'o'
   387     088C  343A               	retlw	58	;':'
   388     088D  3400               	retlw	0
   389     088E                     STR_6:
   390     088E  342F               	retlw	47	;'/'
   391     088F  3436               	retlw	54	;'6'
   392     0890  3430               	retlw	48	;'0'
   393     0891  3400               	retlw	0
   394                           
   395                           	psect	cinit
   396     0011                     start_initialization:	
   397                           ; #config settings
   398                           
   399     0011                     __initialization:
   400                           
   401                           ; Clear objects allocated to COMMON
   402     0011  01FB               	clrf	__pbssCOMMON& (0+127)
   403     0012  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   404     0013  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
   405                           
   406                           ; Clear objects allocated to BANK0
   407     0014  1283               	bcf	3,5	;RP0=0, select bank0
   408     0015  1303               	bcf	3,6	;RP1=0, select bank0
   409     0016  01D7               	clrf	__pbssBANK0& (0+127)
   410     0017  01D8               	clrf	(__pbssBANK0+1)& (0+127)
   411     0018  01D9               	clrf	(__pbssBANK0+2)& (0+127)
   412     0019  01DA               	clrf	(__pbssBANK0+3)& (0+127)
   413     001A  01DB               	clrf	(__pbssBANK0+4)& (0+127)
   414     001B  01DC               	clrf	(__pbssBANK0+5)& (0+127)
   415     001C  01DD               	clrf	(__pbssBANK0+6)& (0+127)
   416     001D  01DE               	clrf	(__pbssBANK0+7)& (0+127)
   417     001E  01DF               	clrf	(__pbssBANK0+8)& (0+127)
   418     001F  01E0               	clrf	(__pbssBANK0+9)& (0+127)
   419     0020  01E1               	clrf	(__pbssBANK0+10)& (0+127)
   420     0021  01E2               	clrf	(__pbssBANK0+11)& (0+127)
   421     0022  01E3               	clrf	(__pbssBANK0+12)& (0+127)
   422     0023                     end_of_initialization:	
   423                           ;End of C runtime variable initialization code
   424                           
   425     0023                     __end_of__initialization:
   426     0023  0183               	clrf	3
   427     0024  120A  158A  2D92   	ljmp	_main	;jump to C main() function
   428                           
   429                           	psect	bssCOMMON
   430     007B                     __pbssCOMMON:
   431     007B                     _cnt:
   432     007B                     	ds	2
   433     007D                     _MODE:
   434     007D                     	ds	1
   435                           
   436                           	psect	bssBANK0
   437     0057                     __pbssBANK0:
   438     0057                     _p:
   439     0057                     	ds	2
   440     0059                     _s2:
   441     0059                     	ds	2
   442     005B                     _s1:
   443     005B                     	ds	2
   444     005D                     _temp:
   445     005D                     	ds	2
   446     005F                     _adcval:
   447     005F                     	ds	2
   448     0061                     _alarm_flag:
   449     0061                     	ds	1
   450     0062                     _CHIEU:
   451     0062                     	ds	1
   452     0063                     _HEAVY:
   453     0063                     	ds	1
   454                           
   455                           	psect	cstackCOMMON
   456     0070                     __pcstackCOMMON:
   457     0070                     ?_washing:
   458     0070                     ?_off:	
   459                           ; 1 bytes @ 0x0
   460                           
   461     0070                     ?_adc:	
   462                           ; 1 bytes @ 0x0
   463                           
   464     0070                     ?_motor:	
   465                           ; 1 bytes @ 0x0
   466                           
   467     0070                     ?_alarm_mode:	
   468                           ; 1 bytes @ 0x0
   469                           
   470     0070                     ?_Lcd_Port:	
   471                           ; 1 bytes @ 0x0
   472                           
   473     0070                     ?_Lcd_Cmd:	
   474                           ; 1 bytes @ 0x0
   475                           
   476     0070                     ?_Lcd_Clear:	
   477                           ; 1 bytes @ 0x0
   478                           
   479     0070                     ?_Lcd_Init:	
   480                           ; 1 bytes @ 0x0
   481                           
   482     0070                     ?_Lcd_Write_Char:	
   483                           ; 1 bytes @ 0x0
   484                           
   485     0070                     ?_Lcd_Write_String:	
   486                           ; 1 bytes @ 0x0
   487                           
   488     0070                     ?_main:	
   489                           ; 1 bytes @ 0x0
   490                           
   491     0070                     ?_isr1:	
   492                           ; 1 bytes @ 0x0
   493                           
   494     0070                     ?i1___lwmod:	
   495                           ; 1 bytes @ 0x0
   496                           
   497     0070                     i1___lwmod@divisor:	
   498                           ; 2 bytes @ 0x0
   499                           
   500                           
   501                           ; 2 bytes @ 0x0
   502     0070                     	ds	2
   503     0072                     i1___lwmod@dividend:
   504                           
   505                           ; 2 bytes @ 0x2
   506     0072                     	ds	2
   507     0074                     ??i1___lwmod:
   508                           
   509                           ; 1 bytes @ 0x4
   510     0074                     	ds	1
   511     0075                     i1___lwmod@counter:
   512                           
   513                           ; 1 bytes @ 0x5
   514     0075                     	ds	1
   515     0076                     ??_isr1:
   516                           
   517                           ; 1 bytes @ 0x6
   518     0076                     	ds	5
   519                           
   520                           	psect	cstackBANK0
   521     0020                     __pcstackBANK0:
   522     0020                     ??_off:
   523     0020                     ??_motor:	
   524                           ; 1 bytes @ 0x0
   525                           
   526     0020                     ??_Lcd_Port:	
   527                           ; 1 bytes @ 0x0
   528                           
   529     0020                     ?__Umul8_16:	
   530                           ; 1 bytes @ 0x0
   531                           
   532     0020                     ?___lwmod:	
   533                           ; 2 bytes @ 0x0
   534                           
   535     0020                     ?___xxtofl:	
   536                           ; 2 bytes @ 0x0
   537                           
   538     0020                     Lcd_Port@a:	
   539                           ; 4 bytes @ 0x0
   540                           
   541     0020                     __Umul8_16@multiplicand:	
   542                           ; 1 bytes @ 0x0
   543                           
   544     0020                     ___lwmod@divisor:	
   545                           ; 1 bytes @ 0x0
   546                           
   547     0020                     ___xxtofl@val:	
   548                           ; 2 bytes @ 0x0
   549                           
   550                           
   551                           ; 4 bytes @ 0x0
   552     0020                     	ds	1
   553     0021                     ??_Lcd_Cmd:
   554     0021                     ??_Lcd_Write_Char:	
   555                           ; 1 bytes @ 0x1
   556                           
   557                           
   558                           ; 1 bytes @ 0x1
   559     0021                     	ds	1
   560     0022                     ??__Umul8_16:
   561     0022                     Lcd_Write_Char@temp:	
   562                           ; 1 bytes @ 0x2
   563                           
   564     0022                     ___lwmod@dividend:	
   565                           ; 1 bytes @ 0x2
   566                           
   567                           
   568                           ; 2 bytes @ 0x2
   569     0022                     	ds	1
   570     0023                     Lcd_Cmd@a:
   571     0023                     Lcd_Write_Char@y:	
   572                           ; 1 bytes @ 0x3
   573                           
   574                           
   575                           ; 1 bytes @ 0x3
   576     0023                     	ds	1
   577     0024                     ??_Lcd_Clear:
   578     0024                     ?_Lcd_Set_Cursor:	
   579                           ; 1 bytes @ 0x4
   580                           
   581     0024                     ??_Lcd_Init:	
   582                           ; 1 bytes @ 0x4
   583                           
   584     0024                     ??___lwmod:	
   585                           ; 1 bytes @ 0x4
   586                           
   587     0024                     ??___xxtofl:	
   588                           ; 1 bytes @ 0x4
   589                           
   590     0024                     Lcd_Set_Cursor@b:	
   591                           ; 1 bytes @ 0x4
   592                           
   593     0024                     Lcd_Write_Char@a:	
   594                           ; 1 bytes @ 0x4
   595                           
   596     0024                     __Umul8_16@product:	
   597                           ; 1 bytes @ 0x4
   598                           
   599                           
   600                           ; 2 bytes @ 0x4
   601     0024                     	ds	1
   602     0025                     ??_Lcd_Set_Cursor:
   603     0025                     ??_Lcd_Write_String:	
   604                           ; 1 bytes @ 0x5
   605                           
   606     0025                     ___lwmod@counter:	
   607                           ; 1 bytes @ 0x5
   608                           
   609     0025                     Lcd_Write_String@i:	
   610                           ; 1 bytes @ 0x5
   611                           
   612                           
   613                           ; 2 bytes @ 0x5
   614     0025                     	ds	1
   615     0026                     ?___lwdiv:
   616     0026                     Lcd_Set_Cursor@a:	
   617                           ; 2 bytes @ 0x6
   618                           
   619     0026                     ___lwdiv@divisor:	
   620                           ; 1 bytes @ 0x6
   621                           
   622     0026                     __Umul8_16@word_mpld:	
   623                           ; 2 bytes @ 0x6
   624                           
   625                           
   626                           ; 2 bytes @ 0x6
   627     0026                     	ds	1
   628     0027                     Lcd_Set_Cursor@z:
   629     0027                     Lcd_Write_String@a:	
   630                           ; 1 bytes @ 0x7
   631                           
   632                           
   633                           ; 1 bytes @ 0x7
   634     0027                     	ds	1
   635     0028                     Lcd_Set_Cursor@y:
   636     0028                     __Umul8_16@multiplier:	
   637                           ; 1 bytes @ 0x8
   638                           
   639     0028                     ___xxtofl@sign:	
   640                           ; 1 bytes @ 0x8
   641                           
   642     0028                     ___lwdiv@dividend:	
   643                           ; 1 bytes @ 0x8
   644                           
   645                           
   646                           ; 2 bytes @ 0x8
   647     0028                     	ds	1
   648     0029                     Lcd_Set_Cursor@temp:
   649     0029                     ___xxtofl@exp:	
   650                           ; 1 bytes @ 0x9
   651                           
   652                           
   653                           ; 1 bytes @ 0x9
   654     0029                     	ds	1
   655     002A                     ??_alarm_mode:
   656     002A                     ??___lwdiv:	
   657                           ; 1 bytes @ 0xA
   658                           
   659     002A                     ___xxtofl@arg:	
   660                           ; 1 bytes @ 0xA
   661                           
   662                           
   663                           ; 4 bytes @ 0xA
   664     002A                     	ds	1
   665     002B                     ___lwdiv@quotient:
   666                           
   667                           ; 2 bytes @ 0xB
   668     002B                     	ds	2
   669     002D                     ___lwdiv@counter:
   670                           
   671                           ; 1 bytes @ 0xD
   672     002D                     	ds	1
   673     002E                     ?___flmul:
   674     002E                     ___flmul@b:	
   675                           ; 4 bytes @ 0xE
   676                           
   677                           
   678                           ; 4 bytes @ 0xE
   679     002E                     	ds	4
   680     0032                     ___flmul@a:
   681                           
   682                           ; 4 bytes @ 0x12
   683     0032                     	ds	4
   684     0036                     ??___flmul:
   685                           
   686                           ; 1 bytes @ 0x16
   687     0036                     	ds	5
   688     003B                     ___flmul@sign:
   689                           
   690                           ; 1 bytes @ 0x1B
   691     003B                     	ds	1
   692     003C                     ___flmul@grs:
   693                           
   694                           ; 4 bytes @ 0x1C
   695     003C                     	ds	4
   696     0040                     ___flmul@aexp:
   697                           
   698                           ; 1 bytes @ 0x20
   699     0040                     	ds	1
   700     0041                     ___flmul@bexp:
   701                           
   702                           ; 1 bytes @ 0x21
   703     0041                     	ds	1
   704     0042                     ___flmul@prod:
   705                           
   706                           ; 4 bytes @ 0x22
   707     0042                     	ds	4
   708     0046                     ___flmul@temp:
   709                           
   710                           ; 2 bytes @ 0x26
   711     0046                     	ds	2
   712     0048                     ?___fltol:
   713     0048                     ___fltol@f1:	
   714                           ; 4 bytes @ 0x28
   715                           
   716                           
   717                           ; 4 bytes @ 0x28
   718     0048                     	ds	4
   719     004C                     ??___fltol:
   720                           
   721                           ; 1 bytes @ 0x2C
   722     004C                     	ds	4
   723     0050                     ___fltol@sign1:
   724                           
   725                           ; 1 bytes @ 0x30
   726     0050                     	ds	1
   727     0051                     ___fltol@exp1:
   728                           
   729                           ; 1 bytes @ 0x31
   730     0051                     	ds	1
   731     0052                     ??_adc:
   732                           
   733                           ; 1 bytes @ 0x32
   734     0052                     	ds	1
   735     0053                     ??_washing:
   736                           
   737                           ; 1 bytes @ 0x33
   738     0053                     	ds	2
   739     0055                     ??_main:
   740                           
   741                           ; 1 bytes @ 0x35
   742     0055                     	ds	2
   743                           
   744                           	psect	maintext
   745     0D92                     __pmaintext:	
   746 ;;
   747 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   748 ;;
   749 ;; *************** function _main *****************
   750 ;; Defined at:
   751 ;;		line 58 in file "may giat.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;		None
   754 ;; Auto vars:     Size  Location     Type
   755 ;;		None
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   760 ;; Tracked objects:
   761 ;;		On entry : B00/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   765 ;;      Params:         0       0       0       0       0
   766 ;;      Locals:         0       0       0       0       0
   767 ;;      Temps:          0       2       0       0       0
   768 ;;      Totals:         0       2       0       0       0
   769 ;;Total ram usage:        2 bytes
   770 ;; Hardware stack levels required when called: 7
   771 ;; This function calls:
   772 ;;		_Lcd_Init
   773 ;;		_washing
   774 ;; This function is called by:
   775 ;;		Startup code after reset
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779     0D92                     _main:	
   780                           ;psect for function _main
   781                           
   782     0D92                     l2130:	
   783                           ;incstack = 0
   784                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   785                           
   786                           
   787                           ;may giat.c: 60:   TRISB = PORTB = 0;
   788     0D92  1283               	bcf	3,5	;RP0=0, select bank0
   789     0D93  1303               	bcf	3,6	;RP1=0, select bank0
   790     0D94  0186               	clrf	6	;volatile
   791     0D95  1683               	bsf	3,5	;RP0=1, select bank1
   792     0D96  1303               	bcf	3,6	;RP1=0, select bank1
   793     0D97  0186               	clrf	6	;volatile
   794     0D98                     l2132:
   795                           
   796                           ;may giat.c: 61:   TRISD = PORTD = 0b00000001;
   797     0D98  3001               	movlw	1
   798     0D99  1283               	bcf	3,5	;RP0=0, select bank0
   799     0D9A  1303               	bcf	3,6	;RP1=0, select bank0
   800     0D9B  0088               	movwf	8	;volatile
   801     0D9C  1683               	bsf	3,5	;RP0=1, select bank1
   802     0D9D  1303               	bcf	3,6	;RP1=0, select bank1
   803     0D9E  0088               	movwf	8	;volatile
   804     0D9F                     l2134:
   805                           
   806                           ;may giat.c: 62:   TRISA = 0xff;
   807     0D9F  30FF               	movlw	255
   808     0DA0  0085               	movwf	5	;volatile
   809     0DA1                     l2136:
   810                           
   811                           ;may giat.c: 63:   TRISDbits.TRISD0 = 1;
   812     0DA1  1408               	bsf	8,0	;volatile
   813     0DA2                     l2138:
   814                           
   815                           ;may giat.c: 64:   Lcd_Init();
   816     0DA2  120A  158A  270A  120A  158A  	fcall	_Lcd_Init
   817     0DA7                     l2140:
   818                           
   819                           ;may giat.c: 65:   OPTION_REG=0b00000111;
   820     0DA7  3007               	movlw	7
   821     0DA8  1683               	bsf	3,5	;RP0=1, select bank1
   822     0DA9  1303               	bcf	3,6	;RP1=0, select bank1
   823     0DAA  0081               	movwf	1	;volatile
   824     0DAB                     l2142:
   825                           
   826                           ;may giat.c: 66:   INTCON=0b10100000;
   827     0DAB  30A0               	movlw	160
   828     0DAC  008B               	movwf	11	;volatile
   829     0DAD                     l2144:
   830                           
   831                           ;may giat.c: 67:   ADCON0=0b10000001;
   832     0DAD  3081               	movlw	129
   833     0DAE  1283               	bcf	3,5	;RP0=0, select bank0
   834     0DAF  1303               	bcf	3,6	;RP1=0, select bank0
   835     0DB0  009F               	movwf	31	;volatile
   836     0DB1                     l2146:
   837                           
   838                           ;may giat.c: 68:   ADCON1=0b10001110;
   839     0DB1  308E               	movlw	142
   840     0DB2  1683               	bsf	3,5	;RP0=1, select bank1
   841     0DB3  1303               	bcf	3,6	;RP1=0, select bank1
   842     0DB4  009F               	movwf	31	;volatile
   843     0DB5                     l2148:
   844                           
   845                           ;may giat.c: 69:   _delay((unsigned long)((5)*(20000000/4000.0)));
   846     0DB5  3021               	movlw	33
   847     0DB6  1283               	bcf	3,5	;RP0=0, select bank0
   848     0DB7  1303               	bcf	3,6	;RP1=0, select bank0
   849     0DB8  00D6               	movwf	??_main+1
   850     0DB9  3075               	movlw	117
   851     0DBA  00D5               	movwf	??_main
   852     0DBB                     u2577:
   853     0DBB  0BD5               	decfsz	??_main,f
   854     0DBC  2DBB               	goto	u2577
   855     0DBD  0BD6               	decfsz	??_main+1,f
   856     0DBE  2DBB               	goto	u2577
   857     0DBF  2DC0               	nop2
   858     0DC0                     l2150:
   859                           
   860                           ;may giat.c: 71:   {;may giat.c: 72:     washing();
   861     0DC0  120A  118A  236C  120A  158A  	fcall	_washing
   862     0DC5  2DC0               	goto	l2150
   863     0DC6  120A  118A  280E   	ljmp	start
   864     0DC9                     __end_of_main:
   865                           
   866                           	psect	text1
   867     036C                     __ptext1:	
   868 ;; *************** function _washing *****************
   869 ;; Defined at:
   870 ;;		line 114 in file "may giat.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;		None
   873 ;; Auto vars:     Size  Location     Type
   874 ;;		None
   875 ;; Return value:  Size  Location     Type
   876 ;;                  1    wreg      void 
   877 ;; Registers used:
   878 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   884 ;;      Params:         0       0       0       0       0
   885 ;;      Locals:         0       0       0       0       0
   886 ;;      Temps:          0       2       0       0       0
   887 ;;      Totals:         0       2       0       0       0
   888 ;;Total ram usage:        2 bytes
   889 ;; Hardware stack levels used: 1
   890 ;; Hardware stack levels required when called: 6
   891 ;; This function calls:
   892 ;;		_Lcd_Clear
   893 ;;		_Lcd_Set_Cursor
   894 ;;		_Lcd_Write_Char
   895 ;;		_Lcd_Write_String
   896 ;;		___lwdiv
   897 ;;		___lwmod
   898 ;;		_adc
   899 ;;		_alarm_mode
   900 ;;		_motor
   901 ;;		_off
   902 ;; This function is called by:
   903 ;;		_main
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907     036C                     _washing:	
   908                           ;psect for function _washing
   909                           
   910     036C                     l1926:	
   911                           ;incstack = 0
   912                           ; Regs used in _washing: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   913                           
   914                           
   915                           ;may giat.c: 116:     switch(MODE)
   916     036C  2BB6               	goto	l1962
   917     036D                     l1928:
   918                           
   919                           ;may giat.c: 119:             Lcd_Set_Cursor(1,1);
   920     036D  01A4               	clrf	Lcd_Set_Cursor@b
   921     036E  0AA4               	incf	Lcd_Set_Cursor@b,f
   922     036F  3001               	movlw	1
   923     0370  120A  158A  26BE  120A  118A  	fcall	_Lcd_Set_Cursor
   924     0375                     l1930:
   925                           
   926                           ;may giat.c: 120:             Lcd_Write_String("Stand By      ");
   927     0375  301F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   928     0376  120A  158A  253F  120A  118A  	fcall	_Lcd_Write_String
   929     037B                     l1932:
   930                           
   931                           ;may giat.c: 121:             alarm_flag = 0;
   932     037B  1283               	bcf	3,5	;RP0=0, select bank0
   933     037C  1303               	bcf	3,6	;RP1=0, select bank0
   934     037D  01E1               	clrf	_alarm_flag
   935     037E                     l1934:
   936                           
   937                           ;may giat.c: 122:             if (!RA2) HEAVY = 1; else HEAVY = 0;
   938     037E  1905               	btfsc	5,2	;volatile
   939     037F  2B81               	goto	u2221
   940     0380  2B82               	goto	u2220
   941     0381                     u2221:
   942     0381  2B85               	goto	l1938
   943     0382                     u2220:
   944     0382                     l1936:
   945     0382  01E3               	clrf	_HEAVY
   946     0383  0AE3               	incf	_HEAVY,f
   947     0384  2B86               	goto	l1940
   948     0385                     l1938:
   949     0385  01E3               	clrf	_HEAVY
   950     0386                     l1940:
   951                           
   952                           ;may giat.c: 123:             if(!RA5) {
   953     0386  1A85               	btfsc	5,5	;volatile
   954     0387  2B89               	goto	u2231
   955     0388  2B8A               	goto	u2230
   956     0389                     u2231:
   957     0389  2BC8               	goto	l175
   958     038A                     u2230:
   959     038A                     l1942:
   960                           
   961                           ;may giat.c: 124:                 Lcd_Clear();
   962     038A  120A  118A  27ED  120A  118A  	fcall	_Lcd_Clear
   963     038F                     l1944:
   964                           
   965                           ;may giat.c: 125:                 MODE = 1;}
   966     038F  01FD               	clrf	_MODE
   967     0390  0AFD               	incf	_MODE,f
   968     0391  2BC8               	goto	l175
   969     0392                     l1946:
   970                           
   971                           ;may giat.c: 128:             Lcd_Set_Cursor(1,1);
   972     0392  01A4               	clrf	Lcd_Set_Cursor@b
   973     0393  0AA4               	incf	Lcd_Set_Cursor@b,f
   974     0394  3001               	movlw	1
   975     0395  120A  158A  26BE  120A  118A  	fcall	_Lcd_Set_Cursor
   976     039A                     l1948:
   977                           
   978                           ;may giat.c: 129:             Lcd_Write_String("Finish       ");
   979     039A  303C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   980     039B  120A  158A  253F  120A  118A  	fcall	_Lcd_Write_String
   981     03A0                     l1950:
   982                           
   983                           ;may giat.c: 130:             alarm_flag = 1;
   984     03A0  1283               	bcf	3,5	;RP0=0, select bank0
   985     03A1  1303               	bcf	3,6	;RP1=0, select bank0
   986     03A2  01E1               	clrf	_alarm_flag
   987     03A3  0AE1               	incf	_alarm_flag,f
   988     03A4                     l1952:
   989                           
   990                           ;may giat.c: 131:             off();
   991     03A4  120A  158A  24B9  120A  118A  	fcall	_off
   992     03A9                     l1954:
   993                           
   994                           ;may giat.c: 132:             if(RA1){Lcd_Clear();
   995     03A9  1283               	bcf	3,5	;RP0=0, select bank0
   996     03AA  1303               	bcf	3,6	;RP1=0, select bank0
   997     03AB  1C85               	btfss	5,1	;volatile
   998     03AC  2BAE               	goto	u2241
   999     03AD  2BAF               	goto	u2240
  1000     03AE                     u2241:
  1001     03AE  2BC8               	goto	l175
  1002     03AF                     u2240:
  1003     03AF                     l1956:
  1004     03AF  120A  118A  27ED  120A  118A  	fcall	_Lcd_Clear
  1005     03B4                     l1958:
  1006                           
  1007                           ;may giat.c: 133:                 MODE = 0;}
  1008     03B4  01FD               	clrf	_MODE
  1009     03B5  2BC8               	goto	l175
  1010     03B6                     l1962:
  1011     03B6  087D               	movf	_MODE,w
  1012     03B7  1283               	bcf	3,5	;RP0=0, select bank0
  1013     03B8  1303               	bcf	3,6	;RP1=0, select bank0
  1014     03B9  00D3               	movwf	??_washing
  1015     03BA  01D4               	clrf	??_washing+1
  1016                           
  1017                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1018                           ; Switch size 1, requested type "simple"
  1019                           ; Number of cases is 1, Range of values is 0 to 0
  1020                           ; switch strategies available:
  1021                           ; Name         Instructions Cycles
  1022                           ; simple_byte            4     3 (average)
  1023                           ; direct_byte           11     8 (fixed)
  1024                           ; jumptable            260     6 (fixed)
  1025                           ;	Chosen strategy is simple_byte
  1026     03BB  0854               	movf	??_washing+1,w
  1027     03BC  3A00               	xorlw	0	; case 0
  1028     03BD  1903               	skipnz
  1029     03BE  2BC0               	goto	l2268
  1030     03BF  2BC8               	goto	l175
  1031     03C0                     l2268:
  1032                           
  1033                           ; Switch size 1, requested type "simple"
  1034                           ; Number of cases is 2, Range of values is 0 to 6
  1035                           ; switch strategies available:
  1036                           ; Name         Instructions Cycles
  1037                           ; simple_byte            7     4 (average)
  1038                           ; direct_byte           29     8 (fixed)
  1039                           ; jumptable            260     6 (fixed)
  1040                           ;	Chosen strategy is simple_byte
  1041     03C0  0853               	movf	??_washing,w
  1042     03C1  3A00               	xorlw	0	; case 0
  1043     03C2  1903               	skipnz
  1044     03C3  2B6D               	goto	l1928
  1045     03C4  3A06               	xorlw	6	; case 6
  1046     03C5  1903               	skipnz
  1047     03C6  2B92               	goto	l1946
  1048     03C7  2BC8               	goto	l175
  1049     03C8                     l175:
  1050                           
  1051                           ;may giat.c: 137:     if(!RA1)
  1052     03C8  1283               	bcf	3,5	;RP0=0, select bank0
  1053     03C9  1303               	bcf	3,6	;RP1=0, select bank0
  1054     03CA  1885               	btfsc	5,1	;volatile
  1055     03CB  2BCD               	goto	u2251
  1056     03CC  2BCE               	goto	u2250
  1057     03CD                     u2251:
  1058     03CD  2DC3               	goto	l2096
  1059     03CE                     u2250:
  1060     03CE                     l1964:
  1061                           
  1062                           ;may giat.c: 138:     {;may giat.c: 139:         if(MODE!=6)alarm_flag = 0;
  1063     03CE  3006               	movlw	6
  1064     03CF  067D               	xorwf	_MODE,w
  1065     03D0  1903               	btfsc	3,2
  1066     03D1  2BD3               	goto	u2261
  1067     03D2  2BD4               	goto	u2260
  1068     03D3                     u2261:
  1069     03D3  2DA9               	goto	l2094
  1070     03D4                     u2260:
  1071     03D4                     l1966:
  1072     03D4  01E1               	clrf	_alarm_flag
  1073     03D5  2DA9               	goto	l2094
  1074     03D6                     l1968:
  1075                           
  1076                           ;may giat.c: 143:                 Lcd_Set_Cursor(1,1);
  1077     03D6  01A4               	clrf	Lcd_Set_Cursor@b
  1078     03D7  0AA4               	incf	Lcd_Set_Cursor@b,f
  1079     03D8  3001               	movlw	1
  1080     03D9  120A  158A  26BE  120A  118A  	fcall	_Lcd_Set_Cursor
  1081     03DE                     l1970:
  1082                           
  1083                           ;may giat.c: 144:                 Lcd_Write_String("Cap nuoc      ");
  1084     03DE  3010               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1085     03DF  120A  158A  253F  120A  118A  	fcall	_Lcd_Write_String
  1086     03E4                     l1972:
  1087                           
  1088                           ;may giat.c: 145:                 RB3 = 1;
  1089     03E4  1283               	bcf	3,5	;RP0=0, select bank0
  1090     03E5  1303               	bcf	3,6	;RP1=0, select bank0
  1091     03E6  1586               	bsf	6,3	;volatile
  1092     03E7                     l1974:
  1093                           
  1094                           ;may giat.c: 146:                 RB1 = 1;
  1095     03E7  1486               	bsf	6,1	;volatile
  1096     03E8                     l1976:
  1097                           
  1098                           ;may giat.c: 147:                 if(HEAVY)
  1099     03E8  0863               	movf	_HEAVY,w
  1100     03E9  1903               	btfsc	3,2
  1101     03EA  2BEC               	goto	u2271
  1102     03EB  2BED               	goto	u2270
  1103     03EC                     u2271:
  1104     03EC  2BFB               	goto	l182
  1105     03ED                     u2270:
  1106     03ED                     l1978:
  1107                           
  1108                           ;may giat.c: 148:                 {if(!RA3){
  1109     03ED  1985               	btfsc	5,3	;volatile
  1110     03EE  2BF0               	goto	u2281
  1111     03EF  2BF1               	goto	u2280
  1112     03F0                     u2281:
  1113     03F0  2DC2               	goto	l186
  1114     03F1                     u2280:
  1115     03F1                     l1980:
  1116                           
  1117                           ;may giat.c: 149:                                     RB3 = 0;
  1118     03F1  1186               	bcf	6,3	;volatile
  1119                           
  1120                           ;may giat.c: 150:                                     RB1 = 0;
  1121     03F2  1086               	bcf	6,1	;volatile
  1122     03F3                     l1982:
  1123                           
  1124                           ;may giat.c: 151:                                     Lcd_Clear();
  1125     03F3  120A  118A  27ED  120A  118A  	fcall	_Lcd_Clear
  1126     03F8                     l1984:
  1127                           
  1128                           ;may giat.c: 152:                                     MODE = 2;
  1129     03F8  3002               	movlw	2
  1130     03F9  00FD               	movwf	_MODE
  1131     03FA  2DCD               	goto	l207
  1132     03FB                     l182:	
  1133                           ;may giat.c: 155:                 else
  1134                           
  1135                           
  1136                           ;may giat.c: 156:                 {if(!RD0){
  1137     03FB  1808               	btfsc	8,0	;volatile
  1138     03FC  2BFE               	goto	u2291
  1139     03FD  2BFF               	goto	u2290
  1140     03FE                     u2291:
  1141     03FE  2DC2               	goto	l186
  1142     03FF                     u2290:
  1143     03FF  2BF1               	goto	l1980
  1144     0400                     l1992:
  1145                           
  1146                           ;may giat.c: 165:                 Lcd_Set_Cursor(1,1);
  1147     0400  01A4               	clrf	Lcd_Set_Cursor@b
  1148     0401  0AA4               	incf	Lcd_Set_Cursor@b,f
  1149     0402  3001               	movlw	1
  1150     0403  120A  158A  26BE  120A  118A  	fcall	_Lcd_Set_Cursor
  1151     0408                     l1994:
  1152                           
  1153                           ;may giat.c: 166:                 Lcd_Write_String("Heating       ");
  1154     0408  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1155     0409  120A  158A  253F  120A  118A  	fcall	_Lcd_Write_String
  1156     040E                     l1996:
  1157                           
  1158                           ;may giat.c: 167:                 adc();
  1159     040E  120A  158A  276D  120A  118A  	fcall	_adc
  1160     0413                     l1998:
  1161                           
  1162                           ;may giat.c: 168:                 if(temp<60)
  1163     0413  3000               	movlw	0
  1164     0414  1283               	bcf	3,5	;RP0=0, select bank0
  1165     0415  1303               	bcf	3,6	;RP1=0, select bank0
  1166     0416  025E               	subwf	_temp+1,w
  1167     0417  303C               	movlw	60
  1168     0418  1903               	skipnz
  1169     0419  025D               	subwf	_temp,w
  1170     041A  1803               	skipnc
  1171     041B  2C1D               	goto	u2301
  1172     041C  2C1E               	goto	u2300
  1173     041D                     u2301:
  1174     041D  2C7A               	goto	l188
  1175     041E                     u2300:
  1176     041E                     l2000:
  1177                           
  1178                           ;may giat.c: 169:                 {;may giat.c: 170:                     RB5 = 1;
  1179     041E  1686               	bsf	6,5	;volatile
  1180     041F                     l2002:
  1181                           
  1182                           ;may giat.c: 171:                     adc();
  1183     041F  120A  158A  276D  120A  118A  	fcall	_adc
  1184     0424                     l2004:
  1185                           
  1186                           ;may giat.c: 172:                     Lcd_Set_Cursor(2,1);
  1187     0424  1283               	bcf	3,5	;RP0=0, select bank0
  1188     0425  1303               	bcf	3,6	;RP1=0, select bank0
  1189     0426  01A4               	clrf	Lcd_Set_Cursor@b
  1190     0427  0AA4               	incf	Lcd_Set_Cursor@b,f
  1191     0428  3002               	movlw	2
  1192     0429  120A  158A  26BE  120A  118A  	fcall	_Lcd_Set_Cursor
  1193     042E                     l2006:
  1194                           
  1195                           ;may giat.c: 173:                     Lcd_Write_String("Nhiet do:");
  1196     042E  307F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1197     042F  120A  158A  253F  120A  118A  	fcall	_Lcd_Write_String
  1198     0434                     l2008:
  1199                           
  1200                           ;may giat.c: 174:                     Lcd_Write_Char(((temp%100)/10)+48);
  1201     0434  300A               	movlw	10
  1202     0435  1283               	bcf	3,5	;RP0=0, select bank0
  1203     0436  1303               	bcf	3,6	;RP1=0, select bank0
  1204     0437  00A6               	movwf	___lwdiv@divisor
  1205     0438  3000               	movlw	0
  1206     0439  00A7               	movwf	___lwdiv@divisor+1
  1207     043A  085E               	movf	_temp+1,w
  1208     043B  00A3               	movwf	___lwmod@dividend+1
  1209     043C  085D               	movf	_temp,w
  1210     043D  00A2               	movwf	___lwmod@dividend
  1211     043E  3064               	movlw	100
  1212     043F  00A0               	movwf	___lwmod@divisor
  1213     0440  3000               	movlw	0
  1214     0441  00A1               	movwf	___lwmod@divisor+1
  1215     0442  120A  158A  263C  120A  118A  	fcall	___lwmod
  1216     0447  1283               	bcf	3,5	;RP0=0, select bank0
  1217     0448  1303               	bcf	3,6	;RP1=0, select bank0
  1218     0449  0821               	movf	?___lwmod+1,w
  1219     044A  00A9               	movwf	___lwdiv@dividend+1
  1220     044B  0820               	movf	?___lwmod,w
  1221     044C  00A8               	movwf	___lwdiv@dividend
  1222     044D  120A  158A  2678  120A  118A  	fcall	___lwdiv
  1223     0452  1283               	bcf	3,5	;RP0=0, select bank0
  1224     0453  1303               	bcf	3,6	;RP1=0, select bank0
  1225     0454  0826               	movf	?___lwdiv,w
  1226     0455  3E30               	addlw	48
  1227     0456  120A  158A  25C9  120A  118A  	fcall	_Lcd_Write_Char
  1228     045B                     l2010:
  1229                           
  1230                           ;may giat.c: 175:                     Lcd_Write_Char((temp%10)+48);
  1231     045B  300A               	movlw	10
  1232     045C  1283               	bcf	3,5	;RP0=0, select bank0
  1233     045D  1303               	bcf	3,6	;RP1=0, select bank0
  1234     045E  00A0               	movwf	___lwmod@divisor
  1235     045F  3000               	movlw	0
  1236     0460  00A1               	movwf	___lwmod@divisor+1
  1237     0461  085E               	movf	_temp+1,w
  1238     0462  00A3               	movwf	___lwmod@dividend+1
  1239     0463  085D               	movf	_temp,w
  1240     0464  00A2               	movwf	___lwmod@dividend
  1241     0465  120A  158A  263C  120A  118A  	fcall	___lwmod
  1242     046A  1283               	bcf	3,5	;RP0=0, select bank0
  1243     046B  1303               	bcf	3,6	;RP1=0, select bank0
  1244     046C  0820               	movf	?___lwmod,w
  1245     046D  3E30               	addlw	48
  1246     046E  120A  158A  25C9  120A  118A  	fcall	_Lcd_Write_Char
  1247     0473                     l2012:
  1248                           
  1249                           ;may giat.c: 176:                     Lcd_Write_String("/60");
  1250     0473  3089               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1251     0474  120A  158A  253F  120A  118A  	fcall	_Lcd_Write_String
  1252                           
  1253                           ;may giat.c: 177:                 } else {
  1254     0479  2DCD               	goto	l207
  1255     047A                     l188:
  1256                           
  1257                           ;may giat.c: 178:                     RB5 = 0;
  1258     047A  1286               	bcf	6,5	;volatile
  1259     047B                     l2014:
  1260                           
  1261                           ;may giat.c: 179:                     Lcd_Clear();
  1262     047B  120A  118A  27ED  120A  118A  	fcall	_Lcd_Clear
  1263     0480                     l2016:
  1264                           
  1265                           ;may giat.c: 180:                     MODE = 3;
  1266     0480  3003               	movlw	3
  1267     0481  00FD               	movwf	_MODE
  1268     0482  2DCD               	goto	l207
  1269     0483                     l2018:
  1270                           
  1271                           ;may giat.c: 184:                 Lcd_Set_Cursor(1,1);
  1272     0483  01A4               	clrf	Lcd_Set_Cursor@b
  1273     0484  0AA4               	incf	Lcd_Set_Cursor@b,f
  1274     0485  3001               	movlw	1
  1275     0486  120A  158A  26BE  120A  118A  	fcall	_Lcd_Set_Cursor
  1276     048B                     l2020:
  1277                           
  1278                           ;may giat.c: 185:                 Lcd_Write_String("Washing      ");
  1279     048B  304A               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1280     048C  120A  158A  253F  120A  118A  	fcall	_Lcd_Write_String
  1281     0491                     l2022:
  1282                           
  1283                           ;may giat.c: 186:                 Lcd_Set_Cursor(2,1);
  1284     0491  1283               	bcf	3,5	;RP0=0, select bank0
  1285     0492  1303               	bcf	3,6	;RP1=0, select bank0
  1286     0493  01A4               	clrf	Lcd_Set_Cursor@b
  1287     0494  0AA4               	incf	Lcd_Set_Cursor@b,f
  1288     0495  3002               	movlw	2
  1289     0496  120A  158A  26BE  120A  118A  	fcall	_Lcd_Set_Cursor
  1290     049B                     l2024:
  1291                           
  1292                           ;may giat.c: 187:                 Lcd_Write_Char((10-s1)/10+48);
  1293     049B  300A               	movlw	10
  1294     049C  1283               	bcf	3,5	;RP0=0, select bank0
  1295     049D  1303               	bcf	3,6	;RP1=0, select bank0
  1296     049E  00A6               	movwf	___lwdiv@divisor
  1297     049F  3000               	movlw	0
  1298     04A0  00A7               	movwf	___lwdiv@divisor+1
  1299     04A1  300A               	movlw	10
  1300     04A2  00D3               	movwf	??_washing
  1301     04A3  085B               	movf	_s1,w
  1302     04A4  0253               	subwf	??_washing,w
  1303     04A5  00A8               	movwf	___lwdiv@dividend
  1304     04A6  095C               	comf	_s1+1,w
  1305     04A7  1803               	skipnc
  1306     04A8  3E01               	addlw	1
  1307     04A9  00A9               	movwf	___lwdiv@dividend+1
  1308     04AA  120A  158A  2678  120A  118A  	fcall	___lwdiv
  1309     04AF  1283               	bcf	3,5	;RP0=0, select bank0
  1310     04B0  1303               	bcf	3,6	;RP1=0, select bank0
  1311     04B1  0826               	movf	?___lwdiv,w
  1312     04B2  3E30               	addlw	48
  1313     04B3  120A  158A  25C9  120A  118A  	fcall	_Lcd_Write_Char
  1314     04B8                     l2026:
  1315                           
  1316                           ;may giat.c: 188:                 Lcd_Write_Char((10-s1)%10+48);
  1317     04B8  300A               	movlw	10
  1318     04B9  1283               	bcf	3,5	;RP0=0, select bank0
  1319     04BA  1303               	bcf	3,6	;RP1=0, select bank0
  1320     04BB  00A0               	movwf	___lwmod@divisor
  1321     04BC  3000               	movlw	0
  1322     04BD  00A1               	movwf	___lwmod@divisor+1
  1323     04BE  300A               	movlw	10
  1324     04BF  00D3               	movwf	??_washing
  1325     04C0  085B               	movf	_s1,w
  1326     04C1  0253               	subwf	??_washing,w
  1327     04C2  00A2               	movwf	___lwmod@dividend
  1328     04C3  095C               	comf	_s1+1,w
  1329     04C4  1803               	skipnc
  1330     04C5  3E01               	addlw	1
  1331     04C6  00A3               	movwf	___lwmod@dividend+1
  1332     04C7  120A  158A  263C  120A  118A  	fcall	___lwmod
  1333     04CC  1283               	bcf	3,5	;RP0=0, select bank0
  1334     04CD  1303               	bcf	3,6	;RP1=0, select bank0
  1335     04CE  0820               	movf	?___lwmod,w
  1336     04CF  3E30               	addlw	48
  1337     04D0  120A  158A  25C9  120A  118A  	fcall	_Lcd_Write_Char
  1338     04D5                     l2028:
  1339                           
  1340                           ;may giat.c: 189:                 if(HEAVY) RB2 = 1; else {
  1341     04D5  1283               	bcf	3,5	;RP0=0, select bank0
  1342     04D6  1303               	bcf	3,6	;RP1=0, select bank0
  1343     04D7  0863               	movf	_HEAVY,w
  1344     04D8  1903               	btfsc	3,2
  1345     04D9  2CDB               	goto	u2311
  1346     04DA  2CDC               	goto	u2310
  1347     04DB                     u2311:
  1348     04DB  2CDE               	goto	l2032
  1349     04DC                     u2310:
  1350     04DC                     l2030:
  1351     04DC  1506               	bsf	6,2	;volatile
  1352     04DD  2CE9               	goto	l2036
  1353     04DE                     l2032:
  1354                           
  1355                           ;may giat.c: 190:                     if(p<=5) RB2 = 1; else RB2 = 0;
  1356     04DE  3000               	movlw	0
  1357     04DF  0258               	subwf	_p+1,w
  1358     04E0  3006               	movlw	6
  1359     04E1  1903               	skipnz
  1360     04E2  0257               	subwf	_p,w
  1361     04E3  1803               	skipnc
  1362     04E4  2CE6               	goto	u2321
  1363     04E5  2CE7               	goto	u2320
  1364     04E6                     u2321:
  1365     04E6  2CE8               	goto	l193
  1366     04E7                     u2320:
  1367     04E7  2CDC               	goto	l2030
  1368     04E8                     l193:
  1369     04E8  1106               	bcf	6,2	;volatile
  1370     04E9                     l2036:
  1371                           
  1372                           ;may giat.c: 192:                 motor();
  1373     04E9  120A  158A  24C3  120A  118A  	fcall	_motor
  1374     04EE                     l2038:
  1375                           
  1376                           ;may giat.c: 193:                 if(s1>10){
  1377     04EE  3000               	movlw	0
  1378     04EF  1283               	bcf	3,5	;RP0=0, select bank0
  1379     04F0  1303               	bcf	3,6	;RP1=0, select bank0
  1380     04F1  025C               	subwf	_s1+1,w
  1381     04F2  300B               	movlw	11
  1382     04F3  1903               	skipnz
  1383     04F4  025B               	subwf	_s1,w
  1384     04F5  1C03               	skipc
  1385     04F6  2CF8               	goto	u2331
  1386     04F7  2CF9               	goto	u2330
  1387     04F8                     u2331:
  1388     04F8  2DCD               	goto	l207
  1389     04F9                     u2330:
  1390     04F9                     l2040:
  1391                           
  1392                           ;may giat.c: 194:                     Lcd_Clear();
  1393     04F9  120A  118A  27ED  120A  118A  	fcall	_Lcd_Clear
  1394     04FE                     l2042:
  1395                           
  1396                           ;may giat.c: 195:                     MODE = 4;
  1397     04FE  3004               	movlw	4
  1398     04FF  00FD               	movwf	_MODE
  1399     0500                     l2044:
  1400                           
  1401                           ;may giat.c: 196:                     s1 = 0;
  1402     0500  1283               	bcf	3,5	;RP0=0, select bank0
  1403     0501  1303               	bcf	3,6	;RP1=0, select bank0
  1404     0502  01DB               	clrf	_s1
  1405     0503  01DC               	clrf	_s1+1
  1406     0504                     l2046:
  1407                           
  1408                           ;may giat.c: 197:                     p = 0;
  1409     0504  01D7               	clrf	_p
  1410     0505  01D8               	clrf	_p+1
  1411     0506  2DCD               	goto	l207
  1412     0507                     l2048:
  1413                           
  1414                           ;may giat.c: 201:                 Lcd_Set_Cursor(1,1);
  1415     0507  01A4               	clrf	Lcd_Set_Cursor@b
  1416     0508  0AA4               	incf	Lcd_Set_Cursor@b,f
  1417     0509  3001               	movlw	1
  1418     050A  120A  158A  26BE  120A  118A  	fcall	_Lcd_Set_Cursor
  1419     050F                     l2050:
  1420                           
  1421                           ;may giat.c: 202:                 Lcd_Write_String("Xa nuoc     ");
  1422     050F  3065               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1423     0510  120A  158A  253F  120A  118A  	fcall	_Lcd_Write_String
  1424     0515                     l2052:
  1425                           
  1426                           ;may giat.c: 203:                 RB2 = 0;
  1427     0515  1283               	bcf	3,5	;RP0=0, select bank0
  1428     0516  1303               	bcf	3,6	;RP1=0, select bank0
  1429     0517  1106               	bcf	6,2	;volatile
  1430     0518                     l2054:
  1431                           
  1432                           ;may giat.c: 204:                 if (!RA4) RB4 = 1; else {RB4 = 0;
  1433     0518  1A05               	btfsc	5,4	;volatile
  1434     0519  2D1B               	goto	u2341
  1435     051A  2D1C               	goto	u2340
  1436     051B                     u2341:
  1437     051B  2D1E               	goto	l197
  1438     051C                     u2340:
  1439     051C                     l2056:
  1440     051C  1606               	bsf	6,4	;volatile
  1441     051D  2DCD               	goto	l207
  1442     051E                     l197:
  1443     051E  1206               	bcf	6,4	;volatile
  1444     051F                     l2058:
  1445                           
  1446                           ;may giat.c: 205:                                                 Lcd_Clear();
  1447     051F  120A  118A  27ED  120A  118A  	fcall	_Lcd_Clear
  1448     0524                     l2060:
  1449                           
  1450                           ;may giat.c: 206:                                                 MODE = 5;}
  1451     0524  3005               	movlw	5
  1452     0525  00FD               	movwf	_MODE
  1453     0526  2DCD               	goto	l207
  1454     0527                     l2062:
  1455                           
  1456                           ;may giat.c: 209:             Lcd_Set_Cursor(1,1);
  1457     0527  01A4               	clrf	Lcd_Set_Cursor@b
  1458     0528  0AA4               	incf	Lcd_Set_Cursor@b,f
  1459     0529  3001               	movlw	1
  1460     052A  120A  158A  26BE  120A  118A  	fcall	_Lcd_Set_Cursor
  1461     052F                     l2064:
  1462                           
  1463                           ;may giat.c: 210:             Lcd_Write_String("Vat          ");
  1464     052F  302E               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1465     0530  120A  158A  253F  120A  118A  	fcall	_Lcd_Write_String
  1466     0535                     l2066:
  1467                           
  1468                           ;may giat.c: 211:             Lcd_Set_Cursor(2,1);
  1469     0535  1283               	bcf	3,5	;RP0=0, select bank0
  1470     0536  1303               	bcf	3,6	;RP1=0, select bank0
  1471     0537  01A4               	clrf	Lcd_Set_Cursor@b
  1472     0538  0AA4               	incf	Lcd_Set_Cursor@b,f
  1473     0539  3002               	movlw	2
  1474     053A  120A  158A  26BE  120A  118A  	fcall	_Lcd_Set_Cursor
  1475     053F                     l2068:
  1476                           
  1477                           ;may giat.c: 212:             Lcd_Write_Char((10-s2)/10+48);
  1478     053F  300A               	movlw	10
  1479     0540  1283               	bcf	3,5	;RP0=0, select bank0
  1480     0541  1303               	bcf	3,6	;RP1=0, select bank0
  1481     0542  00A6               	movwf	___lwdiv@divisor
  1482     0543  3000               	movlw	0
  1483     0544  00A7               	movwf	___lwdiv@divisor+1
  1484     0545  300A               	movlw	10
  1485     0546  00D3               	movwf	??_washing
  1486     0547  0859               	movf	_s2,w
  1487     0548  0253               	subwf	??_washing,w
  1488     0549  00A8               	movwf	___lwdiv@dividend
  1489     054A  095A               	comf	_s2+1,w
  1490     054B  1803               	skipnc
  1491     054C  3E01               	addlw	1
  1492     054D  00A9               	movwf	___lwdiv@dividend+1
  1493     054E  120A  158A  2678  120A  118A  	fcall	___lwdiv
  1494     0553  1283               	bcf	3,5	;RP0=0, select bank0
  1495     0554  1303               	bcf	3,6	;RP1=0, select bank0
  1496     0555  0826               	movf	?___lwdiv,w
  1497     0556  3E30               	addlw	48
  1498     0557  120A  158A  25C9  120A  118A  	fcall	_Lcd_Write_Char
  1499     055C                     l2070:
  1500                           
  1501                           ;may giat.c: 213:             Lcd_Write_Char((10-s2)%10+48);
  1502     055C  300A               	movlw	10
  1503     055D  1283               	bcf	3,5	;RP0=0, select bank0
  1504     055E  1303               	bcf	3,6	;RP1=0, select bank0
  1505     055F  00A0               	movwf	___lwmod@divisor
  1506     0560  3000               	movlw	0
  1507     0561  00A1               	movwf	___lwmod@divisor+1
  1508     0562  300A               	movlw	10
  1509     0563  00D3               	movwf	??_washing
  1510     0564  0859               	movf	_s2,w
  1511     0565  0253               	subwf	??_washing,w
  1512     0566  00A2               	movwf	___lwmod@dividend
  1513     0567  095A               	comf	_s2+1,w
  1514     0568  1803               	skipnc
  1515     0569  3E01               	addlw	1
  1516     056A  00A3               	movwf	___lwmod@dividend+1
  1517     056B  120A  158A  263C  120A  118A  	fcall	___lwmod
  1518     0570  1283               	bcf	3,5	;RP0=0, select bank0
  1519     0571  1303               	bcf	3,6	;RP1=0, select bank0
  1520     0572  0820               	movf	?___lwmod,w
  1521     0573  3E30               	addlw	48
  1522     0574  120A  158A  25C9  120A  118A  	fcall	_Lcd_Write_Char
  1523     0579                     l2072:
  1524                           
  1525                           ;may giat.c: 214:             if(HEAVY) RB2 = 1; else {
  1526     0579  1283               	bcf	3,5	;RP0=0, select bank0
  1527     057A  1303               	bcf	3,6	;RP1=0, select bank0
  1528     057B  0863               	movf	_HEAVY,w
  1529     057C  1903               	btfsc	3,2
  1530     057D  2D7F               	goto	u2351
  1531     057E  2D80               	goto	u2350
  1532     057F                     u2351:
  1533     057F  2D82               	goto	l2076
  1534     0580                     u2350:
  1535     0580                     l2074:
  1536     0580  1506               	bsf	6,2	;volatile
  1537     0581  2D8D               	goto	l2080
  1538     0582                     l2076:
  1539                           
  1540                           ;may giat.c: 215:                     if(p<=5) RB2 = 1; else RB2 = 0;}
  1541     0582  3000               	movlw	0
  1542     0583  0258               	subwf	_p+1,w
  1543     0584  3006               	movlw	6
  1544     0585  1903               	skipnz
  1545     0586  0257               	subwf	_p,w
  1546     0587  1803               	skipnc
  1547     0588  2D8A               	goto	u2361
  1548     0589  2D8B               	goto	u2360
  1549     058A                     u2361:
  1550     058A  2D8C               	goto	l202
  1551     058B                     u2360:
  1552     058B  2D80               	goto	l2074
  1553     058C                     l202:
  1554     058C  1106               	bcf	6,2	;volatile
  1555     058D                     l2080:
  1556                           
  1557                           ;may giat.c: 216:             motor();
  1558     058D  120A  158A  24C3  120A  118A  	fcall	_motor
  1559     0592                     l2082:
  1560                           
  1561                           ;may giat.c: 217:             if(s2>10){
  1562     0592  3000               	movlw	0
  1563     0593  1283               	bcf	3,5	;RP0=0, select bank0
  1564     0594  1303               	bcf	3,6	;RP1=0, select bank0
  1565     0595  025A               	subwf	_s2+1,w
  1566     0596  300B               	movlw	11
  1567     0597  1903               	skipnz
  1568     0598  0259               	subwf	_s2,w
  1569     0599  1C03               	skipc
  1570     059A  2D9C               	goto	u2371
  1571     059B  2D9D               	goto	u2370
  1572     059C                     u2371:
  1573     059C  2DCD               	goto	l207
  1574     059D                     u2370:
  1575     059D                     l2084:
  1576                           
  1577                           ;may giat.c: 218:                 Lcd_Clear();
  1578     059D  120A  118A  27ED  120A  118A  	fcall	_Lcd_Clear
  1579     05A2                     l2086:
  1580                           
  1581                           ;may giat.c: 219:                 MODE = 6;
  1582     05A2  3006               	movlw	6
  1583     05A3  00FD               	movwf	_MODE
  1584     05A4                     l2088:
  1585                           
  1586                           ;may giat.c: 220:                 s2 = 0;
  1587     05A4  1283               	bcf	3,5	;RP0=0, select bank0
  1588     05A5  1303               	bcf	3,6	;RP1=0, select bank0
  1589     05A6  01D9               	clrf	_s2
  1590     05A7  01DA               	clrf	_s2+1
  1591     05A8  2D04               	goto	l2046
  1592     05A9                     l2094:
  1593     05A9  087D               	movf	_MODE,w
  1594     05AA  00D3               	movwf	??_washing
  1595     05AB  01D4               	clrf	??_washing+1
  1596                           
  1597                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1598                           ; Switch size 1, requested type "simple"
  1599                           ; Number of cases is 1, Range of values is 0 to 0
  1600                           ; switch strategies available:
  1601                           ; Name         Instructions Cycles
  1602                           ; simple_byte            4     3 (average)
  1603                           ; direct_byte           11     8 (fixed)
  1604                           ; jumptable            260     6 (fixed)
  1605                           ;	Chosen strategy is simple_byte
  1606     05AC  0854               	movf	??_washing+1,w
  1607     05AD  3A00               	xorlw	0	; case 0
  1608     05AE  1903               	skipnz
  1609     05AF  2DB1               	goto	l2270
  1610     05B0  2DCD               	goto	l207
  1611     05B1                     l2270:
  1612                           
  1613                           ; Switch size 1, requested type "simple"
  1614                           ; Number of cases is 5, Range of values is 1 to 5
  1615                           ; switch strategies available:
  1616                           ; Name         Instructions Cycles
  1617                           ; simple_byte           16     9 (average)
  1618                           ; direct_byte           26    11 (fixed)
  1619                           ; jumptable            263     9 (fixed)
  1620                           ;	Chosen strategy is simple_byte
  1621     05B1  0853               	movf	??_washing,w
  1622     05B2  3A01               	xorlw	1	; case 1
  1623     05B3  1903               	skipnz
  1624     05B4  2BD6               	goto	l1968
  1625     05B5  3A03               	xorlw	3	; case 2
  1626     05B6  1903               	skipnz
  1627     05B7  2C00               	goto	l1992
  1628     05B8  3A01               	xorlw	1	; case 3
  1629     05B9  1903               	skipnz
  1630     05BA  2C83               	goto	l2018
  1631     05BB  3A07               	xorlw	7	; case 4
  1632     05BC  1903               	skipnz
  1633     05BD  2D07               	goto	l2048
  1634     05BE  3A01               	xorlw	1	; case 5
  1635     05BF  1903               	skipnz
  1636     05C0  2D27               	goto	l2062
  1637     05C1  2DCD               	goto	l207
  1638     05C2                     l186:
  1639                           
  1640                           ;may giat.c: 225:     } else if(MODE!=0) {
  1641     05C2  2DCD               	goto	l207
  1642     05C3                     l2096:
  1643     05C3  087D               	movf	_MODE,w
  1644     05C4  1903               	btfsc	3,2
  1645     05C5  2DC7               	goto	u2381
  1646     05C6  2DC8               	goto	u2380
  1647     05C7                     u2381:
  1648     05C7  2DCD               	goto	l207
  1649     05C8                     u2380:
  1650     05C8                     l2098:
  1651                           
  1652                           ;may giat.c: 226:         alarm_mode();}
  1653     05C8  120A  158A  2568  120A  118A  	fcall	_alarm_mode
  1654     05CD                     l207:
  1655     05CD  0008               	return
  1656     05CE                     __end_of_washing:
  1657                           
  1658                           	psect	text2
  1659     0CC3                     __ptext2:	
  1660 ;; *************** function _motor *****************
  1661 ;; Defined at:
  1662 ;;		line 264 in file "may giat.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;		None
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;		None
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  1    wreg      void 
  1669 ;; Registers used:
  1670 ;;		None
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1676 ;;      Params:         0       0       0       0       0
  1677 ;;      Locals:         0       0       0       0       0
  1678 ;;      Temps:          0       0       0       0       0
  1679 ;;      Totals:         0       0       0       0       0
  1680 ;;Total ram usage:        0 bytes
  1681 ;; Hardware stack levels used: 1
  1682 ;; Hardware stack levels required when called: 2
  1683 ;; This function calls:
  1684 ;;		Nothing
  1685 ;; This function is called by:
  1686 ;;		_washing
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690     0CC3                     _motor:	
  1691                           ;psect for function _motor
  1692                           
  1693     0CC3                     l1856:	
  1694                           ;incstack = 0
  1695                           ; Regs used in _motor: []
  1696                           
  1697                           
  1698                           ;may giat.c: 266:     RB6 = CHIEU;
  1699     0CC3  1283               	bcf	3,5	;RP0=0, select bank0
  1700     0CC4  1303               	bcf	3,6	;RP1=0, select bank0
  1701     0CC5  1862               	btfsc	_CHIEU,0
  1702     0CC6  2CC8               	goto	u2051
  1703     0CC7  2CCC               	goto	u2050
  1704     0CC8                     u2051:
  1705     0CC8  1283               	bcf	3,5	;RP0=0, select bank0
  1706     0CC9  1303               	bcf	3,6	;RP1=0, select bank0
  1707     0CCA  1706               	bsf	6,6	;volatile
  1708     0CCB  2CCF               	goto	u2064
  1709     0CCC                     u2050:
  1710     0CCC  1283               	bcf	3,5	;RP0=0, select bank0
  1711     0CCD  1303               	bcf	3,6	;RP1=0, select bank0
  1712     0CCE  1306               	bcf	6,6	;volatile
  1713     0CCF                     u2064:
  1714                           
  1715                           ;may giat.c: 267:     RB7 = ~CHIEU;
  1716     0CCF  1C62               	btfss	_CHIEU,0
  1717     0CD0  2CD2               	goto	u2071
  1718     0CD1  2CD6               	goto	u2070
  1719     0CD2                     u2071:
  1720     0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  1721     0CD3  1303               	bcf	3,6	;RP1=0, select bank0
  1722     0CD4  1786               	bsf	6,7	;volatile
  1723     0CD5  2CD9               	goto	u2084
  1724     0CD6                     u2070:
  1725     0CD6  1283               	bcf	3,5	;RP0=0, select bank0
  1726     0CD7  1303               	bcf	3,6	;RP1=0, select bank0
  1727     0CD8  1386               	bcf	6,7	;volatile
  1728     0CD9                     u2084:
  1729     0CD9                     l224:
  1730     0CD9  0008               	return
  1731     0CDA                     __end_of_motor:
  1732                           
  1733                           	psect	text3
  1734     0D68                     __ptext3:	
  1735 ;; *************** function _alarm_mode *****************
  1736 ;; Defined at:
  1737 ;;		line 241 in file "may giat.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;		None
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;		None
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      void 
  1744 ;; Registers used:
  1745 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1751 ;;      Params:         0       0       0       0       0
  1752 ;;      Locals:         0       0       0       0       0
  1753 ;;      Temps:          0       0       0       0       0
  1754 ;;      Totals:         0       0       0       0       0
  1755 ;;Total ram usage:        0 bytes
  1756 ;; Hardware stack levels used: 1
  1757 ;; Hardware stack levels required when called: 5
  1758 ;; This function calls:
  1759 ;;		_Lcd_Set_Cursor
  1760 ;;		_Lcd_Write_String
  1761 ;;		_off
  1762 ;; This function is called by:
  1763 ;;		_washing
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767     0D68                     _alarm_mode:	
  1768                           ;psect for function _alarm_mode
  1769                           
  1770     0D68                     l1858:	
  1771                           ;incstack = 0
  1772                           ; Regs used in _alarm_mode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1773                           
  1774                           
  1775                           ;may giat.c: 243:     Lcd_Set_Cursor(1,1);
  1776     0D68  1283               	bcf	3,5	;RP0=0, select bank0
  1777     0D69  1303               	bcf	3,6	;RP1=0, select bank0
  1778     0D6A  01A4               	clrf	Lcd_Set_Cursor@b
  1779     0D6B  0AA4               	incf	Lcd_Set_Cursor@b,f
  1780     0D6C  3001               	movlw	1
  1781     0D6D  120A  158A  26BE  120A  158A  	fcall	_Lcd_Set_Cursor
  1782     0D72                     l1860:
  1783                           
  1784                           ;may giat.c: 244:     Lcd_Write_String("WARNING !!!!");
  1785     0D72  3072               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1786     0D73  120A  158A  253F  120A  158A  	fcall	_Lcd_Write_String
  1787     0D78                     l1862:
  1788                           
  1789                           ;may giat.c: 245:     Lcd_Set_Cursor(2,1);
  1790     0D78  1283               	bcf	3,5	;RP0=0, select bank0
  1791     0D79  1303               	bcf	3,6	;RP1=0, select bank0
  1792     0D7A  01A4               	clrf	Lcd_Set_Cursor@b
  1793     0D7B  0AA4               	incf	Lcd_Set_Cursor@b,f
  1794     0D7C  3002               	movlw	2
  1795     0D7D  120A  158A  26BE  120A  158A  	fcall	_Lcd_Set_Cursor
  1796                           
  1797                           ;may giat.c: 246:     Lcd_Write_String("            ");
  1798     0D82  3058               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1799     0D83  120A  158A  253F  120A  158A  	fcall	_Lcd_Write_String
  1800     0D88                     l1864:
  1801                           
  1802                           ;may giat.c: 247:     alarm_flag = 1;
  1803     0D88  1283               	bcf	3,5	;RP0=0, select bank0
  1804     0D89  1303               	bcf	3,6	;RP1=0, select bank0
  1805     0D8A  01E1               	clrf	_alarm_flag
  1806     0D8B  0AE1               	incf	_alarm_flag,f
  1807     0D8C                     l1866:
  1808                           
  1809                           ;may giat.c: 248:     off();
  1810     0D8C  120A  158A  24B9  120A  158A  	fcall	_off
  1811     0D91                     l213:
  1812     0D91  0008               	return
  1813     0D92                     __end_of_alarm_mode:
  1814                           
  1815                           	psect	text4
  1816     0CB9                     __ptext4:	
  1817 ;; *************** function _off *****************
  1818 ;; Defined at:
  1819 ;;		line 230 in file "may giat.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;		None
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;		None
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  1    wreg      void 
  1826 ;; Registers used:
  1827 ;;		None
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1833 ;;      Params:         0       0       0       0       0
  1834 ;;      Locals:         0       0       0       0       0
  1835 ;;      Temps:          0       0       0       0       0
  1836 ;;      Totals:         0       0       0       0       0
  1837 ;;Total ram usage:        0 bytes
  1838 ;; Hardware stack levels used: 1
  1839 ;; Hardware stack levels required when called: 2
  1840 ;; This function calls:
  1841 ;;		Nothing
  1842 ;; This function is called by:
  1843 ;;		_washing
  1844 ;;		_alarm_mode
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848     0CB9                     _off:	
  1849                           ;psect for function _off
  1850                           
  1851     0CB9                     l1624:	
  1852                           ;incstack = 0
  1853                           ; Regs used in _off: []
  1854                           
  1855                           
  1856                           ;may giat.c: 232:     RB6 = 0;
  1857     0CB9  1283               	bcf	3,5	;RP0=0, select bank0
  1858     0CBA  1303               	bcf	3,6	;RP1=0, select bank0
  1859     0CBB  1306               	bcf	6,6	;volatile
  1860                           
  1861                           ;may giat.c: 233:     RB7 = 0;
  1862     0CBC  1386               	bcf	6,7	;volatile
  1863                           
  1864                           ;may giat.c: 234:     RB2 = 0;
  1865     0CBD  1106               	bcf	6,2	;volatile
  1866                           
  1867                           ;may giat.c: 235:     RB1 = 0;
  1868     0CBE  1086               	bcf	6,1	;volatile
  1869                           
  1870                           ;may giat.c: 236:     RB3 = 0;
  1871     0CBF  1186               	bcf	6,3	;volatile
  1872                           
  1873                           ;may giat.c: 237:     RB4 = 0;
  1874     0CC0  1206               	bcf	6,4	;volatile
  1875                           
  1876                           ;may giat.c: 238:     RB5 = 0;
  1877     0CC1  1286               	bcf	6,5	;volatile
  1878     0CC2                     l210:
  1879     0CC2  0008               	return
  1880     0CC3                     __end_of_off:
  1881                           
  1882                           	psect	text5
  1883     0D3F                     __ptext5:	
  1884 ;; *************** function _Lcd_Write_String *****************
  1885 ;; Defined at:
  1886 ;;		line 97 in file "./lcd.h"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;  a               1    wreg     PTR unsigned char 
  1889 ;;		 -> STR_11(13), STR_10(13), STR_9(14), STR_8(13), 
  1890 ;;		 -> STR_7(14), STR_6(4), STR_5(10), STR_4(15), 
  1891 ;;		 -> STR_3(15), STR_2(14), STR_1(15), 
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;  a               1    7[BANK0 ] PTR unsigned char 
  1894 ;;		 -> STR_11(13), STR_10(13), STR_9(14), STR_8(13), 
  1895 ;;		 -> STR_7(14), STR_6(4), STR_5(10), STR_4(15), 
  1896 ;;		 -> STR_3(15), STR_2(14), STR_1(15), 
  1897 ;;  i               2    5[BANK0 ] int 
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      void 
  1900 ;; Registers used:
  1901 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1907 ;;      Params:         0       0       0       0       0
  1908 ;;      Locals:         0       3       0       0       0
  1909 ;;      Temps:          0       0       0       0       0
  1910 ;;      Totals:         0       3       0       0       0
  1911 ;;Total ram usage:        3 bytes
  1912 ;; Hardware stack levels used: 1
  1913 ;; Hardware stack levels required when called: 4
  1914 ;; This function calls:
  1915 ;;		_Lcd_Write_Char
  1916 ;; This function is called by:
  1917 ;;		_washing
  1918 ;;		_alarm_mode
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922     0D3F                     _Lcd_Write_String:	
  1923                           ;psect for function _Lcd_Write_String
  1924                           
  1925                           
  1926                           ;incstack = 0
  1927                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1928                           ;Lcd_Write_String@a stored from wreg
  1929     0D3F  1283               	bcf	3,5	;RP0=0, select bank0
  1930     0D40  1303               	bcf	3,6	;RP1=0, select bank0
  1931     0D41  00A7               	movwf	Lcd_Write_String@a
  1932     0D42                     l1616:
  1933                           
  1934                           ;./lcd.h: 97: void Lcd_Write_String(char *a);./lcd.h: 98: {;./lcd.h: 99:  int i;;./lcd.h
      +                          : 100:  for(i=0;a[i]!='\0';i++)
  1935     0D42  01A5               	clrf	Lcd_Write_String@i
  1936     0D43  01A6               	clrf	Lcd_Write_String@i+1
  1937     0D44  2D5A               	goto	l1622
  1938     0D45                     l1618:
  1939                           
  1940                           ;./lcd.h: 101:     Lcd_Write_Char(a[i]);
  1941     0D45  0825               	movf	Lcd_Write_String@i,w
  1942     0D46  0727               	addwf	Lcd_Write_String@a,w
  1943     0D47  0084               	movwf	4
  1944     0D48  120A  158A  2000  120A  158A  	fcall	stringdir
  1945     0D4D  120A  158A  25C9  120A  158A  	fcall	_Lcd_Write_Char
  1946     0D52                     l1620:
  1947     0D52  3001               	movlw	1
  1948     0D53  1283               	bcf	3,5	;RP0=0, select bank0
  1949     0D54  1303               	bcf	3,6	;RP1=0, select bank0
  1950     0D55  07A5               	addwf	Lcd_Write_String@i,f
  1951     0D56  1803               	skipnc
  1952     0D57  0AA6               	incf	Lcd_Write_String@i+1,f
  1953     0D58  3000               	movlw	0
  1954     0D59  07A6               	addwf	Lcd_Write_String@i+1,f
  1955     0D5A                     l1622:
  1956     0D5A  0825               	movf	Lcd_Write_String@i,w
  1957     0D5B  0727               	addwf	Lcd_Write_String@a,w
  1958     0D5C  0084               	movwf	4
  1959     0D5D  120A  158A  2000  120A  158A  	fcall	stringdir
  1960     0D62  3A00               	xorlw	0
  1961     0D63  1D03               	skipz
  1962     0D64  2D66               	goto	u1411
  1963     0D65  2D67               	goto	u1410
  1964     0D66                     u1411:
  1965     0D66  2D45               	goto	l1618
  1966     0D67                     u1410:
  1967     0D67                     l117:
  1968     0D67  0008               	return
  1969     0D68                     __end_of_Lcd_Write_String:
  1970                           
  1971                           	psect	text6
  1972     0DC9                     __ptext6:	
  1973 ;; *************** function _Lcd_Write_Char *****************
  1974 ;; Defined at:
  1975 ;;		line 81 in file "./lcd.h"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;  a               1    wreg     unsigned char 
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;  a               1    4[BANK0 ] unsigned char 
  1980 ;;  y               1    3[BANK0 ] unsigned char 
  1981 ;;  temp            1    2[BANK0 ] unsigned char 
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  1    wreg      void 
  1984 ;; Registers used:
  1985 ;;		wreg, status,2, status,0, pclath, cstack
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1991 ;;      Params:         0       0       0       0       0
  1992 ;;      Locals:         0       3       0       0       0
  1993 ;;      Temps:          0       1       0       0       0
  1994 ;;      Totals:         0       4       0       0       0
  1995 ;;Total ram usage:        4 bytes
  1996 ;; Hardware stack levels used: 1
  1997 ;; Hardware stack levels required when called: 3
  1998 ;; This function calls:
  1999 ;;		_Lcd_Port
  2000 ;; This function is called by:
  2001 ;;		_Lcd_Write_String
  2002 ;;		_washing
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006     0DC9                     _Lcd_Write_Char:	
  2007                           ;psect for function _Lcd_Write_Char
  2008                           
  2009                           
  2010                           ;incstack = 0
  2011                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2012                           ;Lcd_Write_Char@a stored from wreg
  2013     0DC9  1283               	bcf	3,5	;RP0=0, select bank0
  2014     0DCA  1303               	bcf	3,6	;RP1=0, select bank0
  2015     0DCB  00A4               	movwf	Lcd_Write_Char@a
  2016     0DCC                     l1562:
  2017                           
  2018                           ;./lcd.h: 81: void Lcd_Write_Char(char a);./lcd.h: 82: {;./lcd.h: 83:    char temp,y;;./
      +                          lcd.h: 84:    temp = a&0x0F;
  2019     0DCC  0824               	movf	Lcd_Write_Char@a,w
  2020     0DCD  390F               	andlw	15
  2021     0DCE  00A2               	movwf	Lcd_Write_Char@temp
  2022                           
  2023                           ;./lcd.h: 85:    y = a&0xF0;
  2024     0DCF  0824               	movf	Lcd_Write_Char@a,w
  2025     0DD0  39F0               	andlw	240
  2026     0DD1  00A3               	movwf	Lcd_Write_Char@y
  2027     0DD2                     l1564:
  2028                           
  2029                           ;./lcd.h: 86:    RD2 = 1;
  2030     0DD2  1508               	bsf	8,2	;volatile
  2031     0DD3                     l1566:
  2032                           
  2033                           ;./lcd.h: 87:    Lcd_Port(y>>4);
  2034     0DD3  0823               	movf	Lcd_Write_Char@y,w
  2035     0DD4  00A1               	movwf	??_Lcd_Write_Char
  2036     0DD5  3004               	movlw	4
  2037     0DD6                     u1335:
  2038     0DD6  1003               	clrc
  2039     0DD7  0CA1               	rrf	??_Lcd_Write_Char,f
  2040     0DD8  3EFF               	addlw	-1
  2041     0DD9  1D03               	skipz
  2042     0DDA  2DD6               	goto	u1335
  2043     0DDB  0821               	movf	??_Lcd_Write_Char,w
  2044     0DDC  120A  158A  24F6  120A  158A  	fcall	_Lcd_Port
  2045     0DE1                     l1568:
  2046                           
  2047                           ;./lcd.h: 88:    RD3 = 1;
  2048     0DE1  1283               	bcf	3,5	;RP0=0, select bank0
  2049     0DE2  1303               	bcf	3,6	;RP1=0, select bank0
  2050     0DE3  1588               	bsf	8,3	;volatile
  2051     0DE4                     l1570:
  2052                           
  2053                           ;./lcd.h: 89:    _delay((unsigned long)((40)*(20000000/4000000.0)));
  2054     0DE4  3041               	movlw	65
  2055     0DE5  1283               	bcf	3,5	;RP0=0, select bank0
  2056     0DE6  1303               	bcf	3,6	;RP1=0, select bank0
  2057     0DE7  00A1               	movwf	??_Lcd_Write_Char
  2058     0DE8                     u2587:
  2059     0DE8  0BA1               	decfsz	??_Lcd_Write_Char,f
  2060     0DE9  2DE8               	goto	u2587
  2061     0DEA  2DEB               	nop2
  2062     0DEB                     l1572:
  2063                           
  2064                           ;./lcd.h: 90:    RD3 = 0;
  2065     0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  2066     0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  2067     0DED  1188               	bcf	8,3	;volatile
  2068     0DEE                     l1574:
  2069                           
  2070                           ;./lcd.h: 91:    Lcd_Port(temp);
  2071     0DEE  0822               	movf	Lcd_Write_Char@temp,w
  2072     0DEF  120A  158A  24F6  120A  158A  	fcall	_Lcd_Port
  2073     0DF4                     l1576:
  2074                           
  2075                           ;./lcd.h: 92:    RD3 = 1;
  2076     0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  2077     0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  2078     0DF6  1588               	bsf	8,3	;volatile
  2079     0DF7                     l1578:
  2080                           
  2081                           ;./lcd.h: 93:    _delay((unsigned long)((40)*(20000000/4000000.0)));
  2082     0DF7  3041               	movlw	65
  2083     0DF8  1283               	bcf	3,5	;RP0=0, select bank0
  2084     0DF9  1303               	bcf	3,6	;RP1=0, select bank0
  2085     0DFA  00A1               	movwf	??_Lcd_Write_Char
  2086     0DFB                     u2597:
  2087     0DFB  0BA1               	decfsz	??_Lcd_Write_Char,f
  2088     0DFC  2DFB               	goto	u2597
  2089     0DFD  2DFE               	nop2
  2090     0DFE                     l1580:
  2091                           
  2092                           ;./lcd.h: 94:    RD3 = 0;
  2093     0DFE  1283               	bcf	3,5	;RP0=0, select bank0
  2094     0DFF  1303               	bcf	3,6	;RP1=0, select bank0
  2095     0E00  1188               	bcf	8,3	;volatile
  2096     0E01                     l111:
  2097     0E01  0008               	return
  2098     0E02                     __end_of_Lcd_Write_Char:
  2099                           
  2100                           	psect	text7
  2101     0EBE                     __ptext7:	
  2102 ;; *************** function _Lcd_Set_Cursor *****************
  2103 ;; Defined at:
  2104 ;;		line 41 in file "./lcd.h"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;  a               1    wreg     unsigned char 
  2107 ;;  b               1    4[BANK0 ] unsigned char 
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  a               1    6[BANK0 ] unsigned char 
  2110 ;;  temp            1    9[BANK0 ] unsigned char 
  2111 ;;  y               1    8[BANK0 ] unsigned char 
  2112 ;;  z               1    7[BANK0 ] unsigned char 
  2113 ;; Return value:  Size  Location     Type
  2114 ;;                  1    wreg      void 
  2115 ;; Registers used:
  2116 ;;		wreg, status,2, status,0, pclath, cstack
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2122 ;;      Params:         0       1       0       0       0
  2123 ;;      Locals:         0       4       0       0       0
  2124 ;;      Temps:          0       1       0       0       0
  2125 ;;      Totals:         0       6       0       0       0
  2126 ;;Total ram usage:        6 bytes
  2127 ;; Hardware stack levels used: 1
  2128 ;; Hardware stack levels required when called: 4
  2129 ;; This function calls:
  2130 ;;		_Lcd_Cmd
  2131 ;; This function is called by:
  2132 ;;		_washing
  2133 ;;		_alarm_mode
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137     0EBE                     _Lcd_Set_Cursor:	
  2138                           ;psect for function _Lcd_Set_Cursor
  2139                           
  2140                           
  2141                           ;incstack = 0
  2142                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2143                           ;Lcd_Set_Cursor@a stored from wreg
  2144     0EBE  1283               	bcf	3,5	;RP0=0, select bank0
  2145     0EBF  1303               	bcf	3,6	;RP1=0, select bank0
  2146     0EC0  00A6               	movwf	Lcd_Set_Cursor@a
  2147     0EC1                     l1596:
  2148                           
  2149                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:  char temp
      +                          ,z,y;;./lcd.h: 44:  if(a == 1)
  2150     0EC1  0326               	decf	Lcd_Set_Cursor@a,w
  2151     0EC2  1D03               	btfss	3,2
  2152     0EC3  2EC5               	goto	u1371
  2153     0EC4  2EC6               	goto	u1370
  2154     0EC5                     u1371:
  2155     0EC5  2EE5               	goto	l1606
  2156     0EC6                     u1370:
  2157     0EC6                     l1598:
  2158                           
  2159                           ;./lcd.h: 45:  {;./lcd.h: 46:    temp = 0x80 + b - 1;
  2160     0EC6  0824               	movf	Lcd_Set_Cursor@b,w
  2161     0EC7  3E7F               	addlw	127
  2162     0EC8  00A9               	movwf	Lcd_Set_Cursor@temp
  2163                           
  2164                           ;./lcd.h: 47:   z = temp>>4;
  2165     0EC9  0829               	movf	Lcd_Set_Cursor@temp,w
  2166     0ECA  00A5               	movwf	??_Lcd_Set_Cursor
  2167     0ECB  3004               	movlw	4
  2168     0ECC                     u1385:
  2169     0ECC  1003               	clrc
  2170     0ECD  0CA5               	rrf	??_Lcd_Set_Cursor,f
  2171     0ECE  3EFF               	addlw	-1
  2172     0ECF  1D03               	skipz
  2173     0ED0  2ECC               	goto	u1385
  2174     0ED1  0825               	movf	??_Lcd_Set_Cursor,w
  2175     0ED2  00A7               	movwf	Lcd_Set_Cursor@z
  2176     0ED3                     l1600:
  2177                           
  2178                           ;./lcd.h: 48:   y = temp & 0x0F;
  2179     0ED3  0829               	movf	Lcd_Set_Cursor@temp,w
  2180     0ED4  390F               	andlw	15
  2181     0ED5  00A8               	movwf	Lcd_Set_Cursor@y
  2182     0ED6                     l1602:
  2183                           
  2184                           ;./lcd.h: 49:   Lcd_Cmd(z);
  2185     0ED6  0827               	movf	Lcd_Set_Cursor@z,w
  2186     0ED7  120A  158A  24DA  120A  158A  	fcall	_Lcd_Cmd
  2187     0EDC                     l1604:
  2188                           
  2189                           ;./lcd.h: 50:   Lcd_Cmd(y);
  2190     0EDC  1283               	bcf	3,5	;RP0=0, select bank0
  2191     0EDD  1303               	bcf	3,6	;RP1=0, select bank0
  2192     0EDE  0828               	movf	Lcd_Set_Cursor@y,w
  2193     0EDF  120A  158A  24DA  120A  158A  	fcall	_Lcd_Cmd
  2194                           
  2195                           ;./lcd.h: 51:  }
  2196     0EE4  2F09               	goto	l105
  2197     0EE5                     l1606:
  2198     0EE5  3002               	movlw	2
  2199     0EE6  0626               	xorwf	Lcd_Set_Cursor@a,w
  2200     0EE7  1D03               	btfss	3,2
  2201     0EE8  2EEA               	goto	u1391
  2202     0EE9  2EEB               	goto	u1390
  2203     0EEA                     u1391:
  2204     0EEA  2F09               	goto	l105
  2205     0EEB                     u1390:
  2206     0EEB                     l1608:
  2207                           
  2208                           ;./lcd.h: 53:  {;./lcd.h: 54:   temp = 0xC0 + b - 1;
  2209     0EEB  0824               	movf	Lcd_Set_Cursor@b,w
  2210     0EEC  3EBF               	addlw	191
  2211     0EED  00A9               	movwf	Lcd_Set_Cursor@temp
  2212                           
  2213                           ;./lcd.h: 55:   z = temp>>4;
  2214     0EEE  0829               	movf	Lcd_Set_Cursor@temp,w
  2215     0EEF  00A5               	movwf	??_Lcd_Set_Cursor
  2216     0EF0  3004               	movlw	4
  2217     0EF1                     u1405:
  2218     0EF1  1003               	clrc
  2219     0EF2  0CA5               	rrf	??_Lcd_Set_Cursor,f
  2220     0EF3  3EFF               	addlw	-1
  2221     0EF4  1D03               	skipz
  2222     0EF5  2EF1               	goto	u1405
  2223     0EF6  0825               	movf	??_Lcd_Set_Cursor,w
  2224     0EF7  00A7               	movwf	Lcd_Set_Cursor@z
  2225     0EF8                     l1610:
  2226                           
  2227                           ;./lcd.h: 56:   y = temp & 0x0F;
  2228     0EF8  0829               	movf	Lcd_Set_Cursor@temp,w
  2229     0EF9  390F               	andlw	15
  2230     0EFA  00A8               	movwf	Lcd_Set_Cursor@y
  2231     0EFB                     l1612:
  2232                           
  2233                           ;./lcd.h: 57:   Lcd_Cmd(z);
  2234     0EFB  0827               	movf	Lcd_Set_Cursor@z,w
  2235     0EFC  120A  158A  24DA  120A  158A  	fcall	_Lcd_Cmd
  2236     0F01                     l1614:
  2237                           
  2238                           ;./lcd.h: 58:   Lcd_Cmd(y);
  2239     0F01  1283               	bcf	3,5	;RP0=0, select bank0
  2240     0F02  1303               	bcf	3,6	;RP1=0, select bank0
  2241     0F03  0828               	movf	Lcd_Set_Cursor@y,w
  2242     0F04  120A  158A  24DA  120A  158A  	fcall	_Lcd_Cmd
  2243     0F09                     l105:
  2244     0F09  0008               	return
  2245     0F0A                     __end_of_Lcd_Set_Cursor:
  2246                           
  2247                           	psect	text8
  2248     0F6D                     __ptext8:	
  2249 ;; *************** function _adc *****************
  2250 ;; Defined at:
  2251 ;;		line 251 in file "may giat.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;		None
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;		None
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  1    wreg      void 
  2258 ;; Registers used:
  2259 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2265 ;;      Params:         0       0       0       0       0
  2266 ;;      Locals:         0       0       0       0       0
  2267 ;;      Temps:          0       1       0       0       0
  2268 ;;      Totals:         0       1       0       0       0
  2269 ;;Total ram usage:        1 bytes
  2270 ;; Hardware stack levels used: 1
  2271 ;; Hardware stack levels required when called: 4
  2272 ;; This function calls:
  2273 ;;		___flmul
  2274 ;;		___fltol
  2275 ;;		___xxtofl
  2276 ;; This function is called by:
  2277 ;;		_washing
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281     0F6D                     _adc:	
  2282                           ;psect for function _adc
  2283                           
  2284     0F6D                     l1848:	
  2285                           ;incstack = 0
  2286                           ; Regs used in _adc: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2287                           
  2288                           
  2289                           ;may giat.c: 253: GO_nDONE=1;
  2290     0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  2291     0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  2292     0F6F  151F               	bsf	31,2	;volatile
  2293     0F70                     l216:	
  2294                           ;may giat.c: 254: while(GO_nDONE);
  2295                           
  2296     0F70  191F               	btfsc	31,2	;volatile
  2297     0F71  2F73               	goto	u2031
  2298     0F72  2F74               	goto	u2030
  2299     0F73                     u2031:
  2300     0F73  2F70               	goto	l216
  2301     0F74                     u2030:
  2302     0F74                     l1850:
  2303                           
  2304                           ;may giat.c: 255: adcval=((ADRESH<<8)|(ADRESL));
  2305     0F74  081E               	movf	30,w	;volatile
  2306     0F75  00E0               	movwf	_adcval+1
  2307     0F76  1683               	bsf	3,5	;RP0=1, select bank1
  2308     0F77  1303               	bcf	3,6	;RP1=0, select bank1
  2309     0F78  081E               	movf	30,w	;volatile
  2310     0F79  1283               	bcf	3,5	;RP0=0, select bank0
  2311     0F7A  1303               	bcf	3,6	;RP1=0, select bank0
  2312     0F7B  00DF               	movwf	_adcval
  2313                           
  2314                           ;may giat.c: 256: if(adcval>=205){
  2315     0F7C  3000               	movlw	0
  2316     0F7D  0260               	subwf	_adcval+1,w
  2317     0F7E  30CD               	movlw	205
  2318     0F7F  1903               	skipnz
  2319     0F80  025F               	subwf	_adcval,w
  2320     0F81  1C03               	skipc
  2321     0F82  2F84               	goto	u2041
  2322     0F83  2F85               	goto	u2040
  2323     0F84                     u2041:
  2324     0F84  2FC2               	goto	l1854
  2325     0F85                     u2040:
  2326     0F85                     l1852:
  2327                           
  2328                           ;may giat.c: 257:     temp=(adcval-205)*0.2445;
  2329     0F85  085F               	movf	_adcval,w
  2330     0F86  3E33               	addlw	51
  2331     0F87  00A0               	movwf	___xxtofl@val
  2332     0F88  0860               	movf	_adcval+1,w
  2333     0F89  1803               	skipnc
  2334     0F8A  3E01               	addlw	1
  2335     0F8B  3EFF               	addlw	255
  2336     0F8C  00A1               	movwf	___xxtofl@val+1
  2337     0F8D  01A2               	clrf	___xxtofl@val+2
  2338     0F8E  01A3               	clrf	___xxtofl@val+3
  2339     0F8F  3000               	movlw	0
  2340     0F90  120A  118A  26BB  120A  158A  	fcall	___xxtofl
  2341     0F95  1283               	bcf	3,5	;RP0=0, select bank0
  2342     0F96  1303               	bcf	3,6	;RP1=0, select bank0
  2343     0F97  0823               	movf	?___xxtofl+3,w
  2344     0F98  00B5               	movwf	___flmul@a+3
  2345     0F99  0822               	movf	?___xxtofl+2,w
  2346     0F9A  00B4               	movwf	___flmul@a+2
  2347     0F9B  0821               	movf	?___xxtofl+1,w
  2348     0F9C  00B3               	movwf	___flmul@a+1
  2349     0F9D  0820               	movf	?___xxtofl,w
  2350     0F9E  00B2               	movwf	___flmul@a
  2351     0F9F  303E               	movlw	62
  2352     0FA0  00B1               	movwf	___flmul@b+3
  2353     0FA1  307A               	movlw	122
  2354     0FA2  00B0               	movwf	___flmul@b+2
  2355     0FA3  305E               	movlw	94
  2356     0FA4  00AF               	movwf	___flmul@b+1
  2357     0FA5  3035               	movlw	53
  2358     0FA6  00AE               	movwf	___flmul@b
  2359     0FA7  120A  118A  2027  120A  158A  	fcall	___flmul
  2360     0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  2361     0FAD  1303               	bcf	3,6	;RP1=0, select bank0
  2362     0FAE  0831               	movf	?___flmul+3,w
  2363     0FAF  00CB               	movwf	___fltol@f1+3
  2364     0FB0  0830               	movf	?___flmul+2,w
  2365     0FB1  00CA               	movwf	___fltol@f1+2
  2366     0FB2  082F               	movf	?___flmul+1,w
  2367     0FB3  00C9               	movwf	___fltol@f1+1
  2368     0FB4  082E               	movf	?___flmul,w
  2369     0FB5  00C8               	movwf	___fltol@f1
  2370     0FB6  120A  118A  2775  120A  158A  	fcall	___fltol
  2371     0FBB  1283               	bcf	3,5	;RP0=0, select bank0
  2372     0FBC  1303               	bcf	3,6	;RP1=0, select bank0
  2373     0FBD  0849               	movf	?___fltol+1,w
  2374     0FBE  00DE               	movwf	_temp+1
  2375     0FBF  0848               	movf	?___fltol,w
  2376     0FC0  00DD               	movwf	_temp
  2377                           
  2378                           ;may giat.c: 258: }
  2379     0FC1  2FFF               	goto	l221
  2380     0FC2                     l1854:
  2381                           
  2382                           ;may giat.c: 260:     temp=(205-adcval)*0.2445;
  2383     0FC2  30CD               	movlw	205
  2384     0FC3  00D2               	movwf	??_adc
  2385     0FC4  085F               	movf	_adcval,w
  2386     0FC5  0252               	subwf	??_adc,w
  2387     0FC6  00A0               	movwf	___xxtofl@val
  2388     0FC7  0960               	comf	_adcval+1,w
  2389     0FC8  1803               	skipnc
  2390     0FC9  3E01               	addlw	1
  2391     0FCA  00A1               	movwf	___xxtofl@val+1
  2392     0FCB  01A2               	clrf	___xxtofl@val+2
  2393     0FCC  01A3               	clrf	___xxtofl@val+3
  2394     0FCD  3000               	movlw	0
  2395     0FCE  120A  118A  26BB  120A  158A  	fcall	___xxtofl
  2396     0FD3  1283               	bcf	3,5	;RP0=0, select bank0
  2397     0FD4  1303               	bcf	3,6	;RP1=0, select bank0
  2398     0FD5  0823               	movf	?___xxtofl+3,w
  2399     0FD6  00B5               	movwf	___flmul@a+3
  2400     0FD7  0822               	movf	?___xxtofl+2,w
  2401     0FD8  00B4               	movwf	___flmul@a+2
  2402     0FD9  0821               	movf	?___xxtofl+1,w
  2403     0FDA  00B3               	movwf	___flmul@a+1
  2404     0FDB  0820               	movf	?___xxtofl,w
  2405     0FDC  00B2               	movwf	___flmul@a
  2406     0FDD  303E               	movlw	62
  2407     0FDE  00B1               	movwf	___flmul@b+3
  2408     0FDF  307A               	movlw	122
  2409     0FE0  00B0               	movwf	___flmul@b+2
  2410     0FE1  305E               	movlw	94
  2411     0FE2  00AF               	movwf	___flmul@b+1
  2412     0FE3  3035               	movlw	53
  2413     0FE4  00AE               	movwf	___flmul@b
  2414     0FE5  120A  118A  2027  120A  158A  	fcall	___flmul
  2415     0FEA  1283               	bcf	3,5	;RP0=0, select bank0
  2416     0FEB  1303               	bcf	3,6	;RP1=0, select bank0
  2417     0FEC  0831               	movf	?___flmul+3,w
  2418     0FED  00CB               	movwf	___fltol@f1+3
  2419     0FEE  0830               	movf	?___flmul+2,w
  2420     0FEF  00CA               	movwf	___fltol@f1+2
  2421     0FF0  082F               	movf	?___flmul+1,w
  2422     0FF1  00C9               	movwf	___fltol@f1+1
  2423     0FF2  082E               	movf	?___flmul,w
  2424     0FF3  00C8               	movwf	___fltol@f1
  2425     0FF4  120A  118A  2775  120A  158A  	fcall	___fltol
  2426     0FF9  1283               	bcf	3,5	;RP0=0, select bank0
  2427     0FFA  1303               	bcf	3,6	;RP1=0, select bank0
  2428     0FFB  0849               	movf	?___fltol+1,w
  2429     0FFC  00DE               	movwf	_temp+1
  2430     0FFD  0848               	movf	?___fltol,w
  2431     0FFE  00DD               	movwf	_temp
  2432     0FFF                     l221:
  2433     0FFF  0008               	return
  2434     1000                     __end_of_adc:
  2435                           
  2436                           	psect	text9
  2437     06BB                     __ptext9:	
  2438 ;; *************** function ___xxtofl *****************
  2439 ;; Defined at:
  2440 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;  sign            1    wreg     unsigned char 
  2443 ;;  val             4    0[BANK0 ] long 
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;  sign            1    8[BANK0 ] unsigned char 
  2446 ;;  arg             4   10[BANK0 ] unsigned long 
  2447 ;;  exp             1    9[BANK0 ] unsigned char 
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  4    0[BANK0 ] unsigned char 
  2450 ;; Registers used:
  2451 ;;		wreg, status,2, status,0
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2457 ;;      Params:         0       4       0       0       0
  2458 ;;      Locals:         0       6       0       0       0
  2459 ;;      Temps:          0       4       0       0       0
  2460 ;;      Totals:         0      14       0       0       0
  2461 ;;Total ram usage:       14 bytes
  2462 ;; Hardware stack levels used: 1
  2463 ;; Hardware stack levels required when called: 2
  2464 ;; This function calls:
  2465 ;;		Nothing
  2466 ;; This function is called by:
  2467 ;;		_adc
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471     06BB                     ___xxtofl:	
  2472                           ;psect for function ___xxtofl
  2473                           
  2474                           
  2475                           ;incstack = 0
  2476                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2477                           ;___xxtofl@sign stored from wreg
  2478     06BB  1283               	bcf	3,5	;RP0=0, select bank0
  2479     06BC  1303               	bcf	3,6	;RP1=0, select bank0
  2480     06BD  00A8               	movwf	___xxtofl@sign
  2481     06BE                     l1802:
  2482     06BE  0828               	movf	___xxtofl@sign,w
  2483     06BF  1903               	btfsc	3,2
  2484     06C0  2EC2               	goto	u1891
  2485     06C1  2EC3               	goto	u1890
  2486     06C2                     u1891:
  2487     06C2  2ED7               	goto	l1808
  2488     06C3                     u1890:
  2489     06C3                     l1804:
  2490     06C3  1FA3               	btfss	___xxtofl@val+3,7
  2491     06C4  2EC6               	goto	u1901
  2492     06C5  2EC7               	goto	u1900
  2493     06C6                     u1901:
  2494     06C6  2ED7               	goto	l1808
  2495     06C7                     u1900:
  2496     06C7                     l1806:
  2497     06C7  0920               	comf	___xxtofl@val,w
  2498     06C8  00AA               	movwf	___xxtofl@arg
  2499     06C9  0921               	comf	___xxtofl@val+1,w
  2500     06CA  00AB               	movwf	___xxtofl@arg+1
  2501     06CB  0922               	comf	___xxtofl@val+2,w
  2502     06CC  00AC               	movwf	___xxtofl@arg+2
  2503     06CD  0923               	comf	___xxtofl@val+3,w
  2504     06CE  00AD               	movwf	___xxtofl@arg+3
  2505     06CF  0AAA               	incf	___xxtofl@arg,f
  2506     06D0  1903               	skipnz
  2507     06D1  0AAB               	incf	___xxtofl@arg+1,f
  2508     06D2  1903               	skipnz
  2509     06D3  0AAC               	incf	___xxtofl@arg+2,f
  2510     06D4  1903               	skipnz
  2511     06D5  0AAD               	incf	___xxtofl@arg+3,f
  2512     06D6  2EDF               	goto	l743
  2513     06D7                     l1808:
  2514     06D7  0823               	movf	___xxtofl@val+3,w
  2515     06D8  00AD               	movwf	___xxtofl@arg+3
  2516     06D9  0822               	movf	___xxtofl@val+2,w
  2517     06DA  00AC               	movwf	___xxtofl@arg+2
  2518     06DB  0821               	movf	___xxtofl@val+1,w
  2519     06DC  00AB               	movwf	___xxtofl@arg+1
  2520     06DD  0820               	movf	___xxtofl@val,w
  2521     06DE  00AA               	movwf	___xxtofl@arg
  2522     06DF                     l743:
  2523     06DF  0823               	movf	___xxtofl@val+3,w
  2524     06E0  0422               	iorwf	___xxtofl@val+2,w
  2525     06E1  0421               	iorwf	___xxtofl@val+1,w
  2526     06E2  0420               	iorwf	___xxtofl@val,w
  2527     06E3  1D03               	skipz
  2528     06E4  2EE6               	goto	u1911
  2529     06E5  2EE7               	goto	u1910
  2530     06E6                     u1911:
  2531     06E6  2EF0               	goto	l1814
  2532     06E7                     u1910:
  2533     06E7                     l1810:
  2534     06E7  3000               	movlw	0
  2535     06E8  00A3               	movwf	?___xxtofl+3
  2536     06E9  3000               	movlw	0
  2537     06EA  00A2               	movwf	?___xxtofl+2
  2538     06EB  3000               	movlw	0
  2539     06EC  00A1               	movwf	?___xxtofl+1
  2540     06ED  3000               	movlw	0
  2541     06EE  00A0               	movwf	?___xxtofl
  2542     06EF  2F74               	goto	l745
  2543     06F0                     l1814:
  2544     06F0  3096               	movlw	150
  2545     06F1  00A9               	movwf	___xxtofl@exp
  2546     06F2  2F00               	goto	l1818
  2547     06F3                     l1816:
  2548     06F3  3001               	movlw	1
  2549     06F4  00A4               	movwf	??___xxtofl
  2550     06F5  0824               	movf	??___xxtofl,w
  2551     06F6  07A9               	addwf	___xxtofl@exp,f
  2552     06F7  3001               	movlw	1
  2553     06F8                     u1925:
  2554     06F8  1003               	clrc
  2555     06F9  0CAD               	rrf	___xxtofl@arg+3,f
  2556     06FA  0CAC               	rrf	___xxtofl@arg+2,f
  2557     06FB  0CAB               	rrf	___xxtofl@arg+1,f
  2558     06FC  0CAA               	rrf	___xxtofl@arg,f
  2559     06FD  3EFF               	addlw	-1
  2560     06FE  1D03               	skipz
  2561     06FF  2EF8               	goto	u1925
  2562     0700                     l1818:
  2563     0700  30FE               	movlw	254
  2564     0701  052D               	andwf	___xxtofl@arg+3,w
  2565     0702  1D03               	btfss	3,2
  2566     0703  2F05               	goto	u1931
  2567     0704  2F06               	goto	u1930
  2568     0705                     u1931:
  2569     0705  2EF3               	goto	l1816
  2570     0706                     u1930:
  2571     0706  2F22               	goto	l749
  2572     0707                     l1820:
  2573     0707  3001               	movlw	1
  2574     0708  00A4               	movwf	??___xxtofl
  2575     0709  0824               	movf	??___xxtofl,w
  2576     070A  07A9               	addwf	___xxtofl@exp,f
  2577     070B                     l1822:
  2578     070B  3001               	movlw	1
  2579     070C  07AA               	addwf	___xxtofl@arg,f
  2580     070D  3000               	movlw	0
  2581     070E  1803               	skipnc
  2582     070F  3001               	movlw	1
  2583     0710  07AB               	addwf	___xxtofl@arg+1,f
  2584     0711  3000               	movlw	0
  2585     0712  1803               	skipnc
  2586     0713  3001               	movlw	1
  2587     0714  07AC               	addwf	___xxtofl@arg+2,f
  2588     0715  3000               	movlw	0
  2589     0716  1803               	skipnc
  2590     0717  3001               	movlw	1
  2591     0718  07AD               	addwf	___xxtofl@arg+3,f
  2592     0719                     l1824:
  2593     0719  3001               	movlw	1
  2594     071A                     u1945:
  2595     071A  1003               	clrc
  2596     071B  0CAD               	rrf	___xxtofl@arg+3,f
  2597     071C  0CAC               	rrf	___xxtofl@arg+2,f
  2598     071D  0CAB               	rrf	___xxtofl@arg+1,f
  2599     071E  0CAA               	rrf	___xxtofl@arg,f
  2600     071F  3EFF               	addlw	-1
  2601     0720  1D03               	skipz
  2602     0721  2F1A               	goto	u1945
  2603     0722                     l749:
  2604     0722  30FF               	movlw	255
  2605     0723  052D               	andwf	___xxtofl@arg+3,w
  2606     0724  1D03               	btfss	3,2
  2607     0725  2F27               	goto	u1951
  2608     0726  2F28               	goto	u1950
  2609     0727                     u1951:
  2610     0727  2F07               	goto	l1820
  2611     0728                     u1950:
  2612     0728  2F34               	goto	l1828
  2613     0729                     l1826:
  2614     0729  3001               	movlw	1
  2615     072A  02A9               	subwf	___xxtofl@exp,f
  2616     072B  3001               	movlw	1
  2617     072C  00A4               	movwf	??___xxtofl
  2618     072D                     u1965:
  2619     072D  1003               	clrc
  2620     072E  0DAA               	rlf	___xxtofl@arg,f
  2621     072F  0DAB               	rlf	___xxtofl@arg+1,f
  2622     0730  0DAC               	rlf	___xxtofl@arg+2,f
  2623     0731  0DAD               	rlf	___xxtofl@arg+3,f
  2624     0732  0BA4               	decfsz	??___xxtofl,f
  2625     0733  2F2D               	goto	u1965
  2626     0734                     l1828:
  2627     0734  1BAC               	btfsc	___xxtofl@arg+2,7
  2628     0735  2F37               	goto	u1971
  2629     0736  2F38               	goto	u1970
  2630     0737                     u1971:
  2631     0737  2F3E               	goto	l756
  2632     0738                     u1970:
  2633     0738                     l1830:
  2634     0738  3002               	movlw	2
  2635     0739  0229               	subwf	___xxtofl@exp,w
  2636     073A  1803               	skipnc
  2637     073B  2F3D               	goto	u1981
  2638     073C  2F3E               	goto	u1980
  2639     073D                     u1981:
  2640     073D  2F29               	goto	l1826
  2641     073E                     u1980:
  2642     073E                     l756:
  2643     073E  1829               	btfsc	___xxtofl@exp,0
  2644     073F  2F41               	goto	u1991
  2645     0740  2F42               	goto	u1990
  2646     0741                     u1991:
  2647     0741  2F4A               	goto	l757
  2648     0742                     u1990:
  2649     0742                     l1832:
  2650     0742  30FF               	movlw	255
  2651     0743  05AA               	andwf	___xxtofl@arg,f
  2652     0744  30FF               	movlw	255
  2653     0745  05AB               	andwf	___xxtofl@arg+1,f
  2654     0746  307F               	movlw	127
  2655     0747  05AC               	andwf	___xxtofl@arg+2,f
  2656     0748  30FF               	movlw	255
  2657     0749  05AD               	andwf	___xxtofl@arg+3,f
  2658     074A                     l757:
  2659     074A  1003               	clrc
  2660     074B  0CA9               	rrf	___xxtofl@exp,f
  2661     074C                     l1834:
  2662     074C  0829               	movf	___xxtofl@exp,w
  2663     074D  00A4               	movwf	??___xxtofl
  2664     074E  01A5               	clrf	??___xxtofl+1
  2665     074F  01A6               	clrf	??___xxtofl+2
  2666     0750  01A7               	clrf	??___xxtofl+3
  2667     0751  3018               	movlw	24
  2668     0752                     u2005:
  2669     0752  1003               	clrc
  2670     0753  0DA4               	rlf	??___xxtofl,f
  2671     0754  0DA5               	rlf	??___xxtofl+1,f
  2672     0755  0DA6               	rlf	??___xxtofl+2,f
  2673     0756  0DA7               	rlf	??___xxtofl+3,f
  2674     0757                     u2000:
  2675     0757  3EFF               	addlw	-1
  2676     0758  1D03               	skipz
  2677     0759  2F52               	goto	u2005
  2678     075A  0824               	movf	??___xxtofl,w
  2679     075B  04AA               	iorwf	___xxtofl@arg,f
  2680     075C  0825               	movf	??___xxtofl+1,w
  2681     075D  04AB               	iorwf	___xxtofl@arg+1,f
  2682     075E  0826               	movf	??___xxtofl+2,w
  2683     075F  04AC               	iorwf	___xxtofl@arg+2,f
  2684     0760  0827               	movf	??___xxtofl+3,w
  2685     0761  04AD               	iorwf	___xxtofl@arg+3,f
  2686     0762                     l1836:
  2687     0762  0828               	movf	___xxtofl@sign,w
  2688     0763  1903               	btfsc	3,2
  2689     0764  2F66               	goto	u2011
  2690     0765  2F67               	goto	u2010
  2691     0766                     u2011:
  2692     0766  2F6C               	goto	l1842
  2693     0767                     u2010:
  2694     0767                     l1838:
  2695     0767  1FA3               	btfss	___xxtofl@val+3,7
  2696     0768  2F6A               	goto	u2021
  2697     0769  2F6B               	goto	u2020
  2698     076A                     u2021:
  2699     076A  2F6C               	goto	l1842
  2700     076B                     u2020:
  2701     076B                     l1840:
  2702     076B  17AD               	bsf	___xxtofl@arg+3,7
  2703     076C                     l1842:
  2704     076C  082D               	movf	___xxtofl@arg+3,w
  2705     076D  00A3               	movwf	?___xxtofl+3
  2706     076E  082C               	movf	___xxtofl@arg+2,w
  2707     076F  00A2               	movwf	?___xxtofl+2
  2708     0770  082B               	movf	___xxtofl@arg+1,w
  2709     0771  00A1               	movwf	?___xxtofl+1
  2710     0772  082A               	movf	___xxtofl@arg,w
  2711     0773  00A0               	movwf	?___xxtofl
  2712     0774                     l745:
  2713     0774  0008               	return
  2714     0775                     __end_of___xxtofl:
  2715                           
  2716                           	psect	text10
  2717     0775                     __ptext10:	
  2718 ;; *************** function ___fltol *****************
  2719 ;; Defined at:
  2720 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;  f1              4   40[BANK0 ] unsigned char 
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;  exp1            1   49[BANK0 ] unsigned char 
  2725 ;;  sign1           1   48[BANK0 ] unsigned char 
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  4   40[BANK0 ] long 
  2728 ;; Registers used:
  2729 ;;		wreg, status,2, status,0
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2735 ;;      Params:         0       4       0       0       0
  2736 ;;      Locals:         0       2       0       0       0
  2737 ;;      Temps:          0       4       0       0       0
  2738 ;;      Totals:         0      10       0       0       0
  2739 ;;Total ram usage:       10 bytes
  2740 ;; Hardware stack levels used: 1
  2741 ;; Hardware stack levels required when called: 2
  2742 ;; This function calls:
  2743 ;;		Nothing
  2744 ;; This function is called by:
  2745 ;;		_adc
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749     0775                     ___fltol:	
  2750                           ;psect for function ___fltol
  2751                           
  2752     0775                     l1626:	
  2753                           ;incstack = 0
  2754                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2755                           
  2756     0775  1003               	clrc
  2757     0776  1283               	bcf	3,5	;RP0=0, select bank0
  2758     0777  1303               	bcf	3,6	;RP1=0, select bank0
  2759     0778  0D4A               	rlf	___fltol@f1+2,w
  2760     0779  0D4B               	rlf	___fltol@f1+3,w
  2761     077A  00D1               	movwf	___fltol@exp1
  2762     077B  0851               	movf	___fltol@exp1,w
  2763     077C  1D03               	btfss	3,2
  2764     077D  2F7F               	goto	u1421
  2765     077E  2F80               	goto	u1420
  2766     077F                     u1421:
  2767     077F  2F89               	goto	l1632
  2768     0780                     u1420:
  2769     0780                     l1628:
  2770     0780  3000               	movlw	0
  2771     0781  00CB               	movwf	?___fltol+3
  2772     0782  3000               	movlw	0
  2773     0783  00CA               	movwf	?___fltol+2
  2774     0784  3000               	movlw	0
  2775     0785  00C9               	movwf	?___fltol+1
  2776     0786  3000               	movlw	0
  2777     0787  00C8               	movwf	?___fltol
  2778     0788  2FEC               	goto	l496
  2779     0789                     l1632:
  2780     0789  0848               	movf	___fltol@f1,w
  2781     078A  00CC               	movwf	??___fltol
  2782     078B  0849               	movf	___fltol@f1+1,w
  2783     078C  00CD               	movwf	??___fltol+1
  2784     078D  084A               	movf	___fltol@f1+2,w
  2785     078E  00CE               	movwf	??___fltol+2
  2786     078F  084B               	movf	___fltol@f1+3,w
  2787     0790  00CF               	movwf	??___fltol+3
  2788     0791  301F               	movlw	31
  2789     0792                     u1435:
  2790     0792  1003               	clrc
  2791     0793  0CCF               	rrf	??___fltol+3,f
  2792     0794  0CCE               	rrf	??___fltol+2,f
  2793     0795  0CCD               	rrf	??___fltol+1,f
  2794     0796  0CCC               	rrf	??___fltol,f
  2795     0797                     u1430:
  2796     0797  3EFF               	addlw	-1
  2797     0798  1D03               	skipz
  2798     0799  2F92               	goto	u1435
  2799     079A  084C               	movf	??___fltol,w
  2800     079B  00D0               	movwf	___fltol@sign1
  2801     079C                     l1634:
  2802     079C  17CA               	bsf	___fltol@f1+2,7
  2803     079D                     l1636:
  2804     079D  30FF               	movlw	255
  2805     079E  05C8               	andwf	___fltol@f1,f
  2806     079F  30FF               	movlw	255
  2807     07A0  05C9               	andwf	___fltol@f1+1,f
  2808     07A1  30FF               	movlw	255
  2809     07A2  05CA               	andwf	___fltol@f1+2,f
  2810     07A3  3000               	movlw	0
  2811     07A4  05CB               	andwf	___fltol@f1+3,f
  2812     07A5                     l1638:
  2813     07A5  3096               	movlw	150
  2814     07A6  02D1               	subwf	___fltol@exp1,f
  2815     07A7                     l1640:
  2816     07A7  1FD1               	btfss	___fltol@exp1,7
  2817     07A8  2FAA               	goto	u1441
  2818     07A9  2FAB               	goto	u1440
  2819     07AA                     u1441:
  2820     07AA  2FC5               	goto	l1650
  2821     07AB                     u1440:
  2822     07AB                     l1642:
  2823     07AB  0851               	movf	___fltol@exp1,w
  2824     07AC  3A80               	xorlw	128
  2825     07AD  3E97               	addlw	151
  2826     07AE  1803               	skipnc
  2827     07AF  2FB1               	goto	u1451
  2828     07B0  2FB2               	goto	u1450
  2829     07B1                     u1451:
  2830     07B1  2FB3               	goto	l1648
  2831     07B2                     u1450:
  2832     07B2  2F80               	goto	l1628
  2833     07B3                     l1648:
  2834     07B3  3001               	movlw	1
  2835     07B4                     u1465:
  2836     07B4  1003               	clrc
  2837     07B5  0CCB               	rrf	___fltol@f1+3,f
  2838     07B6  0CCA               	rrf	___fltol@f1+2,f
  2839     07B7  0CC9               	rrf	___fltol@f1+1,f
  2840     07B8  0CC8               	rrf	___fltol@f1,f
  2841     07B9  3EFF               	addlw	-1
  2842     07BA  1D03               	skipz
  2843     07BB  2FB4               	goto	u1465
  2844     07BC  3001               	movlw	1
  2845     07BD  00CC               	movwf	??___fltol
  2846     07BE  084C               	movf	??___fltol,w
  2847     07BF  07D1               	addwf	___fltol@exp1,f
  2848     07C0  1D03               	btfss	3,2
  2849     07C1  2FC3               	goto	u1471
  2850     07C2  2FC4               	goto	u1470
  2851     07C3                     u1471:
  2852     07C3  2FB3               	goto	l1648
  2853     07C4                     u1470:
  2854     07C4  2FDC               	goto	l1658
  2855     07C5                     l1650:
  2856     07C5  3020               	movlw	32
  2857     07C6  0251               	subwf	___fltol@exp1,w
  2858     07C7  1C03               	skipc
  2859     07C8  2FCA               	goto	u1481
  2860     07C9  2FCB               	goto	u1480
  2861     07CA                     u1481:
  2862     07CA  2FD7               	goto	l503
  2863     07CB                     u1480:
  2864     07CB  2F80               	goto	l1628
  2865     07CC                     l1656:
  2866     07CC  3001               	movlw	1
  2867     07CD  00CC               	movwf	??___fltol
  2868     07CE                     u1495:
  2869     07CE  1003               	clrc
  2870     07CF  0DC8               	rlf	___fltol@f1,f
  2871     07D0  0DC9               	rlf	___fltol@f1+1,f
  2872     07D1  0DCA               	rlf	___fltol@f1+2,f
  2873     07D2  0DCB               	rlf	___fltol@f1+3,f
  2874     07D3  0BCC               	decfsz	??___fltol,f
  2875     07D4  2FCE               	goto	u1495
  2876     07D5  3001               	movlw	1
  2877     07D6  02D1               	subwf	___fltol@exp1,f
  2878     07D7                     l503:
  2879     07D7  0851               	movf	___fltol@exp1,w
  2880     07D8  1D03               	btfss	3,2
  2881     07D9  2FDB               	goto	u1501
  2882     07DA  2FDC               	goto	u1500
  2883     07DB                     u1501:
  2884     07DB  2FCC               	goto	l1656
  2885     07DC                     u1500:
  2886     07DC                     l1658:
  2887     07DC  0850               	movf	___fltol@sign1,w
  2888     07DD  1903               	btfsc	3,2
  2889     07DE  2FE0               	goto	u1511
  2890     07DF  2FE1               	goto	u1510
  2891     07E0                     u1511:
  2892     07E0  2FEC               	goto	l506
  2893     07E1                     u1510:
  2894     07E1                     l1660:
  2895     07E1  09C8               	comf	___fltol@f1,f
  2896     07E2  09C9               	comf	___fltol@f1+1,f
  2897     07E3  09CA               	comf	___fltol@f1+2,f
  2898     07E4  09CB               	comf	___fltol@f1+3,f
  2899     07E5  0AC8               	incf	___fltol@f1,f
  2900     07E6  1903               	skipnz
  2901     07E7  0AC9               	incf	___fltol@f1+1,f
  2902     07E8  1903               	skipnz
  2903     07E9  0ACA               	incf	___fltol@f1+2,f
  2904     07EA  1903               	skipnz
  2905     07EB  0ACB               	incf	___fltol@f1+3,f
  2906     07EC                     l506:
  2907     07EC                     l496:
  2908     07EC  0008               	return
  2909     07ED                     __end_of___fltol:
  2910                           
  2911                           	psect	text11
  2912     0027                     __ptext11:	
  2913 ;; *************** function ___flmul *****************
  2914 ;; Defined at:
  2915 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;  b               4   14[BANK0 ] long 
  2918 ;;  a               4   18[BANK0 ] long 
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;  prod            4   34[BANK0 ] struct .
  2921 ;;  grs             4   28[BANK0 ] unsigned long 
  2922 ;;  temp            2   38[BANK0 ] struct .
  2923 ;;  bexp            1   33[BANK0 ] unsigned char 
  2924 ;;  aexp            1   32[BANK0 ] unsigned char 
  2925 ;;  sign            1   27[BANK0 ] unsigned char 
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  4   14[BANK0 ] unsigned char 
  2928 ;; Registers used:
  2929 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2935 ;;      Params:         0       8       0       0       0
  2936 ;;      Locals:         0      13       0       0       0
  2937 ;;      Temps:          0       5       0       0       0
  2938 ;;      Totals:         0      26       0       0       0
  2939 ;;Total ram usage:       26 bytes
  2940 ;; Hardware stack levels used: 1
  2941 ;; Hardware stack levels required when called: 3
  2942 ;; This function calls:
  2943 ;;		__Umul8_16
  2944 ;; This function is called by:
  2945 ;;		_adc
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949     0027                     ___flmul:	
  2950                           ;psect for function ___flmul
  2951                           
  2952     0027                     l1662:	
  2953                           ;incstack = 0
  2954                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2955                           
  2956     0027  1283               	bcf	3,5	;RP0=0, select bank0
  2957     0028  1303               	bcf	3,6	;RP1=0, select bank0
  2958     0029  0831               	movf	___flmul@b+3,w
  2959     002A  3980               	andlw	128
  2960     002B  00BB               	movwf	___flmul@sign
  2961     002C                     l1664:
  2962     002C  0831               	movf	___flmul@b+3,w
  2963     002D  00B6               	movwf	??___flmul
  2964     002E  0736               	addwf	??___flmul,w
  2965     002F  00C1               	movwf	___flmul@bexp
  2966     0030                     l1666:
  2967     0030  1FB0               	btfss	___flmul@b+2,7
  2968     0031  2833               	goto	u1521
  2969     0032  2834               	goto	u1520
  2970     0033                     u1521:
  2971     0033  2835               	goto	l1670
  2972     0034                     u1520:
  2973     0034                     l1668:
  2974     0034  1441               	bsf	___flmul@bexp,0
  2975     0035                     l1670:
  2976     0035  0841               	movf	___flmul@bexp,w
  2977     0036  1903               	btfsc	3,2
  2978     0037  2839               	goto	u1531
  2979     0038  283A               	goto	u1530
  2980     0039                     u1531:
  2981     0039  2849               	goto	l1678
  2982     003A                     u1530:
  2983     003A                     l1672:
  2984     003A  0A41               	incf	___flmul@bexp,w
  2985     003B  1D03               	btfss	3,2
  2986     003C  283E               	goto	u1541
  2987     003D  283F               	goto	u1540
  2988     003E                     u1541:
  2989     003E  2847               	goto	l1676
  2990     003F                     u1540:
  2991     003F                     l1674:
  2992     003F  3000               	movlw	0
  2993     0040  00B1               	movwf	___flmul@b+3
  2994     0041  3000               	movlw	0
  2995     0042  00B0               	movwf	___flmul@b+2
  2996     0043  3000               	movlw	0
  2997     0044  00AF               	movwf	___flmul@b+1
  2998     0045  3000               	movlw	0
  2999     0046  00AE               	movwf	___flmul@b
  3000     0047                     l1676:
  3001     0047  17B0               	bsf	___flmul@b+2,7
  3002     0048  2851               	goto	l1680
  3003     0049                     l1678:
  3004     0049  3000               	movlw	0
  3005     004A  00B1               	movwf	___flmul@b+3
  3006     004B  3000               	movlw	0
  3007     004C  00B0               	movwf	___flmul@b+2
  3008     004D  3000               	movlw	0
  3009     004E  00AF               	movwf	___flmul@b+1
  3010     004F  3000               	movlw	0
  3011     0050  00AE               	movwf	___flmul@b
  3012     0051                     l1680:
  3013     0051  0835               	movf	___flmul@a+3,w
  3014     0052  3980               	andlw	128
  3015     0053  00B6               	movwf	??___flmul
  3016     0054  0836               	movf	??___flmul,w
  3017     0055  06BB               	xorwf	___flmul@sign,f
  3018     0056                     l1682:
  3019     0056  0835               	movf	___flmul@a+3,w
  3020     0057  00B6               	movwf	??___flmul
  3021     0058  0736               	addwf	??___flmul,w
  3022     0059  00C0               	movwf	___flmul@aexp
  3023     005A                     l1684:
  3024     005A  1FB4               	btfss	___flmul@a+2,7
  3025     005B  285D               	goto	u1551
  3026     005C  285E               	goto	u1550
  3027     005D                     u1551:
  3028     005D  285F               	goto	l1688
  3029     005E                     u1550:
  3030     005E                     l1686:
  3031     005E  1440               	bsf	___flmul@aexp,0
  3032     005F                     l1688:
  3033     005F  0840               	movf	___flmul@aexp,w
  3034     0060  1903               	btfsc	3,2
  3035     0061  2863               	goto	u1561
  3036     0062  2864               	goto	u1560
  3037     0063                     u1561:
  3038     0063  2873               	goto	l1696
  3039     0064                     u1560:
  3040     0064                     l1690:
  3041     0064  0A40               	incf	___flmul@aexp,w
  3042     0065  1D03               	btfss	3,2
  3043     0066  2868               	goto	u1571
  3044     0067  2869               	goto	u1570
  3045     0068                     u1571:
  3046     0068  2871               	goto	l1694
  3047     0069                     u1570:
  3048     0069                     l1692:
  3049     0069  3000               	movlw	0
  3050     006A  00B5               	movwf	___flmul@a+3
  3051     006B  3000               	movlw	0
  3052     006C  00B4               	movwf	___flmul@a+2
  3053     006D  3000               	movlw	0
  3054     006E  00B3               	movwf	___flmul@a+1
  3055     006F  3000               	movlw	0
  3056     0070  00B2               	movwf	___flmul@a
  3057     0071                     l1694:
  3058     0071  17B4               	bsf	___flmul@a+2,7
  3059     0072  287B               	goto	l1698
  3060     0073                     l1696:
  3061     0073  3000               	movlw	0
  3062     0074  00B5               	movwf	___flmul@a+3
  3063     0075  3000               	movlw	0
  3064     0076  00B4               	movwf	___flmul@a+2
  3065     0077  3000               	movlw	0
  3066     0078  00B3               	movwf	___flmul@a+1
  3067     0079  3000               	movlw	0
  3068     007A  00B2               	movwf	___flmul@a
  3069     007B                     l1698:
  3070     007B  0840               	movf	___flmul@aexp,w
  3071     007C  1903               	btfsc	3,2
  3072     007D  287F               	goto	u1581
  3073     007E  2880               	goto	u1580
  3074     007F                     u1581:
  3075     007F  2885               	goto	l1702
  3076     0080                     u1580:
  3077     0080                     l1700:
  3078     0080  0841               	movf	___flmul@bexp,w
  3079     0081  1D03               	btfss	3,2
  3080     0082  2884               	goto	u1591
  3081     0083  2885               	goto	u1590
  3082     0084                     u1591:
  3083     0084  288E               	goto	l1706
  3084     0085                     u1590:
  3085     0085                     l1702:
  3086     0085  3000               	movlw	0
  3087     0086  00B1               	movwf	?___flmul+3
  3088     0087  3000               	movlw	0
  3089     0088  00B0               	movwf	?___flmul+2
  3090     0089  3000               	movlw	0
  3091     008A  00AF               	movwf	?___flmul+1
  3092     008B  3000               	movlw	0
  3093     008C  00AE               	movwf	?___flmul
  3094     008D  2B6B               	goto	l699
  3095     008E                     l1706:
  3096     008E  082E               	movf	___flmul@b,w
  3097     008F  00A0               	movwf	__Umul8_16@multiplicand
  3098     0090  0834               	movf	___flmul@a+2,w
  3099     0091  120A  158A  2516  120A  118A  	fcall	__Umul8_16
  3100     0096  1283               	bcf	3,5	;RP0=0, select bank0
  3101     0097  1303               	bcf	3,6	;RP1=0, select bank0
  3102     0098  0821               	movf	?__Umul8_16+1,w
  3103     0099  00C7               	movwf	___flmul@temp+1
  3104     009A  0820               	movf	?__Umul8_16,w
  3105     009B  00C6               	movwf	___flmul@temp
  3106     009C                     l1708:
  3107     009C  0846               	movf	___flmul@temp,w
  3108     009D  00B6               	movwf	??___flmul
  3109     009E  01B7               	clrf	??___flmul+1
  3110     009F  01B8               	clrf	??___flmul+2
  3111     00A0  01B9               	clrf	??___flmul+3
  3112     00A1  0839               	movf	??___flmul+3,w
  3113     00A2  00BF               	movwf	___flmul@grs+3
  3114     00A3  0838               	movf	??___flmul+2,w
  3115     00A4  00BE               	movwf	___flmul@grs+2
  3116     00A5  0837               	movf	??___flmul+1,w
  3117     00A6  00BD               	movwf	___flmul@grs+1
  3118     00A7  0836               	movf	??___flmul,w
  3119     00A8  00BC               	movwf	___flmul@grs
  3120     00A9                     l1710:
  3121     00A9  0847               	movf	___flmul@temp+1,w
  3122     00AA  00B6               	movwf	??___flmul
  3123     00AB  01B7               	clrf	??___flmul+1
  3124     00AC  01B8               	clrf	??___flmul+2
  3125     00AD  01B9               	clrf	??___flmul+3
  3126     00AE  0839               	movf	??___flmul+3,w
  3127     00AF  00C5               	movwf	___flmul@prod+3
  3128     00B0  0838               	movf	??___flmul+2,w
  3129     00B1  00C4               	movwf	___flmul@prod+2
  3130     00B2  0837               	movf	??___flmul+1,w
  3131     00B3  00C3               	movwf	___flmul@prod+1
  3132     00B4  0836               	movf	??___flmul,w
  3133     00B5  00C2               	movwf	___flmul@prod
  3134     00B6  082F               	movf	___flmul@b+1,w
  3135     00B7  00A0               	movwf	__Umul8_16@multiplicand
  3136     00B8  0833               	movf	___flmul@a+1,w
  3137     00B9  120A  158A  2516  120A  118A  	fcall	__Umul8_16
  3138     00BE  1283               	bcf	3,5	;RP0=0, select bank0
  3139     00BF  1303               	bcf	3,6	;RP1=0, select bank0
  3140     00C0  0821               	movf	?__Umul8_16+1,w
  3141     00C1  00C7               	movwf	___flmul@temp+1
  3142     00C2  0820               	movf	?__Umul8_16,w
  3143     00C3  00C6               	movwf	___flmul@temp
  3144     00C4                     l1712:
  3145     00C4  0846               	movf	___flmul@temp,w
  3146     00C5  00B6               	movwf	??___flmul
  3147     00C6  01B7               	clrf	??___flmul+1
  3148     00C7  01B8               	clrf	??___flmul+2
  3149     00C8  01B9               	clrf	??___flmul+3
  3150     00C9  0836               	movf	??___flmul,w
  3151     00CA  07BC               	addwf	___flmul@grs,f
  3152     00CB  0837               	movf	??___flmul+1,w
  3153     00CC  1103               	clrz
  3154     00CD  1803               	skipnc
  3155     00CE  3E01               	addlw	1
  3156     00CF  1903               	skipnz
  3157     00D0  28D2               	goto	u1601
  3158     00D1  07BD               	addwf	___flmul@grs+1,f
  3159     00D2                     u1601:
  3160     00D2  0838               	movf	??___flmul+2,w
  3161     00D3  1103               	clrz
  3162     00D4  1803               	skipnc
  3163     00D5  3E01               	addlw	1
  3164     00D6  1903               	skipnz
  3165     00D7  28D9               	goto	u1602
  3166     00D8  07BE               	addwf	___flmul@grs+2,f
  3167     00D9                     u1602:
  3168     00D9  0839               	movf	??___flmul+3,w
  3169     00DA  1103               	clrz
  3170     00DB  1803               	skipnc
  3171     00DC  3E01               	addlw	1
  3172     00DD  1903               	skipnz
  3173     00DE  28E0               	goto	u1603
  3174     00DF  07BF               	addwf	___flmul@grs+3,f
  3175     00E0                     u1603:
  3176     00E0                     l1714:
  3177     00E0  0847               	movf	___flmul@temp+1,w
  3178     00E1  00B6               	movwf	??___flmul
  3179     00E2  01B7               	clrf	??___flmul+1
  3180     00E3  01B8               	clrf	??___flmul+2
  3181     00E4  01B9               	clrf	??___flmul+3
  3182     00E5  0836               	movf	??___flmul,w
  3183     00E6  07C2               	addwf	___flmul@prod,f
  3184     00E7  0837               	movf	??___flmul+1,w
  3185     00E8  1103               	clrz
  3186     00E9  1803               	skipnc
  3187     00EA  3E01               	addlw	1
  3188     00EB  1903               	skipnz
  3189     00EC  28EE               	goto	u1611
  3190     00ED  07C3               	addwf	___flmul@prod+1,f
  3191     00EE                     u1611:
  3192     00EE  0838               	movf	??___flmul+2,w
  3193     00EF  1103               	clrz
  3194     00F0  1803               	skipnc
  3195     00F1  3E01               	addlw	1
  3196     00F2  1903               	skipnz
  3197     00F3  28F5               	goto	u1612
  3198     00F4  07C4               	addwf	___flmul@prod+2,f
  3199     00F5                     u1612:
  3200     00F5  0839               	movf	??___flmul+3,w
  3201     00F6  1103               	clrz
  3202     00F7  1803               	skipnc
  3203     00F8  3E01               	addlw	1
  3204     00F9  1903               	skipnz
  3205     00FA  28FC               	goto	u1613
  3206     00FB  07C5               	addwf	___flmul@prod+3,f
  3207     00FC                     u1613:
  3208     00FC  0830               	movf	___flmul@b+2,w
  3209     00FD  00A0               	movwf	__Umul8_16@multiplicand
  3210     00FE  0832               	movf	___flmul@a,w
  3211     00FF  120A  158A  2516  120A  118A  	fcall	__Umul8_16
  3212     0104  1283               	bcf	3,5	;RP0=0, select bank0
  3213     0105  1303               	bcf	3,6	;RP1=0, select bank0
  3214     0106  0821               	movf	?__Umul8_16+1,w
  3215     0107  00C7               	movwf	___flmul@temp+1
  3216     0108  0820               	movf	?__Umul8_16,w
  3217     0109  00C6               	movwf	___flmul@temp
  3218     010A                     l1716:
  3219     010A  0846               	movf	___flmul@temp,w
  3220     010B  00B6               	movwf	??___flmul
  3221     010C  01B7               	clrf	??___flmul+1
  3222     010D  01B8               	clrf	??___flmul+2
  3223     010E  01B9               	clrf	??___flmul+3
  3224     010F  0836               	movf	??___flmul,w
  3225     0110  07BC               	addwf	___flmul@grs,f
  3226     0111  0837               	movf	??___flmul+1,w
  3227     0112  1103               	clrz
  3228     0113  1803               	skipnc
  3229     0114  3E01               	addlw	1
  3230     0115  1903               	skipnz
  3231     0116  2918               	goto	u1621
  3232     0117  07BD               	addwf	___flmul@grs+1,f
  3233     0118                     u1621:
  3234     0118  0838               	movf	??___flmul+2,w
  3235     0119  1103               	clrz
  3236     011A  1803               	skipnc
  3237     011B  3E01               	addlw	1
  3238     011C  1903               	skipnz
  3239     011D  291F               	goto	u1622
  3240     011E  07BE               	addwf	___flmul@grs+2,f
  3241     011F                     u1622:
  3242     011F  0839               	movf	??___flmul+3,w
  3243     0120  1103               	clrz
  3244     0121  1803               	skipnc
  3245     0122  3E01               	addlw	1
  3246     0123  1903               	skipnz
  3247     0124  2926               	goto	u1623
  3248     0125  07BF               	addwf	___flmul@grs+3,f
  3249     0126                     u1623:
  3250     0126                     l1718:
  3251     0126  0847               	movf	___flmul@temp+1,w
  3252     0127  00B6               	movwf	??___flmul
  3253     0128  01B7               	clrf	??___flmul+1
  3254     0129  01B8               	clrf	??___flmul+2
  3255     012A  01B9               	clrf	??___flmul+3
  3256     012B  0836               	movf	??___flmul,w
  3257     012C  07C2               	addwf	___flmul@prod,f
  3258     012D  0837               	movf	??___flmul+1,w
  3259     012E  1103               	clrz
  3260     012F  1803               	skipnc
  3261     0130  3E01               	addlw	1
  3262     0131  1903               	skipnz
  3263     0132  2934               	goto	u1631
  3264     0133  07C3               	addwf	___flmul@prod+1,f
  3265     0134                     u1631:
  3266     0134  0838               	movf	??___flmul+2,w
  3267     0135  1103               	clrz
  3268     0136  1803               	skipnc
  3269     0137  3E01               	addlw	1
  3270     0138  1903               	skipnz
  3271     0139  293B               	goto	u1632
  3272     013A  07C4               	addwf	___flmul@prod+2,f
  3273     013B                     u1632:
  3274     013B  0839               	movf	??___flmul+3,w
  3275     013C  1103               	clrz
  3276     013D  1803               	skipnc
  3277     013E  3E01               	addlw	1
  3278     013F  1903               	skipnz
  3279     0140  2942               	goto	u1633
  3280     0141  07C5               	addwf	___flmul@prod+3,f
  3281     0142                     u1633:
  3282     0142                     l1720:
  3283     0142  3008               	movlw	8
  3284     0143  00B6               	movwf	??___flmul
  3285     0144                     u1645:
  3286     0144  1003               	clrc
  3287     0145  0DBC               	rlf	___flmul@grs,f
  3288     0146  0DBD               	rlf	___flmul@grs+1,f
  3289     0147  0DBE               	rlf	___flmul@grs+2,f
  3290     0148  0DBF               	rlf	___flmul@grs+3,f
  3291     0149  0BB6               	decfsz	??___flmul,f
  3292     014A  2944               	goto	u1645
  3293     014B                     l1722:
  3294     014B  082F               	movf	___flmul@b+1,w
  3295     014C  00A0               	movwf	__Umul8_16@multiplicand
  3296     014D  0832               	movf	___flmul@a,w
  3297     014E  120A  158A  2516  120A  118A  	fcall	__Umul8_16
  3298     0153  1283               	bcf	3,5	;RP0=0, select bank0
  3299     0154  1303               	bcf	3,6	;RP1=0, select bank0
  3300     0155  0821               	movf	?__Umul8_16+1,w
  3301     0156  00C7               	movwf	___flmul@temp+1
  3302     0157  0820               	movf	?__Umul8_16,w
  3303     0158  00C6               	movwf	___flmul@temp
  3304     0159                     l1724:
  3305     0159  0846               	movf	___flmul@temp,w
  3306     015A  00B6               	movwf	??___flmul
  3307     015B  0847               	movf	___flmul@temp+1,w
  3308     015C  00B7               	movwf	??___flmul+1
  3309     015D  01B8               	clrf	??___flmul+2
  3310     015E  01B9               	clrf	??___flmul+3
  3311     015F  0836               	movf	??___flmul,w
  3312     0160  07BC               	addwf	___flmul@grs,f
  3313     0161  0837               	movf	??___flmul+1,w
  3314     0162  1103               	clrz
  3315     0163  1803               	skipnc
  3316     0164  3E01               	addlw	1
  3317     0165  1903               	skipnz
  3318     0166  2968               	goto	u1651
  3319     0167  07BD               	addwf	___flmul@grs+1,f
  3320     0168                     u1651:
  3321     0168  0838               	movf	??___flmul+2,w
  3322     0169  1103               	clrz
  3323     016A  1803               	skipnc
  3324     016B  3E01               	addlw	1
  3325     016C  1903               	skipnz
  3326     016D  296F               	goto	u1652
  3327     016E  07BE               	addwf	___flmul@grs+2,f
  3328     016F                     u1652:
  3329     016F  0839               	movf	??___flmul+3,w
  3330     0170  1103               	clrz
  3331     0171  1803               	skipnc
  3332     0172  3E01               	addlw	1
  3333     0173  1903               	skipnz
  3334     0174  2976               	goto	u1653
  3335     0175  07BF               	addwf	___flmul@grs+3,f
  3336     0176                     u1653:
  3337     0176                     l1726:
  3338     0176  082E               	movf	___flmul@b,w
  3339     0177  00A0               	movwf	__Umul8_16@multiplicand
  3340     0178  0833               	movf	___flmul@a+1,w
  3341     0179  120A  158A  2516  120A  118A  	fcall	__Umul8_16
  3342     017E  1283               	bcf	3,5	;RP0=0, select bank0
  3343     017F  1303               	bcf	3,6	;RP1=0, select bank0
  3344     0180  0821               	movf	?__Umul8_16+1,w
  3345     0181  00C7               	movwf	___flmul@temp+1
  3346     0182  0820               	movf	?__Umul8_16,w
  3347     0183  00C6               	movwf	___flmul@temp
  3348     0184                     l1728:
  3349     0184  0846               	movf	___flmul@temp,w
  3350     0185  00B6               	movwf	??___flmul
  3351     0186  0847               	movf	___flmul@temp+1,w
  3352     0187  00B7               	movwf	??___flmul+1
  3353     0188  01B8               	clrf	??___flmul+2
  3354     0189  01B9               	clrf	??___flmul+3
  3355     018A  0836               	movf	??___flmul,w
  3356     018B  07BC               	addwf	___flmul@grs,f
  3357     018C  0837               	movf	??___flmul+1,w
  3358     018D  1103               	clrz
  3359     018E  1803               	skipnc
  3360     018F  3E01               	addlw	1
  3361     0190  1903               	skipnz
  3362     0191  2993               	goto	u1661
  3363     0192  07BD               	addwf	___flmul@grs+1,f
  3364     0193                     u1661:
  3365     0193  0838               	movf	??___flmul+2,w
  3366     0194  1103               	clrz
  3367     0195  1803               	skipnc
  3368     0196  3E01               	addlw	1
  3369     0197  1903               	skipnz
  3370     0198  299A               	goto	u1662
  3371     0199  07BE               	addwf	___flmul@grs+2,f
  3372     019A                     u1662:
  3373     019A  0839               	movf	??___flmul+3,w
  3374     019B  1103               	clrz
  3375     019C  1803               	skipnc
  3376     019D  3E01               	addlw	1
  3377     019E  1903               	skipnz
  3378     019F  29A1               	goto	u1663
  3379     01A0  07BF               	addwf	___flmul@grs+3,f
  3380     01A1                     u1663:
  3381     01A1                     l1730:
  3382     01A1  3008               	movlw	8
  3383     01A2  00B6               	movwf	??___flmul
  3384     01A3                     u1675:
  3385     01A3  1003               	clrc
  3386     01A4  0DBC               	rlf	___flmul@grs,f
  3387     01A5  0DBD               	rlf	___flmul@grs+1,f
  3388     01A6  0DBE               	rlf	___flmul@grs+2,f
  3389     01A7  0DBF               	rlf	___flmul@grs+3,f
  3390     01A8  0BB6               	decfsz	??___flmul,f
  3391     01A9  29A3               	goto	u1675
  3392     01AA  082E               	movf	___flmul@b,w
  3393     01AB  00A0               	movwf	__Umul8_16@multiplicand
  3394     01AC  0832               	movf	___flmul@a,w
  3395     01AD  120A  158A  2516  120A  118A  	fcall	__Umul8_16
  3396     01B2  1283               	bcf	3,5	;RP0=0, select bank0
  3397     01B3  1303               	bcf	3,6	;RP1=0, select bank0
  3398     01B4  0821               	movf	?__Umul8_16+1,w
  3399     01B5  00C7               	movwf	___flmul@temp+1
  3400     01B6  0820               	movf	?__Umul8_16,w
  3401     01B7  00C6               	movwf	___flmul@temp
  3402     01B8                     l1732:
  3403     01B8  0846               	movf	___flmul@temp,w
  3404     01B9  00B6               	movwf	??___flmul
  3405     01BA  0847               	movf	___flmul@temp+1,w
  3406     01BB  00B7               	movwf	??___flmul+1
  3407     01BC  01B8               	clrf	??___flmul+2
  3408     01BD  01B9               	clrf	??___flmul+3
  3409     01BE  0836               	movf	??___flmul,w
  3410     01BF  07BC               	addwf	___flmul@grs,f
  3411     01C0  0837               	movf	??___flmul+1,w
  3412     01C1  1103               	clrz
  3413     01C2  1803               	skipnc
  3414     01C3  3E01               	addlw	1
  3415     01C4  1903               	skipnz
  3416     01C5  29C7               	goto	u1681
  3417     01C6  07BD               	addwf	___flmul@grs+1,f
  3418     01C7                     u1681:
  3419     01C7  0838               	movf	??___flmul+2,w
  3420     01C8  1103               	clrz
  3421     01C9  1803               	skipnc
  3422     01CA  3E01               	addlw	1
  3423     01CB  1903               	skipnz
  3424     01CC  29CE               	goto	u1682
  3425     01CD  07BE               	addwf	___flmul@grs+2,f
  3426     01CE                     u1682:
  3427     01CE  0839               	movf	??___flmul+3,w
  3428     01CF  1103               	clrz
  3429     01D0  1803               	skipnc
  3430     01D1  3E01               	addlw	1
  3431     01D2  1903               	skipnz
  3432     01D3  29D5               	goto	u1683
  3433     01D4  07BF               	addwf	___flmul@grs+3,f
  3434     01D5                     u1683:
  3435     01D5                     l1734:
  3436     01D5  082F               	movf	___flmul@b+1,w
  3437     01D6  00A0               	movwf	__Umul8_16@multiplicand
  3438     01D7  0834               	movf	___flmul@a+2,w
  3439     01D8  120A  158A  2516  120A  118A  	fcall	__Umul8_16
  3440     01DD  1283               	bcf	3,5	;RP0=0, select bank0
  3441     01DE  1303               	bcf	3,6	;RP1=0, select bank0
  3442     01DF  0821               	movf	?__Umul8_16+1,w
  3443     01E0  00C7               	movwf	___flmul@temp+1
  3444     01E1  0820               	movf	?__Umul8_16,w
  3445     01E2  00C6               	movwf	___flmul@temp
  3446     01E3  0846               	movf	___flmul@temp,w
  3447     01E4  00B6               	movwf	??___flmul
  3448     01E5  0847               	movf	___flmul@temp+1,w
  3449     01E6  00B7               	movwf	??___flmul+1
  3450     01E7  01B8               	clrf	??___flmul+2
  3451     01E8  01B9               	clrf	??___flmul+3
  3452     01E9  0836               	movf	??___flmul,w
  3453     01EA  07C2               	addwf	___flmul@prod,f
  3454     01EB  0837               	movf	??___flmul+1,w
  3455     01EC  1103               	clrz
  3456     01ED  1803               	skipnc
  3457     01EE  3E01               	addlw	1
  3458     01EF  1903               	skipnz
  3459     01F0  29F2               	goto	u1691
  3460     01F1  07C3               	addwf	___flmul@prod+1,f
  3461     01F2                     u1691:
  3462     01F2  0838               	movf	??___flmul+2,w
  3463     01F3  1103               	clrz
  3464     01F4  1803               	skipnc
  3465     01F5  3E01               	addlw	1
  3466     01F6  1903               	skipnz
  3467     01F7  29F9               	goto	u1692
  3468     01F8  07C4               	addwf	___flmul@prod+2,f
  3469     01F9                     u1692:
  3470     01F9  0839               	movf	??___flmul+3,w
  3471     01FA  1103               	clrz
  3472     01FB  1803               	skipnc
  3473     01FC  3E01               	addlw	1
  3474     01FD  1903               	skipnz
  3475     01FE  2A00               	goto	u1693
  3476     01FF  07C5               	addwf	___flmul@prod+3,f
  3477     0200                     u1693:
  3478     0200                     l1736:
  3479     0200  0830               	movf	___flmul@b+2,w
  3480     0201  00A0               	movwf	__Umul8_16@multiplicand
  3481     0202  0833               	movf	___flmul@a+1,w
  3482     0203  120A  158A  2516  120A  118A  	fcall	__Umul8_16
  3483     0208  1283               	bcf	3,5	;RP0=0, select bank0
  3484     0209  1303               	bcf	3,6	;RP1=0, select bank0
  3485     020A  0821               	movf	?__Umul8_16+1,w
  3486     020B  00C7               	movwf	___flmul@temp+1
  3487     020C  0820               	movf	?__Umul8_16,w
  3488     020D  00C6               	movwf	___flmul@temp
  3489     020E                     l1738:
  3490     020E  0846               	movf	___flmul@temp,w
  3491     020F  00B6               	movwf	??___flmul
  3492     0210  0847               	movf	___flmul@temp+1,w
  3493     0211  00B7               	movwf	??___flmul+1
  3494     0212  01B8               	clrf	??___flmul+2
  3495     0213  01B9               	clrf	??___flmul+3
  3496     0214  0836               	movf	??___flmul,w
  3497     0215  07C2               	addwf	___flmul@prod,f
  3498     0216  0837               	movf	??___flmul+1,w
  3499     0217  1103               	clrz
  3500     0218  1803               	skipnc
  3501     0219  3E01               	addlw	1
  3502     021A  1903               	skipnz
  3503     021B  2A1D               	goto	u1701
  3504     021C  07C3               	addwf	___flmul@prod+1,f
  3505     021D                     u1701:
  3506     021D  0838               	movf	??___flmul+2,w
  3507     021E  1103               	clrz
  3508     021F  1803               	skipnc
  3509     0220  3E01               	addlw	1
  3510     0221  1903               	skipnz
  3511     0222  2A24               	goto	u1702
  3512     0223  07C4               	addwf	___flmul@prod+2,f
  3513     0224                     u1702:
  3514     0224  0839               	movf	??___flmul+3,w
  3515     0225  1103               	clrz
  3516     0226  1803               	skipnc
  3517     0227  3E01               	addlw	1
  3518     0228  1903               	skipnz
  3519     0229  2A2B               	goto	u1703
  3520     022A  07C5               	addwf	___flmul@prod+3,f
  3521     022B                     u1703:
  3522     022B  0830               	movf	___flmul@b+2,w
  3523     022C  00A0               	movwf	__Umul8_16@multiplicand
  3524     022D  0834               	movf	___flmul@a+2,w
  3525     022E  120A  158A  2516  120A  118A  	fcall	__Umul8_16
  3526     0233  1283               	bcf	3,5	;RP0=0, select bank0
  3527     0234  1303               	bcf	3,6	;RP1=0, select bank0
  3528     0235  0821               	movf	?__Umul8_16+1,w
  3529     0236  00C7               	movwf	___flmul@temp+1
  3530     0237  0820               	movf	?__Umul8_16,w
  3531     0238  00C6               	movwf	___flmul@temp
  3532     0239                     l1740:
  3533     0239  0846               	movf	___flmul@temp,w
  3534     023A  00B6               	movwf	??___flmul
  3535     023B  0847               	movf	___flmul@temp+1,w
  3536     023C  00B7               	movwf	??___flmul+1
  3537     023D  01B8               	clrf	??___flmul+2
  3538     023E  01B9               	clrf	??___flmul+3
  3539     023F  3008               	movlw	8
  3540     0240                     u1715:
  3541     0240  1003               	clrc
  3542     0241  0DB6               	rlf	??___flmul,f
  3543     0242  0DB7               	rlf	??___flmul+1,f
  3544     0243  0DB8               	rlf	??___flmul+2,f
  3545     0244  0DB9               	rlf	??___flmul+3,f
  3546     0245                     u1710:
  3547     0245  3EFF               	addlw	-1
  3548     0246  1D03               	skipz
  3549     0247  2A40               	goto	u1715
  3550     0248  0836               	movf	??___flmul,w
  3551     0249  07C2               	addwf	___flmul@prod,f
  3552     024A  0837               	movf	??___flmul+1,w
  3553     024B  1103               	clrz
  3554     024C  1803               	skipnc
  3555     024D  3E01               	addlw	1
  3556     024E  1903               	skipnz
  3557     024F  2A51               	goto	u1721
  3558     0250  07C3               	addwf	___flmul@prod+1,f
  3559     0251                     u1721:
  3560     0251  0838               	movf	??___flmul+2,w
  3561     0252  1103               	clrz
  3562     0253  1803               	skipnc
  3563     0254  3E01               	addlw	1
  3564     0255  1903               	skipnz
  3565     0256  2A58               	goto	u1722
  3566     0257  07C4               	addwf	___flmul@prod+2,f
  3567     0258                     u1722:
  3568     0258  0839               	movf	??___flmul+3,w
  3569     0259  1103               	clrz
  3570     025A  1803               	skipnc
  3571     025B  3E01               	addlw	1
  3572     025C  1903               	skipnz
  3573     025D  2A5F               	goto	u1723
  3574     025E  07C5               	addwf	___flmul@prod+3,f
  3575     025F                     u1723:
  3576     025F                     l1742:
  3577     025F  083C               	movf	___flmul@grs,w
  3578     0260  00B6               	movwf	??___flmul
  3579     0261  083D               	movf	___flmul@grs+1,w
  3580     0262  00B7               	movwf	??___flmul+1
  3581     0263  083E               	movf	___flmul@grs+2,w
  3582     0264  00B8               	movwf	??___flmul+2
  3583     0265  083F               	movf	___flmul@grs+3,w
  3584     0266  00B9               	movwf	??___flmul+3
  3585     0267  3018               	movlw	24
  3586     0268                     u1735:
  3587     0268  1003               	clrc
  3588     0269  0CB9               	rrf	??___flmul+3,f
  3589     026A  0CB8               	rrf	??___flmul+2,f
  3590     026B  0CB7               	rrf	??___flmul+1,f
  3591     026C  0CB6               	rrf	??___flmul,f
  3592     026D                     u1730:
  3593     026D  3EFF               	addlw	-1
  3594     026E  1D03               	skipz
  3595     026F  2A68               	goto	u1735
  3596     0270  0836               	movf	??___flmul,w
  3597     0271  07C2               	addwf	___flmul@prod,f
  3598     0272  0837               	movf	??___flmul+1,w
  3599     0273  1103               	clrz
  3600     0274  1803               	skipnc
  3601     0275  3E01               	addlw	1
  3602     0276  1903               	skipnz
  3603     0277  2A79               	goto	u1741
  3604     0278  07C3               	addwf	___flmul@prod+1,f
  3605     0279                     u1741:
  3606     0279  0838               	movf	??___flmul+2,w
  3607     027A  1103               	clrz
  3608     027B  1803               	skipnc
  3609     027C  3E01               	addlw	1
  3610     027D  1903               	skipnz
  3611     027E  2A80               	goto	u1742
  3612     027F  07C4               	addwf	___flmul@prod+2,f
  3613     0280                     u1742:
  3614     0280  0839               	movf	??___flmul+3,w
  3615     0281  1103               	clrz
  3616     0282  1803               	skipnc
  3617     0283  3E01               	addlw	1
  3618     0284  1903               	skipnz
  3619     0285  2A87               	goto	u1743
  3620     0286  07C5               	addwf	___flmul@prod+3,f
  3621     0287                     u1743:
  3622     0287                     l1744:
  3623     0287  3008               	movlw	8
  3624     0288  00B6               	movwf	??___flmul
  3625     0289                     u1755:
  3626     0289  1003               	clrc
  3627     028A  0DBC               	rlf	___flmul@grs,f
  3628     028B  0DBD               	rlf	___flmul@grs+1,f
  3629     028C  0DBE               	rlf	___flmul@grs+2,f
  3630     028D  0DBF               	rlf	___flmul@grs+3,f
  3631     028E  0BB6               	decfsz	??___flmul,f
  3632     028F  2A89               	goto	u1755
  3633     0290                     l1746:
  3634     0290  0841               	movf	___flmul@bexp,w
  3635     0291  0740               	addwf	___flmul@aexp,w
  3636     0292  00B6               	movwf	??___flmul
  3637     0293  01B7               	clrf	??___flmul+1
  3638     0294  0DB7               	rlf	??___flmul+1,f
  3639     0295  0836               	movf	??___flmul,w
  3640     0296  3E82               	addlw	130
  3641     0297  00C6               	movwf	___flmul@temp
  3642     0298  0837               	movf	??___flmul+1,w
  3643     0299  1803               	skipnc
  3644     029A  3E01               	addlw	1
  3645     029B  3EFF               	addlw	255
  3646     029C  00C7               	movwf	___flmul@temp+1
  3647     029D  2ABB               	goto	l1758
  3648     029E                     l1748:
  3649     029E  3001               	movlw	1
  3650     029F  00B6               	movwf	??___flmul
  3651     02A0                     u1765:
  3652     02A0  1003               	clrc
  3653     02A1  0DC2               	rlf	___flmul@prod,f
  3654     02A2  0DC3               	rlf	___flmul@prod+1,f
  3655     02A3  0DC4               	rlf	___flmul@prod+2,f
  3656     02A4  0DC5               	rlf	___flmul@prod+3,f
  3657     02A5  0BB6               	decfsz	??___flmul,f
  3658     02A6  2AA0               	goto	u1765
  3659     02A7                     l1750:
  3660     02A7  1FBF               	btfss	___flmul@grs+3,7
  3661     02A8  2AAA               	goto	u1771
  3662     02A9  2AAB               	goto	u1770
  3663     02AA                     u1771:
  3664     02AA  2AAC               	goto	l1754
  3665     02AB                     u1770:
  3666     02AB                     l1752:
  3667     02AB  1442               	bsf	___flmul@prod,0
  3668     02AC                     l1754:
  3669     02AC  3001               	movlw	1
  3670     02AD  00B6               	movwf	??___flmul
  3671     02AE                     u1785:
  3672     02AE  1003               	clrc
  3673     02AF  0DBC               	rlf	___flmul@grs,f
  3674     02B0  0DBD               	rlf	___flmul@grs+1,f
  3675     02B1  0DBE               	rlf	___flmul@grs+2,f
  3676     02B2  0DBF               	rlf	___flmul@grs+3,f
  3677     02B3  0BB6               	decfsz	??___flmul,f
  3678     02B4  2AAE               	goto	u1785
  3679     02B5                     l1756:
  3680     02B5  30FF               	movlw	255
  3681     02B6  07C6               	addwf	___flmul@temp,f
  3682     02B7  1803               	skipnc
  3683     02B8  0AC7               	incf	___flmul@temp+1,f
  3684     02B9  30FF               	movlw	255
  3685     02BA  07C7               	addwf	___flmul@temp+1,f
  3686     02BB                     l1758:
  3687     02BB  1FC4               	btfss	___flmul@prod+2,7
  3688     02BC  2ABE               	goto	u1791
  3689     02BD  2ABF               	goto	u1790
  3690     02BE                     u1791:
  3691     02BE  2A9E               	goto	l1748
  3692     02BF                     u1790:
  3693     02BF                     l1760:
  3694     02BF  01C0               	clrf	___flmul@aexp
  3695     02C0                     l1762:
  3696     02C0  1FBF               	btfss	___flmul@grs+3,7
  3697     02C1  2AC3               	goto	u1801
  3698     02C2  2AC4               	goto	u1800
  3699     02C3                     u1801:
  3700     02C3  2AE0               	goto	l1770
  3701     02C4                     u1800:
  3702     02C4                     l1764:
  3703     02C4  30FF               	movlw	255
  3704     02C5  053C               	andwf	___flmul@grs,w
  3705     02C6  00B6               	movwf	??___flmul
  3706     02C7  30FF               	movlw	255
  3707     02C8  053D               	andwf	___flmul@grs+1,w
  3708     02C9  00B7               	movwf	??___flmul+1
  3709     02CA  30FF               	movlw	255
  3710     02CB  053E               	andwf	___flmul@grs+2,w
  3711     02CC  00B8               	movwf	??___flmul+2
  3712     02CD  307F               	movlw	127
  3713     02CE  053F               	andwf	___flmul@grs+3,w
  3714     02CF  00B9               	movwf	??___flmul+3
  3715     02D0  0839               	movf	??___flmul+3,w
  3716     02D1  0438               	iorwf	??___flmul+2,w
  3717     02D2  0437               	iorwf	??___flmul+1,w
  3718     02D3  0436               	iorwf	??___flmul,w
  3719     02D4  1903               	skipnz
  3720     02D5  2AD7               	goto	u1811
  3721     02D6  2AD8               	goto	u1810
  3722     02D7                     u1811:
  3723     02D7  2ADB               	goto	l705
  3724     02D8                     u1810:
  3725     02D8                     l1766:
  3726     02D8  01C0               	clrf	___flmul@aexp
  3727     02D9  0AC0               	incf	___flmul@aexp,f
  3728     02DA  2AE0               	goto	l1770
  3729     02DB                     l705:
  3730     02DB  1C42               	btfss	___flmul@prod,0
  3731     02DC  2ADE               	goto	u1821
  3732     02DD  2ADF               	goto	u1820
  3733     02DE                     u1821:
  3734     02DE  2AE0               	goto	l1770
  3735     02DF                     u1820:
  3736     02DF  2AD8               	goto	l1766
  3737     02E0                     l1770:
  3738     02E0  0840               	movf	___flmul@aexp,w
  3739     02E1  1903               	btfsc	3,2
  3740     02E2  2AE4               	goto	u1831
  3741     02E3  2AE5               	goto	u1830
  3742     02E4                     u1831:
  3743     02E4  2B16               	goto	l1780
  3744     02E5                     u1830:
  3745     02E5                     l1772:
  3746     02E5  3001               	movlw	1
  3747     02E6  07C2               	addwf	___flmul@prod,f
  3748     02E7  3000               	movlw	0
  3749     02E8  1803               	skipnc
  3750     02E9  3001               	movlw	1
  3751     02EA  07C3               	addwf	___flmul@prod+1,f
  3752     02EB  3000               	movlw	0
  3753     02EC  1803               	skipnc
  3754     02ED  3001               	movlw	1
  3755     02EE  07C4               	addwf	___flmul@prod+2,f
  3756     02EF  3000               	movlw	0
  3757     02F0  1803               	skipnc
  3758     02F1  3001               	movlw	1
  3759     02F2  07C5               	addwf	___flmul@prod+3,f
  3760     02F3                     l1774:
  3761     02F3  1C45               	btfss	___flmul@prod+3,0
  3762     02F4  2AF6               	goto	u1841
  3763     02F5  2AF7               	goto	u1840
  3764     02F6                     u1841:
  3765     02F6  2B16               	goto	l1780
  3766     02F7                     u1840:
  3767     02F7                     l1776:
  3768     02F7  0842               	movf	___flmul@prod,w
  3769     02F8  00B6               	movwf	??___flmul
  3770     02F9  0843               	movf	___flmul@prod+1,w
  3771     02FA  00B7               	movwf	??___flmul+1
  3772     02FB  0844               	movf	___flmul@prod+2,w
  3773     02FC  00B8               	movwf	??___flmul+2
  3774     02FD  0845               	movf	___flmul@prod+3,w
  3775     02FE  00B9               	movwf	??___flmul+3
  3776     02FF  3001               	movlw	1
  3777     0300  00BA               	movwf	??___flmul+4
  3778     0301                     u1855:
  3779     0301  0D39               	rlf	??___flmul+3,w
  3780     0302  0CB9               	rrf	??___flmul+3,f
  3781     0303  0CB8               	rrf	??___flmul+2,f
  3782     0304  0CB7               	rrf	??___flmul+1,f
  3783     0305  0CB6               	rrf	??___flmul,f
  3784     0306                     u1850:
  3785     0306  0BBA               	decfsz	??___flmul+4,f
  3786     0307  2B01               	goto	u1855
  3787     0308  0839               	movf	??___flmul+3,w
  3788     0309  00C5               	movwf	___flmul@prod+3
  3789     030A  0838               	movf	??___flmul+2,w
  3790     030B  00C4               	movwf	___flmul@prod+2
  3791     030C  0837               	movf	??___flmul+1,w
  3792     030D  00C3               	movwf	___flmul@prod+1
  3793     030E  0836               	movf	??___flmul,w
  3794     030F  00C2               	movwf	___flmul@prod
  3795     0310                     l1778:
  3796     0310  3001               	movlw	1
  3797     0311  07C6               	addwf	___flmul@temp,f
  3798     0312  1803               	skipnc
  3799     0313  0AC7               	incf	___flmul@temp+1,f
  3800     0314  3000               	movlw	0
  3801     0315  07C7               	addwf	___flmul@temp+1,f
  3802     0316                     l1780:
  3803     0316  0847               	movf	___flmul@temp+1,w
  3804     0317  3A80               	xorlw	128
  3805     0318  00FF               	movwf	btemp+1
  3806     0319  3080               	movlw	128
  3807     031A  027F               	subwf	btemp+1,w
  3808     031B  1D03               	skipz
  3809     031C  2B1F               	goto	u1865
  3810     031D  30FF               	movlw	255
  3811     031E  0246               	subwf	___flmul@temp,w
  3812     031F                     u1865:
  3813     031F  1C03               	skipc
  3814     0320  2B22               	goto	u1861
  3815     0321  2B23               	goto	u1860
  3816     0322                     u1861:
  3817     0322  2B2E               	goto	l1784
  3818     0323                     u1860:
  3819     0323                     l1782:
  3820     0323  307F               	movlw	127
  3821     0324  1283               	bcf	3,5	;RP0=0, select bank0
  3822     0325  1303               	bcf	3,6	;RP1=0, select bank0
  3823     0326  00C5               	movwf	___flmul@prod+3
  3824     0327  3080               	movlw	128
  3825     0328  00C4               	movwf	___flmul@prod+2
  3826     0329  3000               	movlw	0
  3827     032A  00C3               	movwf	___flmul@prod+1
  3828     032B  3000               	movlw	0
  3829     032C  00C2               	movwf	___flmul@prod
  3830     032D  2B5F               	goto	l711
  3831     032E                     l1784:
  3832     032E  1283               	bcf	3,5	;RP0=0, select bank0
  3833     032F  1303               	bcf	3,6	;RP1=0, select bank0
  3834     0330  0847               	movf	___flmul@temp+1,w
  3835     0331  3A80               	xorlw	128
  3836     0332  00FF               	movwf	btemp+1
  3837     0333  3080               	movlw	128
  3838     0334  027F               	subwf	btemp+1,w
  3839     0335  1D03               	skipz
  3840     0336  2B39               	goto	u1875
  3841     0337  3001               	movlw	1
  3842     0338  0246               	subwf	___flmul@temp,w
  3843     0339                     u1875:
  3844     0339  1803               	skipnc
  3845     033A  2B3C               	goto	u1871
  3846     033B  2B3D               	goto	u1870
  3847     033C                     u1871:
  3848     033C  2B49               	goto	l1790
  3849     033D                     u1870:
  3850     033D                     l1786:
  3851     033D  3000               	movlw	0
  3852     033E  1283               	bcf	3,5	;RP0=0, select bank0
  3853     033F  1303               	bcf	3,6	;RP1=0, select bank0
  3854     0340  00C5               	movwf	___flmul@prod+3
  3855     0341  3000               	movlw	0
  3856     0342  00C4               	movwf	___flmul@prod+2
  3857     0343  3000               	movlw	0
  3858     0344  00C3               	movwf	___flmul@prod+1
  3859     0345  3000               	movlw	0
  3860     0346  00C2               	movwf	___flmul@prod
  3861     0347                     l1788:
  3862     0347  01BB               	clrf	___flmul@sign
  3863     0348  2B5F               	goto	l711
  3864     0349                     l1790:
  3865     0349  1283               	bcf	3,5	;RP0=0, select bank0
  3866     034A  1303               	bcf	3,6	;RP1=0, select bank0
  3867     034B  0846               	movf	___flmul@temp,w
  3868     034C  00C1               	movwf	___flmul@bexp
  3869     034D  30FF               	movlw	255
  3870     034E  05C2               	andwf	___flmul@prod,f
  3871     034F  30FF               	movlw	255
  3872     0350  05C3               	andwf	___flmul@prod+1,f
  3873     0351  307F               	movlw	127
  3874     0352  05C4               	andwf	___flmul@prod+2,f
  3875     0353  3000               	movlw	0
  3876     0354  05C5               	andwf	___flmul@prod+3,f
  3877     0355                     l1792:
  3878     0355  1C41               	btfss	___flmul@bexp,0
  3879     0356  2B58               	goto	u1881
  3880     0357  2B59               	goto	u1880
  3881     0358                     u1881:
  3882     0358  2B5A               	goto	l1796
  3883     0359                     u1880:
  3884     0359                     l1794:
  3885     0359  17C4               	bsf	___flmul@prod+2,7
  3886     035A                     l1796:
  3887     035A  0841               	movf	___flmul@bexp,w
  3888     035B  00B6               	movwf	??___flmul
  3889     035C  1003               	clrc
  3890     035D  0C36               	rrf	??___flmul,w
  3891     035E  00C5               	movwf	___flmul@prod+3
  3892     035F                     l711:
  3893     035F  083B               	movf	___flmul@sign,w
  3894     0360  00B6               	movwf	??___flmul
  3895     0361  0836               	movf	??___flmul,w
  3896     0362  04C5               	iorwf	___flmul@prod+3,f
  3897     0363                     l1798:
  3898     0363  0845               	movf	___flmul@prod+3,w
  3899     0364  00B1               	movwf	?___flmul+3
  3900     0365  0844               	movf	___flmul@prod+2,w
  3901     0366  00B0               	movwf	?___flmul+2
  3902     0367  0843               	movf	___flmul@prod+1,w
  3903     0368  00AF               	movwf	?___flmul+1
  3904     0369  0842               	movf	___flmul@prod,w
  3905     036A  00AE               	movwf	?___flmul
  3906     036B                     l699:
  3907     036B  0008               	return
  3908     036C                     __end_of___flmul:
  3909                           
  3910                           	psect	text12
  3911     0D16                     __ptext12:	
  3912 ;; *************** function __Umul8_16 *****************
  3913 ;; Defined at:
  3914 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  multiplier      1    wreg     unsigned char 
  3917 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;  multiplier      1    8[BANK0 ] unsigned char 
  3920 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  3921 ;;  product         2    4[BANK0 ] unsigned int 
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  2    0[BANK0 ] unsigned int 
  3924 ;; Registers used:
  3925 ;;		wreg, status,2, status,0
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3931 ;;      Params:         0       2       0       0       0
  3932 ;;      Locals:         0       5       0       0       0
  3933 ;;      Temps:          0       2       0       0       0
  3934 ;;      Totals:         0       9       0       0       0
  3935 ;;Total ram usage:        9 bytes
  3936 ;; Hardware stack levels used: 1
  3937 ;; Hardware stack levels required when called: 2
  3938 ;; This function calls:
  3939 ;;		Nothing
  3940 ;; This function is called by:
  3941 ;;		___flmul
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945     0D16                     __Umul8_16:	
  3946                           ;psect for function __Umul8_16
  3947                           
  3948                           
  3949                           ;incstack = 0
  3950                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3951                           ;__Umul8_16@multiplier stored from wreg
  3952     0D16  1283               	bcf	3,5	;RP0=0, select bank0
  3953     0D17  1303               	bcf	3,6	;RP1=0, select bank0
  3954     0D18  00A8               	movwf	__Umul8_16@multiplier
  3955     0D19                     l1582:
  3956     0D19  01A4               	clrf	__Umul8_16@product
  3957     0D1A  01A5               	clrf	__Umul8_16@product+1
  3958     0D1B                     l1584:
  3959     0D1B  0820               	movf	__Umul8_16@multiplicand,w
  3960     0D1C  00A2               	movwf	??__Umul8_16
  3961     0D1D  01A3               	clrf	??__Umul8_16+1
  3962     0D1E  0822               	movf	??__Umul8_16,w
  3963     0D1F  00A6               	movwf	__Umul8_16@word_mpld
  3964     0D20  0823               	movf	??__Umul8_16+1,w
  3965     0D21  00A7               	movwf	__Umul8_16@word_mpld+1
  3966     0D22                     l1586:
  3967     0D22  1C28               	btfss	__Umul8_16@multiplier,0
  3968     0D23  2D25               	goto	u1341
  3969     0D24  2D26               	goto	u1340
  3970     0D25                     u1341:
  3971     0D25  2D2C               	goto	l718
  3972     0D26                     u1340:
  3973     0D26                     l1588:
  3974     0D26  0826               	movf	__Umul8_16@word_mpld,w
  3975     0D27  07A4               	addwf	__Umul8_16@product,f
  3976     0D28  1803               	skipnc
  3977     0D29  0AA5               	incf	__Umul8_16@product+1,f
  3978     0D2A  0827               	movf	__Umul8_16@word_mpld+1,w
  3979     0D2B  07A5               	addwf	__Umul8_16@product+1,f
  3980     0D2C                     l718:
  3981     0D2C  3001               	movlw	1
  3982     0D2D                     u1355:
  3983     0D2D  1003               	clrc
  3984     0D2E  0DA6               	rlf	__Umul8_16@word_mpld,f
  3985     0D2F  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  3986     0D30  3EFF               	addlw	-1
  3987     0D31  1D03               	skipz
  3988     0D32  2D2D               	goto	u1355
  3989     0D33  1003               	clrc
  3990     0D34  0CA8               	rrf	__Umul8_16@multiplier,f
  3991     0D35                     l1590:
  3992     0D35  0828               	movf	__Umul8_16@multiplier,w
  3993     0D36  1D03               	btfss	3,2
  3994     0D37  2D39               	goto	u1361
  3995     0D38  2D3A               	goto	u1360
  3996     0D39                     u1361:
  3997     0D39  2D22               	goto	l1586
  3998     0D3A                     u1360:
  3999     0D3A                     l1592:
  4000     0D3A  0825               	movf	__Umul8_16@product+1,w
  4001     0D3B  00A1               	movwf	?__Umul8_16+1
  4002     0D3C  0824               	movf	__Umul8_16@product,w
  4003     0D3D  00A0               	movwf	?__Umul8_16
  4004     0D3E                     l720:
  4005     0D3E  0008               	return
  4006     0D3F                     __end_of__Umul8_16:
  4007                           
  4008                           	psect	text13
  4009     0E3C                     __ptext13:	
  4010 ;; *************** function ___lwmod *****************
  4011 ;; Defined at:
  4012 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;  divisor         2    0[BANK0 ] unsigned int 
  4015 ;;  dividend        2    2[BANK0 ] unsigned int 
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;  counter         1    5[BANK0 ] unsigned char 
  4018 ;; Return value:  Size  Location     Type
  4019 ;;                  2    0[BANK0 ] unsigned int 
  4020 ;; Registers used:
  4021 ;;		wreg, status,2, status,0
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 0/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4027 ;;      Params:         0       4       0       0       0
  4028 ;;      Locals:         0       1       0       0       0
  4029 ;;      Temps:          0       1       0       0       0
  4030 ;;      Totals:         0       6       0       0       0
  4031 ;;Total ram usage:        6 bytes
  4032 ;; Hardware stack levels used: 1
  4033 ;; Hardware stack levels required when called: 2
  4034 ;; This function calls:
  4035 ;;		Nothing
  4036 ;; This function is called by:
  4037 ;;		_washing
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041     0E3C                     ___lwmod:	
  4042                           ;psect for function ___lwmod
  4043                           
  4044     0E3C                     l1894:	
  4045                           ;incstack = 0
  4046                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4047                           
  4048     0E3C  1283               	bcf	3,5	;RP0=0, select bank0
  4049     0E3D  1303               	bcf	3,6	;RP1=0, select bank0
  4050     0E3E  0820               	movf	___lwmod@divisor,w
  4051     0E3F  0421               	iorwf	___lwmod@divisor+1,w
  4052     0E40  1903               	btfsc	3,2
  4053     0E41  2E43               	goto	u2161
  4054     0E42  2E44               	goto	u2160
  4055     0E43                     u2161:
  4056     0E43  2E73               	goto	l1912
  4057     0E44                     u2160:
  4058     0E44                     l1896:
  4059     0E44  01A5               	clrf	___lwmod@counter
  4060     0E45  0AA5               	incf	___lwmod@counter,f
  4061     0E46  2E52               	goto	l1902
  4062     0E47                     l1898:
  4063     0E47  3001               	movlw	1
  4064     0E48                     u2175:
  4065     0E48  1003               	clrc
  4066     0E49  0DA0               	rlf	___lwmod@divisor,f
  4067     0E4A  0DA1               	rlf	___lwmod@divisor+1,f
  4068     0E4B  3EFF               	addlw	-1
  4069     0E4C  1D03               	skipz
  4070     0E4D  2E48               	goto	u2175
  4071     0E4E                     l1900:
  4072     0E4E  3001               	movlw	1
  4073     0E4F  00A4               	movwf	??___lwmod
  4074     0E50  0824               	movf	??___lwmod,w
  4075     0E51  07A5               	addwf	___lwmod@counter,f
  4076     0E52                     l1902:
  4077     0E52  1FA1               	btfss	___lwmod@divisor+1,7
  4078     0E53  2E55               	goto	u2181
  4079     0E54  2E56               	goto	u2180
  4080     0E55                     u2181:
  4081     0E55  2E47               	goto	l1898
  4082     0E56                     u2180:
  4083     0E56                     l1904:
  4084     0E56  0821               	movf	___lwmod@divisor+1,w
  4085     0E57  0223               	subwf	___lwmod@dividend+1,w
  4086     0E58  1D03               	skipz
  4087     0E59  2E5C               	goto	u2195
  4088     0E5A  0820               	movf	___lwmod@divisor,w
  4089     0E5B  0222               	subwf	___lwmod@dividend,w
  4090     0E5C                     u2195:
  4091     0E5C  1C03               	skipc
  4092     0E5D  2E5F               	goto	u2191
  4093     0E5E  2E60               	goto	u2190
  4094     0E5F                     u2191:
  4095     0E5F  2E66               	goto	l1908
  4096     0E60                     u2190:
  4097     0E60                     l1906:
  4098     0E60  0820               	movf	___lwmod@divisor,w
  4099     0E61  02A2               	subwf	___lwmod@dividend,f
  4100     0E62  0821               	movf	___lwmod@divisor+1,w
  4101     0E63  1C03               	skipc
  4102     0E64  03A3               	decf	___lwmod@dividend+1,f
  4103     0E65  02A3               	subwf	___lwmod@dividend+1,f
  4104     0E66                     l1908:
  4105     0E66  3001               	movlw	1
  4106     0E67                     u2205:
  4107     0E67  1003               	clrc
  4108     0E68  0CA1               	rrf	___lwmod@divisor+1,f
  4109     0E69  0CA0               	rrf	___lwmod@divisor,f
  4110     0E6A  3EFF               	addlw	-1
  4111     0E6B  1D03               	skipz
  4112     0E6C  2E67               	goto	u2205
  4113     0E6D                     l1910:
  4114     0E6D  3001               	movlw	1
  4115     0E6E  02A5               	subwf	___lwmod@counter,f
  4116     0E6F  1D03               	btfss	3,2
  4117     0E70  2E72               	goto	u2211
  4118     0E71  2E73               	goto	u2210
  4119     0E72                     u2211:
  4120     0E72  2E56               	goto	l1904
  4121     0E73                     u2210:
  4122     0E73                     l1912:
  4123     0E73  0823               	movf	___lwmod@dividend+1,w
  4124     0E74  00A1               	movwf	?___lwmod+1
  4125     0E75  0822               	movf	___lwmod@dividend,w
  4126     0E76  00A0               	movwf	?___lwmod
  4127     0E77                     l592:
  4128     0E77  0008               	return
  4129     0E78                     __end_of___lwmod:
  4130                           
  4131                           	psect	text14
  4132     0E78                     __ptext14:	
  4133 ;; *************** function ___lwdiv *****************
  4134 ;; Defined at:
  4135 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;  divisor         2    6[BANK0 ] unsigned int 
  4138 ;;  dividend        2    8[BANK0 ] unsigned int 
  4139 ;; Auto vars:     Size  Location     Type
  4140 ;;  quotient        2   11[BANK0 ] unsigned int 
  4141 ;;  counter         1   13[BANK0 ] unsigned char 
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  2    6[BANK0 ] unsigned int 
  4144 ;; Registers used:
  4145 ;;		wreg, status,2, status,0
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4151 ;;      Params:         0       4       0       0       0
  4152 ;;      Locals:         0       3       0       0       0
  4153 ;;      Temps:          0       1       0       0       0
  4154 ;;      Totals:         0       8       0       0       0
  4155 ;;Total ram usage:        8 bytes
  4156 ;; Hardware stack levels used: 1
  4157 ;; Hardware stack levels required when called: 2
  4158 ;; This function calls:
  4159 ;;		Nothing
  4160 ;; This function is called by:
  4161 ;;		_washing
  4162 ;; This function uses a non-reentrant model
  4163 ;;
  4164                           
  4165     0E78                     ___lwdiv:	
  4166                           ;psect for function ___lwdiv
  4167                           
  4168     0E78                     l1868:	
  4169                           ;incstack = 0
  4170                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4171                           
  4172     0E78  1283               	bcf	3,5	;RP0=0, select bank0
  4173     0E79  1303               	bcf	3,6	;RP1=0, select bank0
  4174     0E7A  01AB               	clrf	___lwdiv@quotient
  4175     0E7B  01AC               	clrf	___lwdiv@quotient+1
  4176     0E7C                     l1870:
  4177     0E7C  0826               	movf	___lwdiv@divisor,w
  4178     0E7D  0427               	iorwf	___lwdiv@divisor+1,w
  4179     0E7E  1903               	btfsc	3,2
  4180     0E7F  2E81               	goto	u2091
  4181     0E80  2E82               	goto	u2090
  4182     0E81                     u2091:
  4183     0E81  2EB9               	goto	l1890
  4184     0E82                     u2090:
  4185     0E82                     l1872:
  4186     0E82  01AD               	clrf	___lwdiv@counter
  4187     0E83  0AAD               	incf	___lwdiv@counter,f
  4188     0E84  2E90               	goto	l1878
  4189     0E85                     l1874:
  4190     0E85  3001               	movlw	1
  4191     0E86                     u2105:
  4192     0E86  1003               	clrc
  4193     0E87  0DA6               	rlf	___lwdiv@divisor,f
  4194     0E88  0DA7               	rlf	___lwdiv@divisor+1,f
  4195     0E89  3EFF               	addlw	-1
  4196     0E8A  1D03               	skipz
  4197     0E8B  2E86               	goto	u2105
  4198     0E8C                     l1876:
  4199     0E8C  3001               	movlw	1
  4200     0E8D  00AA               	movwf	??___lwdiv
  4201     0E8E  082A               	movf	??___lwdiv,w
  4202     0E8F  07AD               	addwf	___lwdiv@counter,f
  4203     0E90                     l1878:
  4204     0E90  1FA7               	btfss	___lwdiv@divisor+1,7
  4205     0E91  2E93               	goto	u2111
  4206     0E92  2E94               	goto	u2110
  4207     0E93                     u2111:
  4208     0E93  2E85               	goto	l1874
  4209     0E94                     u2110:
  4210     0E94                     l1880:
  4211     0E94  3001               	movlw	1
  4212     0E95                     u2125:
  4213     0E95  1003               	clrc
  4214     0E96  0DAB               	rlf	___lwdiv@quotient,f
  4215     0E97  0DAC               	rlf	___lwdiv@quotient+1,f
  4216     0E98  3EFF               	addlw	-1
  4217     0E99  1D03               	skipz
  4218     0E9A  2E95               	goto	u2125
  4219     0E9B  0827               	movf	___lwdiv@divisor+1,w
  4220     0E9C  0229               	subwf	___lwdiv@dividend+1,w
  4221     0E9D  1D03               	skipz
  4222     0E9E  2EA1               	goto	u2135
  4223     0E9F  0826               	movf	___lwdiv@divisor,w
  4224     0EA0  0228               	subwf	___lwdiv@dividend,w
  4225     0EA1                     u2135:
  4226     0EA1  1C03               	skipc
  4227     0EA2  2EA4               	goto	u2131
  4228     0EA3  2EA5               	goto	u2130
  4229     0EA4                     u2131:
  4230     0EA4  2EAC               	goto	l1886
  4231     0EA5                     u2130:
  4232     0EA5                     l1882:
  4233     0EA5  0826               	movf	___lwdiv@divisor,w
  4234     0EA6  02A8               	subwf	___lwdiv@dividend,f
  4235     0EA7  0827               	movf	___lwdiv@divisor+1,w
  4236     0EA8  1C03               	skipc
  4237     0EA9  03A9               	decf	___lwdiv@dividend+1,f
  4238     0EAA  02A9               	subwf	___lwdiv@dividend+1,f
  4239     0EAB                     l1884:
  4240     0EAB  142B               	bsf	___lwdiv@quotient,0
  4241     0EAC                     l1886:
  4242     0EAC  3001               	movlw	1
  4243     0EAD                     u2145:
  4244     0EAD  1003               	clrc
  4245     0EAE  0CA7               	rrf	___lwdiv@divisor+1,f
  4246     0EAF  0CA6               	rrf	___lwdiv@divisor,f
  4247     0EB0  3EFF               	addlw	-1
  4248     0EB1  1D03               	skipz
  4249     0EB2  2EAD               	goto	u2145
  4250     0EB3                     l1888:
  4251     0EB3  3001               	movlw	1
  4252     0EB4  02AD               	subwf	___lwdiv@counter,f
  4253     0EB5  1D03               	btfss	3,2
  4254     0EB6  2EB8               	goto	u2151
  4255     0EB7  2EB9               	goto	u2150
  4256     0EB8                     u2151:
  4257     0EB8  2E94               	goto	l1880
  4258     0EB9                     u2150:
  4259     0EB9                     l1890:
  4260     0EB9  082C               	movf	___lwdiv@quotient+1,w
  4261     0EBA  00A7               	movwf	?___lwdiv+1
  4262     0EBB  082B               	movf	___lwdiv@quotient,w
  4263     0EBC  00A6               	movwf	?___lwdiv
  4264     0EBD                     l582:
  4265     0EBD  0008               	return
  4266     0EBE                     __end_of___lwdiv:
  4267                           
  4268                           	psect	text15
  4269     07ED                     __ptext15:	
  4270 ;; *************** function _Lcd_Clear *****************
  4271 ;; Defined at:
  4272 ;;		line 35 in file "./lcd.h"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;		None
  4275 ;; Auto vars:     Size  Location     Type
  4276 ;;		None
  4277 ;; Return value:  Size  Location     Type
  4278 ;;                  1    wreg      void 
  4279 ;; Registers used:
  4280 ;;		wreg, status,2, status,0, pclath, cstack
  4281 ;; Tracked objects:
  4282 ;;		On entry : 0/0
  4283 ;;		On exit  : 0/0
  4284 ;;		Unchanged: 0/0
  4285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4286 ;;      Params:         0       0       0       0       0
  4287 ;;      Locals:         0       0       0       0       0
  4288 ;;      Temps:          0       0       0       0       0
  4289 ;;      Totals:         0       0       0       0       0
  4290 ;;Total ram usage:        0 bytes
  4291 ;; Hardware stack levels used: 1
  4292 ;; Hardware stack levels required when called: 4
  4293 ;; This function calls:
  4294 ;;		_Lcd_Cmd
  4295 ;; This function is called by:
  4296 ;;		_washing
  4297 ;; This function uses a non-reentrant model
  4298 ;;
  4299                           
  4300     07ED                     _Lcd_Clear:	
  4301                           ;psect for function _Lcd_Clear
  4302                           
  4303     07ED                     l1846:	
  4304                           ;incstack = 0
  4305                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4306                           
  4307                           
  4308                           ;./lcd.h: 37:  Lcd_Cmd(0);
  4309     07ED  3000               	movlw	0
  4310     07EE  120A  158A  24DA  120A  118A  	fcall	_Lcd_Cmd
  4311                           
  4312                           ;./lcd.h: 38:  Lcd_Cmd(1);
  4313     07F3  3001               	movlw	1
  4314     07F4  120A  158A  24DA  120A  118A  	fcall	_Lcd_Cmd
  4315     07F9                     l99:
  4316     07F9  0008               	return
  4317     07FA                     __end_of_Lcd_Clear:
  4318                           
  4319                           	psect	text16
  4320     0F0A                     __ptext16:	
  4321 ;; *************** function _Lcd_Init *****************
  4322 ;; Defined at:
  4323 ;;		line 62 in file "./lcd.h"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;		None
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;		None
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  1    wreg      void 
  4330 ;; Registers used:
  4331 ;;		wreg, status,2, status,0, pclath, cstack
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4337 ;;      Params:         0       0       0       0       0
  4338 ;;      Locals:         0       0       0       0       0
  4339 ;;      Temps:          0       2       0       0       0
  4340 ;;      Totals:         0       2       0       0       0
  4341 ;;Total ram usage:        2 bytes
  4342 ;; Hardware stack levels used: 1
  4343 ;; Hardware stack levels required when called: 4
  4344 ;; This function calls:
  4345 ;;		_Lcd_Cmd
  4346 ;;		_Lcd_Port
  4347 ;; This function is called by:
  4348 ;;		_main
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352     0F0A                     _Lcd_Init:	
  4353                           ;psect for function _Lcd_Init
  4354                           
  4355     0F0A                     l1916:	
  4356                           ;incstack = 0
  4357                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4358                           
  4359                           
  4360                           ;./lcd.h: 64:   Lcd_Port(0x00);
  4361     0F0A  3000               	movlw	0
  4362     0F0B  120A  158A  24F6  120A  158A  	fcall	_Lcd_Port
  4363     0F10                     l1918:
  4364                           
  4365                           ;./lcd.h: 65:    _delay((unsigned long)((20)*(20000000/4000.0)));
  4366     0F10  3082               	movlw	130
  4367     0F11  1283               	bcf	3,5	;RP0=0, select bank0
  4368     0F12  1303               	bcf	3,6	;RP1=0, select bank0
  4369     0F13  00A5               	movwf	??_Lcd_Init+1
  4370     0F14  30DD               	movlw	221
  4371     0F15  00A4               	movwf	??_Lcd_Init
  4372     0F16                     u2607:
  4373     0F16  0BA4               	decfsz	??_Lcd_Init,f
  4374     0F17  2F16               	goto	u2607
  4375     0F18  0BA5               	decfsz	??_Lcd_Init+1,f
  4376     0F19  2F16               	goto	u2607
  4377     0F1A                     l1920:
  4378                           
  4379                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  4380     0F1A  3003               	movlw	3
  4381     0F1B  120A  158A  24DA  120A  158A  	fcall	_Lcd_Cmd
  4382                           
  4383                           ;./lcd.h: 67:  _delay((unsigned long)((5)*(20000000/4000.0)));
  4384     0F20  3021               	movlw	33
  4385     0F21  1283               	bcf	3,5	;RP0=0, select bank0
  4386     0F22  1303               	bcf	3,6	;RP1=0, select bank0
  4387     0F23  00A5               	movwf	??_Lcd_Init+1
  4388     0F24  3075               	movlw	117
  4389     0F25  00A4               	movwf	??_Lcd_Init
  4390     0F26                     u2617:
  4391     0F26  0BA4               	decfsz	??_Lcd_Init,f
  4392     0F27  2F26               	goto	u2617
  4393     0F28  0BA5               	decfsz	??_Lcd_Init+1,f
  4394     0F29  2F26               	goto	u2617
  4395     0F2A  2F2B               	nop2
  4396     0F2B                     l1922:
  4397                           
  4398                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  4399     0F2B  3003               	movlw	3
  4400     0F2C  120A  158A  24DA  120A  158A  	fcall	_Lcd_Cmd
  4401     0F31                     l1924:
  4402                           
  4403                           ;./lcd.h: 69:  _delay((unsigned long)((11)*(20000000/4000.0)));
  4404     0F31  3048               	movlw	72
  4405     0F32  1283               	bcf	3,5	;RP0=0, select bank0
  4406     0F33  1303               	bcf	3,6	;RP1=0, select bank0
  4407     0F34  00A5               	movwf	??_Lcd_Init+1
  4408     0F35  306B               	movlw	107
  4409     0F36  00A4               	movwf	??_Lcd_Init
  4410     0F37                     u2627:
  4411     0F37  0BA4               	decfsz	??_Lcd_Init,f
  4412     0F38  2F37               	goto	u2627
  4413     0F39  0BA5               	decfsz	??_Lcd_Init+1,f
  4414     0F3A  2F37               	goto	u2627
  4415     0F3B  2F3C               	nop2
  4416                           
  4417                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
  4418     0F3C  3003               	movlw	3
  4419     0F3D  120A  158A  24DA  120A  158A  	fcall	_Lcd_Cmd
  4420                           
  4421                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  4422     0F42  3002               	movlw	2
  4423     0F43  120A  158A  24DA  120A  158A  	fcall	_Lcd_Cmd
  4424                           
  4425                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
  4426     0F48  3002               	movlw	2
  4427     0F49  120A  158A  24DA  120A  158A  	fcall	_Lcd_Cmd
  4428                           
  4429                           ;./lcd.h: 74:   Lcd_Cmd(0x08);
  4430     0F4E  3008               	movlw	8
  4431     0F4F  120A  158A  24DA  120A  158A  	fcall	_Lcd_Cmd
  4432                           
  4433                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  4434     0F54  3000               	movlw	0
  4435     0F55  120A  158A  24DA  120A  158A  	fcall	_Lcd_Cmd
  4436                           
  4437                           ;./lcd.h: 76:   Lcd_Cmd(0x0C);
  4438     0F5A  300C               	movlw	12
  4439     0F5B  120A  158A  24DA  120A  158A  	fcall	_Lcd_Cmd
  4440                           
  4441                           ;./lcd.h: 77:   Lcd_Cmd(0x00);
  4442     0F60  3000               	movlw	0
  4443     0F61  120A  158A  24DA  120A  158A  	fcall	_Lcd_Cmd
  4444                           
  4445                           ;./lcd.h: 78:   Lcd_Cmd(0x06);
  4446     0F66  3006               	movlw	6
  4447     0F67  120A  158A  24DA  120A  158A  	fcall	_Lcd_Cmd
  4448     0F6C                     l108:
  4449     0F6C  0008               	return
  4450     0F6D                     __end_of_Lcd_Init:
  4451                           
  4452                           	psect	text17
  4453     0CDA                     __ptext17:	
  4454 ;; *************** function _Lcd_Cmd *****************
  4455 ;; Defined at:
  4456 ;;		line 26 in file "./lcd.h"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;  a               1    wreg     unsigned char 
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;  a               1    3[BANK0 ] unsigned char 
  4461 ;; Return value:  Size  Location     Type
  4462 ;;                  1    wreg      void 
  4463 ;; Registers used:
  4464 ;;		wreg, status,2, status,0, pclath, cstack
  4465 ;; Tracked objects:
  4466 ;;		On entry : 0/0
  4467 ;;		On exit  : 0/0
  4468 ;;		Unchanged: 0/0
  4469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4470 ;;      Params:         0       0       0       0       0
  4471 ;;      Locals:         0       1       0       0       0
  4472 ;;      Temps:          0       2       0       0       0
  4473 ;;      Totals:         0       3       0       0       0
  4474 ;;Total ram usage:        3 bytes
  4475 ;; Hardware stack levels used: 1
  4476 ;; Hardware stack levels required when called: 3
  4477 ;; This function calls:
  4478 ;;		_Lcd_Port
  4479 ;; This function is called by:
  4480 ;;		_Lcd_Clear
  4481 ;;		_Lcd_Set_Cursor
  4482 ;;		_Lcd_Init
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486     0CDA                     _Lcd_Cmd:	
  4487                           ;psect for function _Lcd_Cmd
  4488                           
  4489                           
  4490                           ;incstack = 0
  4491                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4492                           ;Lcd_Cmd@a stored from wreg
  4493     0CDA  1283               	bcf	3,5	;RP0=0, select bank0
  4494     0CDB  1303               	bcf	3,6	;RP1=0, select bank0
  4495     0CDC  00A3               	movwf	Lcd_Cmd@a
  4496     0CDD                     l1552:
  4497                           
  4498                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  RD2 = 0;
  4499     0CDD  1108               	bcf	8,2	;volatile
  4500     0CDE                     l1554:
  4501                           
  4502                           ;./lcd.h: 29:  Lcd_Port(a);
  4503     0CDE  0823               	movf	Lcd_Cmd@a,w
  4504     0CDF  120A  158A  24F6  120A  158A  	fcall	_Lcd_Port
  4505     0CE4                     l1556:
  4506                           
  4507                           ;./lcd.h: 30:  RD3 = 1;
  4508     0CE4  1283               	bcf	3,5	;RP0=0, select bank0
  4509     0CE5  1303               	bcf	3,6	;RP1=0, select bank0
  4510     0CE6  1588               	bsf	8,3	;volatile
  4511     0CE7                     l1558:
  4512                           
  4513                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(20000000/4000.0)));
  4514     0CE7  301A               	movlw	26
  4515     0CE8  1283               	bcf	3,5	;RP0=0, select bank0
  4516     0CE9  1303               	bcf	3,6	;RP1=0, select bank0
  4517     0CEA  00A2               	movwf	??_Lcd_Cmd+1
  4518     0CEB  30F7               	movlw	247
  4519     0CEC  00A1               	movwf	??_Lcd_Cmd
  4520     0CED                     u2637:
  4521     0CED  0BA1               	decfsz	??_Lcd_Cmd,f
  4522     0CEE  2CED               	goto	u2637
  4523     0CEF  0BA2               	decfsz	??_Lcd_Cmd+1,f
  4524     0CF0  2CED               	goto	u2637
  4525     0CF1  2CF2               	nop2
  4526     0CF2                     l1560:
  4527                           
  4528                           ;./lcd.h: 32:         RD3 = 0;
  4529     0CF2  1283               	bcf	3,5	;RP0=0, select bank0
  4530     0CF3  1303               	bcf	3,6	;RP1=0, select bank0
  4531     0CF4  1188               	bcf	8,3	;volatile
  4532     0CF5                     l96:
  4533     0CF5  0008               	return
  4534     0CF6                     __end_of_Lcd_Cmd:
  4535                           
  4536                           	psect	text18
  4537     0CF6                     __ptext18:	
  4538 ;; *************** function _Lcd_Port *****************
  4539 ;; Defined at:
  4540 ;;		line 4 in file "./lcd.h"
  4541 ;; Parameters:    Size  Location     Type
  4542 ;;  a               1    wreg     unsigned char 
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;  a               1    0[BANK0 ] unsigned char 
  4545 ;; Return value:  Size  Location     Type
  4546 ;;                  1    wreg      void 
  4547 ;; Registers used:
  4548 ;;		wreg
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 0/0
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4554 ;;      Params:         0       0       0       0       0
  4555 ;;      Locals:         0       1       0       0       0
  4556 ;;      Temps:          0       0       0       0       0
  4557 ;;      Totals:         0       1       0       0       0
  4558 ;;Total ram usage:        1 bytes
  4559 ;; Hardware stack levels used: 1
  4560 ;; Hardware stack levels required when called: 2
  4561 ;; This function calls:
  4562 ;;		Nothing
  4563 ;; This function is called by:
  4564 ;;		_Lcd_Cmd
  4565 ;;		_Lcd_Init
  4566 ;;		_Lcd_Write_Char
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570     0CF6                     _Lcd_Port:	
  4571                           ;psect for function _Lcd_Port
  4572                           
  4573                           
  4574                           ;incstack = 0
  4575                           ; Regs used in _Lcd_Port: [wreg]
  4576                           ;Lcd_Port@a stored from wreg
  4577     0CF6  1283               	bcf	3,5	;RP0=0, select bank0
  4578     0CF7  1303               	bcf	3,6	;RP1=0, select bank0
  4579     0CF8  00A0               	movwf	Lcd_Port@a
  4580     0CF9                     l1542:
  4581                           
  4582                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
  4583     0CF9  1C20               	btfss	Lcd_Port@a,0
  4584     0CFA  2CFC               	goto	u1291
  4585     0CFB  2CFD               	goto	u1290
  4586     0CFC                     u1291:
  4587     0CFC  2CFF               	goto	l85
  4588     0CFD                     u1290:
  4589     0CFD                     l1544:
  4590                           
  4591                           ;./lcd.h: 7:   RD4 = 1;
  4592     0CFD  1608               	bsf	8,4	;volatile
  4593     0CFE  2D00               	goto	l86
  4594     0CFF                     l85:	
  4595                           ;./lcd.h: 8:  else
  4596                           
  4597                           
  4598                           ;./lcd.h: 9:   RD4 = 0;
  4599     0CFF  1208               	bcf	8,4	;volatile
  4600     0D00                     l86:
  4601                           
  4602                           ;./lcd.h: 11:  if(a & 2)
  4603     0D00  1CA0               	btfss	Lcd_Port@a,1
  4604     0D01  2D03               	goto	u1301
  4605     0D02  2D04               	goto	u1300
  4606     0D03                     u1301:
  4607     0D03  2D06               	goto	l87
  4608     0D04                     u1300:
  4609     0D04                     l1546:
  4610                           
  4611                           ;./lcd.h: 12:   RD5 = 1;
  4612     0D04  1688               	bsf	8,5	;volatile
  4613     0D05  2D07               	goto	l88
  4614     0D06                     l87:	
  4615                           ;./lcd.h: 13:  else
  4616                           
  4617                           
  4618                           ;./lcd.h: 14:   RD5 = 0;
  4619     0D06  1288               	bcf	8,5	;volatile
  4620     0D07                     l88:
  4621                           
  4622                           ;./lcd.h: 16:  if(a & 4)
  4623     0D07  1D20               	btfss	Lcd_Port@a,2
  4624     0D08  2D0A               	goto	u1311
  4625     0D09  2D0B               	goto	u1310
  4626     0D0A                     u1311:
  4627     0D0A  2D0D               	goto	l89
  4628     0D0B                     u1310:
  4629     0D0B                     l1548:
  4630                           
  4631                           ;./lcd.h: 17:   RD6 = 1;
  4632     0D0B  1708               	bsf	8,6	;volatile
  4633     0D0C  2D0E               	goto	l90
  4634     0D0D                     l89:	
  4635                           ;./lcd.h: 18:  else
  4636                           
  4637                           
  4638                           ;./lcd.h: 19:   RD6 = 0;
  4639     0D0D  1308               	bcf	8,6	;volatile
  4640     0D0E                     l90:
  4641                           
  4642                           ;./lcd.h: 21:  if(a & 8)
  4643     0D0E  1DA0               	btfss	Lcd_Port@a,3
  4644     0D0F  2D11               	goto	u1321
  4645     0D10  2D12               	goto	u1320
  4646     0D11                     u1321:
  4647     0D11  2D14               	goto	l91
  4648     0D12                     u1320:
  4649     0D12                     l1550:
  4650                           
  4651                           ;./lcd.h: 22:   RD7 = 1;
  4652     0D12  1788               	bsf	8,7	;volatile
  4653     0D13  2D15               	goto	l93
  4654     0D14                     l91:	
  4655                           ;./lcd.h: 23:  else
  4656                           
  4657                           
  4658                           ;./lcd.h: 24:   RD7 = 0;
  4659     0D14  1388               	bcf	8,7	;volatile
  4660     0D15                     l93:
  4661     0D15  0008               	return
  4662     0D16                     __end_of_Lcd_Port:
  4663                           
  4664                           	psect	text19
  4665     05CE                     __ptext19:	
  4666 ;; *************** function _isr1 *****************
  4667 ;; Defined at:
  4668 ;;		line 76 in file "may giat.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;		None
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;		None
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  1    wreg      void 
  4675 ;; Registers used:
  4676 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4682 ;;      Params:         0       0       0       0       0
  4683 ;;      Locals:         0       0       0       0       0
  4684 ;;      Temps:          5       0       0       0       0
  4685 ;;      Totals:         5       0       0       0       0
  4686 ;;Total ram usage:        5 bytes
  4687 ;; Hardware stack levels used: 1
  4688 ;; Hardware stack levels required when called: 1
  4689 ;; This function calls:
  4690 ;;		i1___lwmod
  4691 ;; This function is called by:
  4692 ;;		Interrupt level 1
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696     05CE                     _isr1:	
  4697                           ;psect for function _isr1
  4698                           
  4699     05CE                     i1l2152:
  4700                           
  4701                           ;may giat.c: 79:     if (T0IF == 1)
  4702     05CE  1D0B               	btfss	11,2	;volatile
  4703     05CF  2DD1               	goto	u245_21
  4704     05D0  2DD2               	goto	u245_20
  4705     05D1                     u245_21:
  4706     05D1  2EB2               	goto	i1l167
  4707     05D2                     u245_20:
  4708     05D2                     i1l2154:
  4709                           
  4710                           ;may giat.c: 80:     {;may giat.c: 81:         TMR0 = 60;
  4711     05D2  303C               	movlw	60
  4712     05D3  1283               	bcf	3,5	;RP0=0, select bank0
  4713     05D4  1303               	bcf	3,6	;RP1=0, select bank0
  4714     05D5  0081               	movwf	1	;volatile
  4715     05D6                     i1l2156:
  4716                           
  4717                           ;may giat.c: 82:         T0IF = 0;
  4718     05D6  110B               	bcf	11,2	;volatile
  4719                           
  4720                           ;may giat.c: 83:         cnt ++;
  4721     05D7  3001               	movlw	1
  4722     05D8  07FB               	addwf	_cnt,f
  4723     05D9  1803               	skipnc
  4724     05DA  0AFC               	incf	_cnt+1,f
  4725     05DB  3000               	movlw	0
  4726     05DC  07FC               	addwf	_cnt+1,f
  4727     05DD                     i1l2158:
  4728                           
  4729                           ;may giat.c: 84:         if(!alarm_flag){
  4730     05DD  0861               	movf	_alarm_flag,w
  4731     05DE  1D03               	btfss	3,2
  4732     05DF  2DE1               	goto	u246_21
  4733     05E0  2DE2               	goto	u246_20
  4734     05E1                     u246_21:
  4735     05E1  2E89               	goto	i1l2194
  4736     05E2                     u246_20:
  4737     05E2  2E79               	goto	i1l2192
  4738     05E3                     i1l2162:
  4739                           
  4740                           ;may giat.c: 88:                 if(cnt%10) {p++;
  4741     05E3  300A               	movlw	10
  4742     05E4  00F0               	movwf	i1___lwmod@divisor
  4743     05E5  3000               	movlw	0
  4744     05E6  00F1               	movwf	i1___lwmod@divisor+1
  4745     05E7  087C               	movf	_cnt+1,w
  4746     05E8  00F3               	movwf	i1___lwmod@dividend+1
  4747     05E9  087B               	movf	_cnt,w
  4748     05EA  00F2               	movwf	i1___lwmod@dividend
  4749     05EB  120A  158A  2602  120A  118A  	fcall	i1___lwmod
  4750     05F0  0870               	movf	?i1___lwmod,w
  4751     05F1  0471               	iorwf	?i1___lwmod+1,w
  4752     05F2  1903               	btfsc	3,2
  4753     05F3  2DF5               	goto	u247_21
  4754     05F4  2DF6               	goto	u247_20
  4755     05F5                     u247_21:
  4756     05F5  2E07               	goto	i1l2170
  4757     05F6                     u247_20:
  4758     05F6                     i1l2164:
  4759     05F6  3001               	movlw	1
  4760     05F7  1283               	bcf	3,5	;RP0=0, select bank0
  4761     05F8  1303               	bcf	3,6	;RP1=0, select bank0
  4762     05F9  07D7               	addwf	_p,f
  4763     05FA  1803               	skipnc
  4764     05FB  0AD8               	incf	_p+1,f
  4765     05FC  3000               	movlw	0
  4766     05FD  07D8               	addwf	_p+1,f
  4767     05FE                     i1l2166:
  4768                           
  4769                           ;may giat.c: 89:                             if(p==10) p = 0;
  4770     05FE  300A               	movlw	10
  4771     05FF  0657               	xorwf	_p,w
  4772     0600  0458               	iorwf	_p+1,w
  4773     0601  1D03               	btfss	3,2
  4774     0602  2E04               	goto	u248_21
  4775     0603  2E05               	goto	u248_20
  4776     0604                     u248_21:
  4777     0604  2E07               	goto	i1l2170
  4778     0605                     u248_20:
  4779     0605                     i1l2168:
  4780     0605  01D7               	clrf	_p
  4781     0606  01D8               	clrf	_p+1
  4782     0607                     i1l2170:
  4783                           
  4784                           ;may giat.c: 91:                 if(cnt%100==0){s1++;}
  4785     0607  3064               	movlw	100
  4786     0608  00F0               	movwf	i1___lwmod@divisor
  4787     0609  3000               	movlw	0
  4788     060A  00F1               	movwf	i1___lwmod@divisor+1
  4789     060B  087C               	movf	_cnt+1,w
  4790     060C  00F3               	movwf	i1___lwmod@dividend+1
  4791     060D  087B               	movf	_cnt,w
  4792     060E  00F2               	movwf	i1___lwmod@dividend
  4793     060F  120A  158A  2602  120A  118A  	fcall	i1___lwmod
  4794     0614  0870               	movf	?i1___lwmod,w
  4795     0615  0471               	iorwf	?i1___lwmod+1,w
  4796     0616  1D03               	btfss	3,2
  4797     0617  2E19               	goto	u249_21
  4798     0618  2E1A               	goto	u249_20
  4799     0619                     u249_21:
  4800     0619  2E22               	goto	i1l2174
  4801     061A                     u249_20:
  4802     061A                     i1l2172:
  4803     061A  3001               	movlw	1
  4804     061B  1283               	bcf	3,5	;RP0=0, select bank0
  4805     061C  1303               	bcf	3,6	;RP1=0, select bank0
  4806     061D  07DB               	addwf	_s1,f
  4807     061E  1803               	skipnc
  4808     061F  0ADC               	incf	_s1+1,f
  4809     0620  3000               	movlw	0
  4810     0621  07DC               	addwf	_s1+1,f
  4811     0622                     i1l2174:
  4812                           
  4813                           ;may giat.c: 93:                 if(cnt%200==0){CHIEU = ~CHIEU;}
  4814     0622  30C8               	movlw	200
  4815     0623  00F0               	movwf	i1___lwmod@divisor
  4816     0624  3000               	movlw	0
  4817     0625  00F1               	movwf	i1___lwmod@divisor+1
  4818     0626  087C               	movf	_cnt+1,w
  4819     0627  00F3               	movwf	i1___lwmod@dividend+1
  4820     0628  087B               	movf	_cnt,w
  4821     0629  00F2               	movwf	i1___lwmod@dividend
  4822     062A  120A  158A  2602  120A  118A  	fcall	i1___lwmod
  4823     062F  0870               	movf	?i1___lwmod,w
  4824     0630  0471               	iorwf	?i1___lwmod+1,w
  4825     0631  1D03               	btfss	3,2
  4826     0632  2E34               	goto	u250_21
  4827     0633  2E35               	goto	u250_20
  4828     0634                     u250_21:
  4829     0634  2E89               	goto	i1l2194
  4830     0635                     u250_20:
  4831     0635                     i1l2176:
  4832     0635  1283               	bcf	3,5	;RP0=0, select bank0
  4833     0636  1303               	bcf	3,6	;RP1=0, select bank0
  4834     0637  09E2               	comf	_CHIEU,f
  4835     0638  2E89               	goto	i1l2194
  4836     0639                     i1l2178:
  4837                           
  4838                           ;may giat.c: 96:                 if(cnt%10) {p++;
  4839     0639  300A               	movlw	10
  4840     063A  00F0               	movwf	i1___lwmod@divisor
  4841     063B  3000               	movlw	0
  4842     063C  00F1               	movwf	i1___lwmod@divisor+1
  4843     063D  087C               	movf	_cnt+1,w
  4844     063E  00F3               	movwf	i1___lwmod@dividend+1
  4845     063F  087B               	movf	_cnt,w
  4846     0640  00F2               	movwf	i1___lwmod@dividend
  4847     0641  120A  158A  2602  120A  118A  	fcall	i1___lwmod
  4848     0646  0870               	movf	?i1___lwmod,w
  4849     0647  0471               	iorwf	?i1___lwmod+1,w
  4850     0648  1903               	btfsc	3,2
  4851     0649  2E4B               	goto	u251_21
  4852     064A  2E4C               	goto	u251_20
  4853     064B                     u251_21:
  4854     064B  2E5D               	goto	i1l2186
  4855     064C                     u251_20:
  4856     064C                     i1l2180:
  4857     064C  3001               	movlw	1
  4858     064D  1283               	bcf	3,5	;RP0=0, select bank0
  4859     064E  1303               	bcf	3,6	;RP1=0, select bank0
  4860     064F  07D7               	addwf	_p,f
  4861     0650  1803               	skipnc
  4862     0651  0AD8               	incf	_p+1,f
  4863     0652  3000               	movlw	0
  4864     0653  07D8               	addwf	_p+1,f
  4865     0654                     i1l2182:
  4866                           
  4867                           ;may giat.c: 97:                             if(p==10) p = 0;
  4868     0654  300A               	movlw	10
  4869     0655  0657               	xorwf	_p,w
  4870     0656  0458               	iorwf	_p+1,w
  4871     0657  1D03               	btfss	3,2
  4872     0658  2E5A               	goto	u252_21
  4873     0659  2E5B               	goto	u252_20
  4874     065A                     u252_21:
  4875     065A  2E5D               	goto	i1l2186
  4876     065B                     u252_20:
  4877     065B                     i1l2184:
  4878     065B  01D7               	clrf	_p
  4879     065C  01D8               	clrf	_p+1
  4880     065D                     i1l2186:
  4881                           
  4882                           ;may giat.c: 99:                 if(cnt%100==0) {s2++;}
  4883     065D  3064               	movlw	100
  4884     065E  00F0               	movwf	i1___lwmod@divisor
  4885     065F  3000               	movlw	0
  4886     0660  00F1               	movwf	i1___lwmod@divisor+1
  4887     0661  087C               	movf	_cnt+1,w
  4888     0662  00F3               	movwf	i1___lwmod@dividend+1
  4889     0663  087B               	movf	_cnt,w
  4890     0664  00F2               	movwf	i1___lwmod@dividend
  4891     0665  120A  158A  2602  120A  118A  	fcall	i1___lwmod
  4892     066A  0870               	movf	?i1___lwmod,w
  4893     066B  0471               	iorwf	?i1___lwmod+1,w
  4894     066C  1D03               	btfss	3,2
  4895     066D  2E6F               	goto	u253_21
  4896     066E  2E70               	goto	u253_20
  4897     066F                     u253_21:
  4898     066F  2E89               	goto	i1l2194
  4899     0670                     u253_20:
  4900     0670                     i1l2188:
  4901     0670  3001               	movlw	1
  4902     0671  1283               	bcf	3,5	;RP0=0, select bank0
  4903     0672  1303               	bcf	3,6	;RP1=0, select bank0
  4904     0673  07D9               	addwf	_s2,f
  4905     0674  1803               	skipnc
  4906     0675  0ADA               	incf	_s2+1,f
  4907     0676  3000               	movlw	0
  4908     0677  07DA               	addwf	_s2+1,f
  4909     0678  2E89               	goto	i1l2194
  4910     0679                     i1l2192:
  4911     0679  087D               	movf	_MODE,w
  4912     067A  00F6               	movwf	??_isr1
  4913     067B  01F7               	clrf	??_isr1+1
  4914                           
  4915                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4916                           ; Switch size 1, requested type "simple"
  4917                           ; Number of cases is 1, Range of values is 0 to 0
  4918                           ; switch strategies available:
  4919                           ; Name         Instructions Cycles
  4920                           ; simple_byte            4     3 (average)
  4921                           ; direct_byte           11     8 (fixed)
  4922                           ; jumptable            260     6 (fixed)
  4923                           ;	Chosen strategy is simple_byte
  4924     067C  0877               	movf	??_isr1+1,w
  4925     067D  3A00               	xorlw	0	; case 0
  4926     067E  1903               	skipnz
  4927     067F  2E81               	goto	i1l2272
  4928     0680  2E89               	goto	i1l2194
  4929     0681                     i1l2272:
  4930                           
  4931                           ; Switch size 1, requested type "simple"
  4932                           ; Number of cases is 2, Range of values is 3 to 5
  4933                           ; switch strategies available:
  4934                           ; Name         Instructions Cycles
  4935                           ; simple_byte            7     4 (average)
  4936                           ; direct_byte           20    11 (fixed)
  4937                           ; jumptable            263     9 (fixed)
  4938                           ;	Chosen strategy is simple_byte
  4939     0681  0876               	movf	??_isr1,w
  4940     0682  3A03               	xorlw	3	; case 3
  4941     0683  1903               	skipnz
  4942     0684  2DE3               	goto	i1l2162
  4943     0685  3A06               	xorlw	6	; case 5
  4944     0686  1903               	skipnz
  4945     0687  2E39               	goto	i1l2178
  4946     0688  2E89               	goto	i1l2194
  4947     0689                     i1l2194:
  4948                           
  4949                           ;may giat.c: 103:         if(cnt%50==0) {
  4950     0689  3032               	movlw	50
  4951     068A  00F0               	movwf	i1___lwmod@divisor
  4952     068B  3000               	movlw	0
  4953     068C  00F1               	movwf	i1___lwmod@divisor+1
  4954     068D  087C               	movf	_cnt+1,w
  4955     068E  00F3               	movwf	i1___lwmod@dividend+1
  4956     068F  087B               	movf	_cnt,w
  4957     0690  00F2               	movwf	i1___lwmod@dividend
  4958     0691  120A  158A  2602  120A  118A  	fcall	i1___lwmod
  4959     0696  0870               	movf	?i1___lwmod,w
  4960     0697  0471               	iorwf	?i1___lwmod+1,w
  4961     0698  1D03               	btfss	3,2
  4962     0699  2E9B               	goto	u254_21
  4963     069A  2E9C               	goto	u254_20
  4964     069B                     u254_21:
  4965     069B  2EA7               	goto	i1l2200
  4966     069C                     u254_20:
  4967     069C                     i1l2196:
  4968                           
  4969                           ;may giat.c: 104:             if(alarm_flag)
  4970     069C  1283               	bcf	3,5	;RP0=0, select bank0
  4971     069D  1303               	bcf	3,6	;RP1=0, select bank0
  4972     069E  0861               	movf	_alarm_flag,w
  4973     069F  1903               	btfsc	3,2
  4974     06A0  2EA2               	goto	u255_21
  4975     06A1  2EA3               	goto	u255_20
  4976     06A2                     u255_21:
  4977     06A2  2EA6               	goto	i1l164
  4978     06A3                     u255_20:
  4979     06A3                     i1l2198:
  4980                           
  4981                           ;may giat.c: 105:             {RB0 = ~RB0;} else {RB0=0;}
  4982     06A3  3001               	movlw	1
  4983     06A4  0686               	xorwf	6,f
  4984     06A5  2EA7               	goto	i1l2200
  4985     06A6                     i1l164:
  4986     06A6  1006               	bcf	6,0	;volatile
  4987     06A7                     i1l2200:
  4988                           
  4989                           ;may giat.c: 107:         if(cnt == 4000)
  4990     06A7  30A0               	movlw	160
  4991     06A8  067B               	xorwf	_cnt,w
  4992     06A9  300F               	movlw	15
  4993     06AA  1903               	skipnz
  4994     06AB  067C               	xorwf	_cnt+1,w
  4995     06AC  1D03               	btfss	3,2
  4996     06AD  2EAF               	goto	u256_21
  4997     06AE  2EB0               	goto	u256_20
  4998     06AF                     u256_21:
  4999     06AF  2EB2               	goto	i1l167
  5000     06B0                     u256_20:
  5001     06B0                     i1l2202:
  5002                           
  5003                           ;may giat.c: 108:         {;may giat.c: 109:             cnt = 0;
  5004     06B0  01FB               	clrf	_cnt
  5005     06B1  01FC               	clrf	_cnt+1
  5006     06B2                     i1l167:
  5007     06B2  087A               	movf	??_isr1+4,w
  5008     06B3  008A               	movwf	10
  5009     06B4  0879               	movf	??_isr1+3,w
  5010     06B5  0084               	movwf	4
  5011     06B6  0E78               	swapf	??_isr1+2,w
  5012     06B7  0083               	movwf	3
  5013     06B8  0EFE               	swapf	btemp,f
  5014     06B9  0E7E               	swapf	btemp,w
  5015     06BA  0009               	retfie
  5016     06BB                     __end_of_isr1:
  5017                           
  5018                           	psect	intentry
  5019     0004                     __pintentry:	
  5020                           ;incstack = 0
  5021                           ; Regs used in _isr1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5022                           
  5023     0004                     interrupt_function:
  5024     007E                     saved_w	set	btemp
  5025     0004  00FE               	movwf	btemp
  5026     0005  0E03               	swapf	3,w
  5027     0006  00F8               	movwf	??_isr1+2
  5028     0007  0804               	movf	4,w
  5029     0008  00F9               	movwf	??_isr1+3
  5030     0009  080A               	movf	10,w
  5031     000A  00FA               	movwf	??_isr1+4
  5032     000B  120A  118A  2DCE   	ljmp	_isr1
  5033                           
  5034                           	psect	text20
  5035     0E02                     __ptext20:	
  5036 ;; *************** function i1___lwmod *****************
  5037 ;; Defined at:
  5038 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;  divisor         2    0[COMMON] unsigned int 
  5041 ;;  dividend        2    2[COMMON] unsigned int 
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;  counter         1    5[COMMON] unsigned char 
  5044 ;; Return value:  Size  Location     Type
  5045 ;;                  2    0[COMMON] unsigned int 
  5046 ;; Registers used:
  5047 ;;		wreg, status,2, status,0
  5048 ;; Tracked objects:
  5049 ;;		On entry : 0/0
  5050 ;;		On exit  : 0/0
  5051 ;;		Unchanged: 0/0
  5052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5053 ;;      Params:         4       0       0       0       0
  5054 ;;      Locals:         1       0       0       0       0
  5055 ;;      Temps:          1       0       0       0       0
  5056 ;;      Totals:         6       0       0       0       0
  5057 ;;Total ram usage:        6 bytes
  5058 ;; Hardware stack levels used: 1
  5059 ;; This function calls:
  5060 ;;		Nothing
  5061 ;; This function is called by:
  5062 ;;		_isr1
  5063 ;; This function uses a non-reentrant model
  5064 ;;
  5065                           
  5066     0E02                     i1___lwmod:	
  5067                           ;psect for function i1___lwmod
  5068                           
  5069     0E02                     i1l2108:	
  5070                           ;incstack = 0
  5071                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  5072                           
  5073     0E02  0870               	movf	i1___lwmod@divisor,w
  5074     0E03  0471               	iorwf	i1___lwmod@divisor+1,w
  5075     0E04  1903               	btfsc	3,2
  5076     0E05  2E07               	goto	u239_21
  5077     0E06  2E08               	goto	u239_20
  5078     0E07                     u239_21:
  5079     0E07  2E37               	goto	i1l2126
  5080     0E08                     u239_20:
  5081     0E08                     i1l2110:
  5082     0E08  01F5               	clrf	i1___lwmod@counter
  5083     0E09  0AF5               	incf	i1___lwmod@counter,f
  5084     0E0A  2E16               	goto	i1l2116
  5085     0E0B                     i1l2112:
  5086     0E0B  3001               	movlw	1
  5087     0E0C                     u240_25:
  5088     0E0C  1003               	clrc
  5089     0E0D  0DF0               	rlf	i1___lwmod@divisor,f
  5090     0E0E  0DF1               	rlf	i1___lwmod@divisor+1,f
  5091     0E0F  3EFF               	addlw	-1
  5092     0E10  1D03               	skipz
  5093     0E11  2E0C               	goto	u240_25
  5094     0E12                     i1l2114:
  5095     0E12  3001               	movlw	1
  5096     0E13  00F4               	movwf	??i1___lwmod
  5097     0E14  0874               	movf	??i1___lwmod,w
  5098     0E15  07F5               	addwf	i1___lwmod@counter,f
  5099     0E16                     i1l2116:
  5100     0E16  1FF1               	btfss	i1___lwmod@divisor+1,7
  5101     0E17  2E19               	goto	u241_21
  5102     0E18  2E1A               	goto	u241_20
  5103     0E19                     u241_21:
  5104     0E19  2E0B               	goto	i1l2112
  5105     0E1A                     u241_20:
  5106     0E1A                     i1l2118:
  5107     0E1A  0871               	movf	i1___lwmod@divisor+1,w
  5108     0E1B  0273               	subwf	i1___lwmod@dividend+1,w
  5109     0E1C  1D03               	skipz
  5110     0E1D  2E20               	goto	u242_25
  5111     0E1E  0870               	movf	i1___lwmod@divisor,w
  5112     0E1F  0272               	subwf	i1___lwmod@dividend,w
  5113     0E20                     u242_25:
  5114     0E20  1C03               	skipc
  5115     0E21  2E23               	goto	u242_21
  5116     0E22  2E24               	goto	u242_20
  5117     0E23                     u242_21:
  5118     0E23  2E2A               	goto	i1l2122
  5119     0E24                     u242_20:
  5120     0E24                     i1l2120:
  5121     0E24  0870               	movf	i1___lwmod@divisor,w
  5122     0E25  02F2               	subwf	i1___lwmod@dividend,f
  5123     0E26  0871               	movf	i1___lwmod@divisor+1,w
  5124     0E27  1C03               	skipc
  5125     0E28  03F3               	decf	i1___lwmod@dividend+1,f
  5126     0E29  02F3               	subwf	i1___lwmod@dividend+1,f
  5127     0E2A                     i1l2122:
  5128     0E2A  3001               	movlw	1
  5129     0E2B                     u243_25:
  5130     0E2B  1003               	clrc
  5131     0E2C  0CF1               	rrf	i1___lwmod@divisor+1,f
  5132     0E2D  0CF0               	rrf	i1___lwmod@divisor,f
  5133     0E2E  3EFF               	addlw	-1
  5134     0E2F  1D03               	skipz
  5135     0E30  2E2B               	goto	u243_25
  5136     0E31                     i1l2124:
  5137     0E31  3001               	movlw	1
  5138     0E32  02F5               	subwf	i1___lwmod@counter,f
  5139     0E33  1D03               	btfss	3,2
  5140     0E34  2E36               	goto	u244_21
  5141     0E35  2E37               	goto	u244_20
  5142     0E36                     u244_21:
  5143     0E36  2E1A               	goto	i1l2118
  5144     0E37                     u244_20:
  5145     0E37                     i1l2126:
  5146     0E37  0873               	movf	i1___lwmod@dividend+1,w
  5147     0E38  00F1               	movwf	?i1___lwmod+1
  5148     0E39  0872               	movf	i1___lwmod@dividend,w
  5149     0E3A  00F0               	movwf	?i1___lwmod
  5150     0E3B                     i1l592:
  5151     0E3B  0008               	return
  5152     0E3C                     __end_ofi1___lwmod:
  5153     007E                     btemp	set	126	;btemp
  5154     007E                     wtemp0	set	126
  5155                           
  5156                           	psect	idloc
  5157                           
  5158                           ;Config register IDLOC0 @ 0x2000
  5159                           ;	unspecified, using default values
  5160     2000                     	org	8192
  5161     2000  3FFF               	dw	16383
  5162                           
  5163                           ;Config register IDLOC1 @ 0x2001
  5164                           ;	unspecified, using default values
  5165     2001                     	org	8193
  5166     2001  3FFF               	dw	16383
  5167                           
  5168                           ;Config register IDLOC2 @ 0x2002
  5169                           ;	unspecified, using default values
  5170     2002                     	org	8194
  5171     2002  3FFF               	dw	16383
  5172                           
  5173                           ;Config register IDLOC3 @ 0x2003
  5174                           ;	unspecified, using default values
  5175     2003                     	org	8195
  5176     2003  3FFF               	dw	16383
  5177                           
  5178                           	psect	config
  5179                           
  5180                           ;Config register CONFIG @ 0x2007
  5181                           ;	Oscillator Selection bits
  5182                           ;	FOSC = 0x3, unprogrammed default
  5183                           ;	Watchdog Timer Enable bit
  5184                           ;	WDTE = OFF, WDT disabled
  5185                           ;	Power-up Timer Enable bit
  5186                           ;	PWRTE = 0x1, unprogrammed default
  5187                           ;	Brown-out Reset Enable bit
  5188                           ;	BOREN = 0x1, unprogrammed default
  5189                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5190                           ;	LVP = 0x1, unprogrammed default
  5191                           ;	Data EEPROM Memory Code Protection bit
  5192                           ;	CPD = 0x1, unprogrammed default
  5193                           ;	Flash Program Memory Write Enable bits
  5194                           ;	WRT = 0x3, unprogrammed default
  5195                           ;	In-Circuit Debugger Mode bit
  5196                           ;	DEBUG = 0x1, unprogrammed default
  5197                           ;	Flash Program Memory Code Protection bit
  5198                           ;	CP = 0x1, unprogrammed default
  5199     2007                     	org	8199
  5200     2007  3FFB               	dw	16379

Data Sizes:
    Strings     140
    Constant    0
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     55      68
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_11(CODE[13]), STR_10(CODE[13]), STR_9(CODE[14]), STR_8(CODE[13]), 
		 -> STR_7(CODE[14]), STR_6(CODE[4]), STR_5(CODE[10]), STR_4(CODE[15]), 
		 -> STR_3(CODE[15]), STR_2(CODE[14]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr1 in COMMON

    _isr1->i1___lwmod

Critical Paths under _main in BANK0

    _main->_washing
    _washing->_adc
    _alarm_mode->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _adc->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl
    ___lwdiv->___lwmod
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr1 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr1 in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr1 in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr1 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9741
                                             53 BANK0      2     2      0
                           _Lcd_Init
                            _washing
 ---------------------------------------------------------------------------------
 (1) _washing                                              2     2      0    9543
                                             51 BANK0      2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___lwdiv
                            ___lwmod
                                _adc
                         _alarm_mode
                              _motor
                                _off
 ---------------------------------------------------------------------------------
 (2) _motor                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _alarm_mode                                           0     0      0    1923
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                                _off
 ---------------------------------------------------------------------------------
 (2) _off                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_String                                     3     3      0     631
                                              5 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_Char                                       4     4      0     178
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Set_Cursor                                       6     5      1    1292
                                              4 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _adc                                                  1     1      0    3424
                                             50 BANK0      1     1      0
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     474
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     381
                                             40 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    2569
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4    1367
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              6 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              3     3      0     110
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Port                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr1                                                 5     5      0     471
                                              6 COMMON     5     5      0
                          i1___lwmod
 ---------------------------------------------------------------------------------
 (7) i1___lwmod                                            6     2      4     471
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _washing
     _Lcd_Clear
       _Lcd_Cmd
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_Char
       _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     _adc
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _alarm_mode
       _Lcd_Set_Cursor
       _Lcd_Write_String
       _off
     _motor
     _off

 _isr1 (ROOT)
   i1___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      52       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     37      44       5       85.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      52      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed May 10 22:12:31 2023

                       _p 0057                         pc 0002                        l90 0D0E  
                      l91 0D14                        l93 0D15                        l85 0CFF  
                      l86 0D00                        l87 0D06                        l88 0D07  
                      l96 0CF5                        l89 0D0D                        l99 07F9  
                      _s1 005B                        _s2 0059                        fsr 0004  
     __Umul8_16@word_mpld 0026                       l111 0E01                       l105 0F09  
                     l210 0CC2                       l202 058C                       l108 0F6C  
                     l221 0FFF                       l117 0D67                       l213 0D91  
                     l207 05CD                       l216 0F70                       l224 0CD9  
                     l182 03FB                       l503 07D7                       l175 03C8  
                     l193 04E8                       l506 07EC                       l186 05C2  
                     l188 047A                       l197 051E                       l711 035F  
                     l720 0D3E                       l705 02DB                       l582 0EBD  
                     l718 0D2C                       l743 06DF                       l592 0E77  
                     l496 07EC                       l745 0774                       l756 073E  
                     l757 074A                       l749 0722                       l699 036B  
                     _RA1 0029                       _RB0 0030                       _RA2 002A  
                     _RB1 0031                       _RA3 002B                       _RB2 0032  
                     _RA4 002C                       _RA5 002D                       _RB3 0033  
                     _RD0 0040                       _RB4 0034                       _RB5 0035  
                     _RD2 0042                       _RB6 0036                       _RD3 0043  
                     _RB7 0037                       _RD4 0044                       _RD5 0045  
                     _RD6 0046                       _RD7 0047                       _adc 0F6D  
                     _cnt 007B                       _off 0CB9                       fsr0 0004  
            ___flmul@aexp 0040              ___flmul@bexp 0041              ___flmul@sign 003B  
            ___flmul@temp 0046              ___flmul@prod 0042              ___fltol@exp1 0051  
                    ?_adc 0070                      l2000 041E                      l2010 045B  
                    l2002 041F                      l2020 048B                      l2012 0473  
                    l2004 0424                      l2030 04DC                      l2022 0491  
                    l2014 047B                      l2006 042E                      l2040 04F9  
                    l2032 04DE                      l2024 049B                      l2016 0480  
                    l2008 0434                      l2050 050F                      l2042 04FE  
                    l2026 04B8                      l2018 0483                      l2130 0D92  
                    l2060 0524                      l2052 0515                      l2044 0500  
                    l2036 04E9                      l2028 04D5                      l2140 0DA7  
                    l2132 0D98                      l2070 055C                      l2062 0527  
                    l2054 0518                      l2046 0504                      l2038 04EE  
                    l2150 0DC0                      l2142 0DAB                      l2134 0D9F  
                    l1600 0ED3                      l2080 058D                      l2072 0579  
                    l2064 052F                      l2056 051C                      l2048 0507  
                    l2144 0DAD                      l2136 0DA1                      l1610 0EF8  
                    l1602 0ED6                      l2082 0592                      l2074 0580  
                    l2066 0535                      l2058 051F                      l2146 0DB1  
                    l2138 0DA2                      l1700 0080                      l1612 0EFB  
                    l1604 0EDC                      l1620 0D52                      l2084 059D  
                    l2076 0582                      l2068 053F                      l2148 0DB5  
                    l1550 0D12                      l1542 0CF9                      l1710 00A9  
                    l1702 0085                      l1614 0F01                      l1606 0EE5  
                    l1622 0D5A                      l2270 05B1                      l2086 05A2  
                    l2094 05A9                      l1544 0CFD                      l1560 0CF2  
                    l1552 0CDD                      l1720 0142                      l1712 00C4  
                    l1640 07A7                      l1632 0789                      l1608 0EEB  
                    l1616 0D42                      l1624 0CB9                      l2088 05A4  
                    l2096 05C3                      l1546 0D04                      l1554 0CDE  
                    l1730 01A1                      l1722 014B                      l1714 00E0  
                    l1706 008E                      l1642 07AB                      l1650 07C5  
                    l1634 079C                      l1626 0775                      l1810 06E7  
                    l1802 06BE                      l1570 0DE4                      l1562 0DCC  
                    l1618 0D45                      l2098 05C8                      l1548 0D0B  
                    l1556 0CE4                      l1900 0E4E                      l1740 0239  
                    l1732 01B8                      l1724 0159                      l1716 010A  
                    l1708 009C                      l1660 07E1                      l1636 079D  
                    l1628 0780                      l1820 0707                      l1804 06C3  
                    l1580 0DFE                      l1572 0DEB                      l1564 0DD2  
                    l2268 03C0                      l1558 0CE7                      l1910 0E6D  
                    l1902 0E52                      l1590 0D35                      l1582 0D19  
                    l1750 02A7                      l1742 025F                      l1734 01D5  
                    l1726 0176                      l1718 0126                      l1670 0035  
                    l1662 0027                      l1638 07A5                      l1830 0738  
                    l1822 070B                      l1814 06F0                      l1806 06C7  
                    l1574 0DEE                      l1566 0DD3                      l1920 0F1A  
                    l1904 0E56                      l1912 0E73                      l1592 0D3A  
                    l1584 0D1B                      l1760 02BF                      l1752 02AB  
                    l1744 0287                      l1736 0200                      l1728 0184  
                    l1680 0051                      l1672 003A                      l1664 002C  
                    l1656 07CC                      l1648 07B3                      l1840 076B  
                    l1832 0742                      l1824 0719                      l1816 06F3  
                    l1808 06D7                      l1576 0DF4                      l1568 0DE1  
                    l1922 0F2B                      l1906 0E60                      l1586 0D22  
                    l1770 02E0                      l1762 02C0                      l1754 02AC  
                    l1746 0290                      l1738 020E                      l1690 0064  
                    l1682 0056                      l1674 003F                      l1666 0030  
                    l1658 07DC                      l1842 076C                      l1834 074C  
                    l1826 0729                      l1818 0700                      l1850 0F74  
                    l1578 0DF7                      l1930 0375                      l1924 0F31  
                    l1916 0F0A                      l1908 0E66                      l1588 0D26  
                    l1772 02E5                      l1780 0316                      l1764 02C4  
                    l1756 02B5                      l1748 029E                      l1692 0069  
                    l1684 005A                      l1676 0047                      l1668 0034  
                    l1836 0762                      l1828 0734                      l1852 0F85  
                    l1596 0EC1                      l1860 0D72                      l1940 0386  
                    l1932 037B                      l1918 0F10                      l1846 07ED  
                    l1870 0E7C                      l1790 0349                      l1782 0323  
                    l1774 02F3                      l1766 02D8                      l1758 02BB  
                    l1694 0071                      l1686 005E                      l1678 0049  
                    l1838 0767                      l1854 0FC2                      l1598 0EC6  
                    l1862 0D78                      l1950 03A0                      l1942 038A  
                    l1934 037E                      l1926 036C                      l1880 0E94  
                    l1872 0E82                      l1792 0355                      l1784 032E  
                    l1776 02F7                      l1696 0073                      l1688 005F  
                    l1848 0F6D                      l1864 0D88                      l1856 0CC3  
                    l1952 03A4                      l1944 038F                      l1936 0382  
                    l1928 036D                      l1882 0EA5                      l1874 0E85  
                    l1890 0EB9                      l1794 0359                      l1786 033D  
                    l1778 0310                      l1698 007B                      l1866 0D8C  
                    l1858 0D68                      l1970 03DE                      l1954 03A9  
                    l1946 0392                      l1938 0385                      l1962 03B6  
                    l1884 0EAB                      l1876 0E8C                      l1868 0E78  
                    l1796 035A                      l1788 0347                      l1980 03F1  
                    l1972 03E4                      l1964 03CE                      l1956 03AF  
                    l1948 039A                      l1886 0EAC                      l1878 0E90  
                    l1894 0E3C                      l1798 0363                      l1982 03F3  
                    l1974 03E7                      l1966 03D4                      l1958 03B4  
                    l1888 0EB3                      l1896 0E44                      l1992 0400  
                    l1984 03F8                      l1976 03E8                      l1968 03D6  
                    l1898 0E47                      l1994 0408                      l1978 03ED  
                    l1996 040E                      l1998 0413                      ?_off 0070  
                    STR_1 0824                      STR_2 0841                      STR_3 0815  
                    STR_4 0806                      STR_5 0884                      STR_6 088E  
                    STR_7 084F                      STR_8 086A                      STR_9 0833  
                    _T0IF 005A                      u2000 0757                      u2010 0767  
                    u2011 0766                      u1300 0D04                      u2020 076B  
                    u1301 0D03                      u2021 076A                      u2005 0752  
                    u1310 0D0B                      u2110 0E94                      u2030 0F74  
                    u1311 0D0A                      u2111 0E93                      u2031 0F73  
                    u1320 0D12                      u2040 0F85                      u1321 0D11  
                    u2105 0E86                      u2041 0F84                      u2130 0EA5  
                    u2210 0E73                      u1410 0D67                      u2050 0CCC  
                    u2131 0EA4                      u2211 0E72                      u1411 0D66  
                    u2051 0CC8                      u1340 0D26                      u1500 07DC  
                    u1420 0780                      u2300 041E                      u2220 0382  
                    u2125 0E95                      u2205 0E67                      u1341 0D25  
                    u1501 07DB                      u1421 077F                      u1405 0EF1  
                    u2301 041D                      u2221 0381                      u2150 0EB9  
                    u1510 07E1                      u1430 0797                      u2070 0CD6  
                    u2310 04DC                      u2230 038A                      u2151 0EB8  
                    u2135 0EA1                      u1511 07E0                      u1335 0DD6  
                    u2071 0CD2                      u2311 04DB                      u2231 0389  
                    u2160 0E44                      u1360 0D3A                      u1520 0034  
                    u1440 07AB                      u2064 0CCF                      u2320 04E7  
                    u2240 03AF                      u2145 0EAD                      u2161 0E43  
                    u1361 0D39                      u1601 00D2                      u1521 0033  
                    u1441 07AA                      u2321 04E6                      u2241 03AE  
                    u1290 0CFD                      u2090 0E82                      u1602 00D9  
                    u1530 003A                      u1450 07B2                      u1370 0EC6  
                    u2330 04F9                      u2250 03CE                      u1291 0CFC  
                    u2091 0E81                      u1355 0D2D                      u1611 00EE  
                    u1603 00E0                      u1531 0039                      u1451 07B1  
                    u1435 0792                      u1371 0EC5                      u2331 04F8  
                    u2251 03CD                      u2180 0E56                      u1612 00F5  
                    u1540 003F                      u2084 0CD9                      u2340 051C  
                    u2260 03D4                      u2181 0E55                      u1701 021D  
                    u1621 0118                      u1613 00FC                      u1541 003E  
                    u2341 051B                      u2261 03D3                      u2190 0E60  
                    u1710 0245                      u1702 0224                      u1622 011F  
                    u1550 005E                      u1470 07C4                      u1390 0EEB  
                    u2350 0580                      u2270 03ED                      u2191 0E5F  
                    u2175 0E48                      u1703 022B                      u1631 0134  
                    u1623 0126                      u1551 005D                      u1471 07C3  
                    u1391 0EEA                      u2351 057F                      u2271 03EC  
                    u1800 02C4                      u1632 013B                      u1560 0064  
                    u1480 07CB                      u2360 058B                      u2280 03F1  
                    u1801 02C3                      u1721 0251                      u1633 0142  
                    u1561 0063                      u1481 07CA                      u1465 07B4  
                    u1385 0ECC                      u2361 058A                      u2281 03F0  
                    u1810 02D8                      u1730 026D                      u1722 0258  
                    u1570 0069                      u2370 059D                      u2290 03FF  
                    u2195 0E5C                      u1811 02D7                      u1723 025F  
                    u1715 0240                      u1651 0168                      u1571 0068  
                    u2371 059C                      u2291 03FE                      u1820 02DF  
                    u1652 016F                      u1580 0080                      u1900 06C7  
                    u2380 05C8                      u1821 02DE                      u1741 0279  
                    u1661 0193                      u1653 0176                      u1645 0144  
                    u1581 007F                      u1901 06C6                      u2381 05C7  
                    u1830 02E5                      u1742 0280                      u1662 019A  
                    u1590 0085                      u1910 06E7                      u2607 0F16  
                    u1831 02E4                      u1743 0287                      u1735 0268  
                    u1663 01A1                      u1591 0084                      u1495 07CE  
                    u1911 06E6                      u1840 02F7                      u2617 0F26  
                    u1841 02F6                      u1681 01C7                      u1850 0306  
                    u1770 02AB                      u1682 01CE                      u1930 0706  
                    u2627 0F37                      u1771 02AA                      u1755 0289  
                    u1691 01F2                      u1683 01D5                      u1675 01A3  
                    u1931 0705                      u1860 0323                      u1692 01F9  
                    u2637 0CED                      u1861 0322                      u1765 02A0  
                    u1693 0200                      u1925 06F8                      u1870 033D  
                    u1790 02BF                      u1950 0728                      u1871 033C  
                    u1855 0301                      u1791 02BE                      u1951 0727  
                    u1880 0359                      u1881 0358                      u1865 031F  
                    u1785 02AE                      u1945 071A                      u2577 0DBB  
                    u1970 0738                      u1890 06C3                      u1875 0339  
                    u1971 0737                      u1891 06C2                      u2587 0DE8  
                    u1980 073E                      u1981 073D                      u1965 072D  
                    u2597 0DFB                      u1990 0742                      u1991 0741  
                    _MODE 007D                      _TMR0 0001         ?_Lcd_Write_String 0070  
                    _isr1 05CE                      _main 0D92                      _temp 005D  
                    btemp 007E                      start 000E        ??_Lcd_Write_String 0025  
         __end_of_Lcd_Cmd 0CF6                     ??_adc 0052                     ??_off 0020  
           ___fltol@sign1 0050                     ?_isr1 0070                     ?_main 0070  
                   STR_10 0877                     STR_11 085D                     _CHIEU 0062  
         __end_of___flmul 036C           __end_of___fltol 07ED                     _HEAVY 0063  
         __end_of___lwdiv 0EBE                     i1l164 06A6                     i1l167 06B2  
         __end_of___lwmod 0E78                     i1l592 0E3B                     _PORTB 0006  
                   _PORTD 0008                     _TRISA 0085                     _TRISB 0086  
                   _TRISD 0088        i1___lwmod@dividend 0072                     _motor 0CC3  
                   pclath 000A           __end_of_washing 05CE                     status 0003  
                   wtemp0 007E          __end_of_Lcd_Init 0F6D          __end_of_Lcd_Port 0D16  
         __initialization 0011              __end_of_isr1 06BB              __end_of_main 0DC9  
                  ??_isr1 0076                    ??_main 0055                    _ADCON0 001F  
                  _ADCON1 009F                    _ADRESH 001E                    _ADRESL 009E  
                  ?_motor 0070                    i1l2110 0E08                    i1l2120 0E24  
                  i1l2112 0E0B                    i1l2200 06A7                    i1l2122 0E2A  
                  i1l2114 0E12                    i1l2202 06B0                    i1l2124 0E31  
                  i1l2116 0E16                    i1l2108 0E02                    i1l2118 0E1A  
                  i1l2126 0E37                    i1l2152 05CE                    i1l2170 0607  
                  i1l2162 05E3                    i1l2154 05D2                    i1l2180 064C  
                  i1l2172 061A                    i1l2164 05F6                    i1l2156 05D6  
                  i1l2182 0654                    i1l2174 0622                    i1l2166 05FE  
                  i1l2158 05DD                    i1l2272 0681                    i1l2184 065B  
                  i1l2176 0635                    i1l2168 0605                    i1l2192 0679  
                  i1l2186 065D                    i1l2178 0639                    i1l2194 0689  
                  i1l2196 069C                    i1l2188 0670                    i1l2198 06A3  
                  u240_25 0E0C                    u241_20 0E1A                    _INTCON 000B  
                  u241_21 0E19                    u242_20 0E24                    u250_20 0635  
                  u242_21 0E23                    u250_21 0634                    u242_25 0E20  
                  u251_20 064C                    u251_21 064B                    u243_25 0E2B  
                  u244_20 0E37                    u252_20 065B                    u244_21 0E36  
                  u252_21 065A                    u253_20 0670                    u245_20 05D2  
                  u253_21 066F                    u245_21 05D1                    u254_20 069C  
                  u246_20 05E2                    u254_21 069B                    u246_21 05E1  
                  u239_20 0E08                    u255_20 06A3                    u247_20 05F6  
                  u239_21 0E07                    u255_21 06A2                    u247_21 05F5  
                  u256_20 06B0                    u248_20 0605                    u256_21 06AF  
                  u248_21 0604                    u249_20 061A                    u249_21 0619  
               ??_Lcd_Cmd 0021          __end_of___xxtofl 0775                    _adcval 005F  
               ??___flmul 0036                 ??___fltol 004C                 ??___lwdiv 002A  
               ??___lwmod 0024         __end_ofi1___lwmod 0E3C                    saved_w 007E  
               ??_washing 0053           Lcd_Set_Cursor@a 0026           Lcd_Set_Cursor@b 0024  
         Lcd_Set_Cursor@y 0028           Lcd_Set_Cursor@z 0027              ___xxtofl@arg 002A  
            ___xxtofl@exp 0029              ___xxtofl@val 0020   __end_of__initialization 0023  
       __end_of_Lcd_Clear 07FA                ___fltol@f1 0048            __pcstackCOMMON 0070  
           __end_of_motor 0CDA            _Lcd_Set_Cursor 0EBE                 ?_Lcd_Init 0070  
               ?_Lcd_Port 0070                   ??_motor 0020                __pbssBANK0 0057  
              _alarm_flag 0061                _alarm_mode 0D68         __end_of__Umul8_16 0D3F  
              __pmaintext 0D92                __pintentry 0004    __end_of_Lcd_Set_Cursor 0F0A  
               ?___xxtofl 0020                ??_Lcd_Init 0024                ??_Lcd_Port 0020  
              __stringtab 0800            _Lcd_Write_Char 0DC9                   _Lcd_Cmd 0CDA  
                 ___flmul 0027                   ___fltol 0775                   ___lwdiv 0E78  
                 ___lwmod 0E3C           ?_Lcd_Set_Cursor 0024                   __ptext1 036C  
                 __ptext2 0CC3                   __ptext3 0D68                   __ptext4 0CB9  
                 __ptext5 0D3F                   __ptext6 0DC9                   __ptext7 0EBE  
                 __ptext8 0F6D                   __ptext9 06BB                ??___xxtofl 0024  
                 _washing 036C    __end_of_Lcd_Write_Char 0E02      end_of_initialization 0023  
             ?_alarm_mode 0070                 Lcd_Port@a 0020             ___xxtofl@sign 0028  
               _TRISDbits 0088                 i1___lwmod 0E02           ?_Lcd_Write_Char 0070  
       Lcd_Write_String@a 0027         Lcd_Write_String@i 0025               ___flmul@grs 003C  
               _Lcd_Clear 07ED          _Lcd_Write_String 0D3F         i1___lwmod@divisor 0070  
       i1___lwmod@counter 0075       start_initialization 0011               __end_of_adc 1000  
             __end_of_off 0CC3                ?i1___lwmod 0070                ?_Lcd_Clear 0070  
               __Umul8_16 0D16           Lcd_Write_Char@a 0024           Lcd_Write_Char@y 0023  
               ___flmul@a 0032                 ___flmul@b 002E               __pbssCOMMON 007B  
               ___latbits 0002             __pcstackBANK0 0020                  ?_Lcd_Cmd 0070  
        ___lwdiv@dividend 0028          ??_Lcd_Set_Cursor 0025                  ?___flmul 002E  
                ?___fltol 0048                ?__Umul8_16 0020                  ?___lwdiv 0026  
                ?___lwmod 0020                 __pstrings 0800                  ?_washing 0070  
        ___lwdiv@quotient 002B               ??i1___lwmod 0074         interrupt_function 0004  
            ??_alarm_mode 002A                  Lcd_Cmd@a 0023                  _GO_nDONE 00FA  
             ??_Lcd_Clear 0024               __stringbase 0805          ??_Lcd_Write_Char 0021  
      __end_of_alarm_mode 0D92                  _Lcd_Init 0F0A                  _Lcd_Port 0CF6  
__end_of_Lcd_Write_String 0D68               ??__Umul8_16 0022        __end_of__stringtab 0806  
                ___xxtofl 06BB           ___lwdiv@divisor 0026           ___lwdiv@counter 002D  
                __ptext10 0775                  __ptext11 0027                  __ptext20 0E02  
                __ptext12 0D16                  __ptext13 0E3C                  __ptext14 0E78  
                __ptext15 07ED                  __ptext16 0F0A                  __ptext17 0CDA  
                __ptext18 0CF6                  __ptext19 05CE        Lcd_Write_Char@temp 0022  
                intlevel1 0000          ___lwmod@dividend 0022                 stringcode 0800  
      Lcd_Set_Cursor@temp 0029    __Umul8_16@multiplicand 0020                _OPTION_REG 0081  
         ___lwmod@divisor 0020           ___lwmod@counter 0025                  stringdir 0800  
                stringtab 0800      __Umul8_16@multiplier 0028         __Umul8_16@product 0024  
