

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Apr 19 15:26:35 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0093                     	;# 
   100     0094                     	;# 
   101     0098                     	;# 
   102     0099                     	;# 
   103     009C                     	;# 
   104     009D                     	;# 
   105     009E                     	;# 
   106     009F                     	;# 
   107     010C                     	;# 
   108     010D                     	;# 
   109     010E                     	;# 
   110     010F                     	;# 
   111     018C                     	;# 
   112     018D                     	;# 
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     0008                     	;# 
   122     0009                     	;# 
   123     000A                     	;# 
   124     000B                     	;# 
   125     000C                     	;# 
   126     000D                     	;# 
   127     000E                     	;# 
   128     000E                     	;# 
   129     000F                     	;# 
   130     0010                     	;# 
   131     0011                     	;# 
   132     0012                     	;# 
   133     0013                     	;# 
   134     0014                     	;# 
   135     0015                     	;# 
   136     0015                     	;# 
   137     0016                     	;# 
   138     0017                     	;# 
   139     0018                     	;# 
   140     0019                     	;# 
   141     001A                     	;# 
   142     001B                     	;# 
   143     001B                     	;# 
   144     001C                     	;# 
   145     001D                     	;# 
   146     001E                     	;# 
   147     001F                     	;# 
   148     0081                     	;# 
   149     0085                     	;# 
   150     0086                     	;# 
   151     0087                     	;# 
   152     0088                     	;# 
   153     0089                     	;# 
   154     008C                     	;# 
   155     008D                     	;# 
   156     008E                     	;# 
   157     0091                     	;# 
   158     0092                     	;# 
   159     0093                     	;# 
   160     0094                     	;# 
   161     0098                     	;# 
   162     0099                     	;# 
   163     009C                     	;# 
   164     009D                     	;# 
   165     009E                     	;# 
   166     009F                     	;# 
   167     010C                     	;# 
   168     010D                     	;# 
   169     010E                     	;# 
   170     010F                     	;# 
   171     018C                     	;# 
   172     018D                     	;# 
   173     0009                     _PORTEbits	set	9
   174     001A                     _RCREG	set	26
   175     0018                     _RCSTA	set	24
   176     0065                     _RCIF	set	101
   177     0089                     _TRISEbits	set	137
   178     009F                     _ADCON1	set	159
   179     0099                     _SPBRG	set	153
   180     0098                     _TXSTA	set	152
   181     0465                     _RCIE	set	1125
   182                           
   183                           	psect	strings
   184     00D6                     __pstrings:
   185     00D6                     stringtab:
   186     00D6                     __stringtab:
   187     00D6                     stringcode:	
   188                           ;	String table - string pointers are 1 byte each
   189                           
   190     00D6                     stringdir:
   191     00D6  3000               	movlw	high stringdir
   192     00D7  008A               	movwf	10
   193     00D8  0804               	movf	4,w
   194     00D9  0A84               	incf	4,f
   195     00DA  0782               	addwf	2,f
   196     00DB                     __stringbase:
   197     00DB  3400               	retlw	0
   198     00DC                     __end_of__stringtab:
   199     00DC                     STR_1:
   200     00DC  3473               	retlw	115	;'s'
   201     00DD  3474               	retlw	116	;'t'
   202     00DE  3461               	retlw	97	;'a'
   203     00DF  3472               	retlw	114	;'r'
   204     00E0  3474               	retlw	116	;'t'
   205     00E1  3400               	retlw	0
   206     00E2                     STR_2:
   207     00E2  3473               	retlw	115	;'s'
   208     00E3  3474               	retlw	116	;'t'
   209     00E4  346F               	retlw	111	;'o'
   210     00E5  3470               	retlw	112	;'p'
   211     00E6  3400               	retlw	0
   212                           
   213                           	psect	cinit
   214     0013                     start_initialization:	
   215                           ; #config settings
   216                           
   217     0013                     __initialization:
   218                           
   219                           ; Clear objects allocated to BANK0
   220     0013  1283               	bcf	3,5	;RP0=0, select bank0
   221     0014  1303               	bcf	3,6	;RP1=0, select bank0
   222     0015  01A0               	clrf	__pbssBANK0& (0+127)
   223     0016  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   224     0017  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   225     0018  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   226     0019  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   227     001A  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   228     001B  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   229     001C                     end_of_initialization:	
   230                           ;End of C runtime variable initialization code
   231                           
   232     001C                     __end_of__initialization:
   233     001C  0183               	clrf	3
   234     001D  120A  118A  28E7   	ljmp	_main	;jump to C main() function
   235                           
   236                           	psect	bssBANK0
   237     0020                     __pbssBANK0:
   238     0020                     _in_count:
   239     0020                     	ds	1
   240     0021                     _in_buffer:
   241     0021                     	ds	6
   242                           
   243                           	psect	cstackCOMMON
   244     0070                     __pcstackCOMMON:
   245     0070                     ?_Init_uart:
   246     0070                     ?_Receive_UART:	
   247                           ; 1 bytes @ 0x0
   248                           
   249     0070                     ?_strncmp:	
   250                           ; 1 bytes @ 0x0
   251                           
   252     0070                     ?_main:	
   253                           ; 2 bytes @ 0x0
   254                           
   255     0070                     strncmp@s2:	
   256                           ; 2 bytes @ 0x0
   257                           
   258                           
   259                           ; 1 bytes @ 0x0
   260     0070                     	ds	1
   261     0071                     strncmp@len:
   262                           
   263                           ; 2 bytes @ 0x1
   264     0071                     	ds	2
   265     0073                     ??_strncmp:
   266                           
   267                           ; 1 bytes @ 0x3
   268     0073                     	ds	2
   269     0075                     strncmp@s1:
   270                           
   271                           ; 1 bytes @ 0x5
   272     0075                     	ds	1
   273     0076                     ??_Receive_UART:
   274                           
   275                           ; 1 bytes @ 0x6
   276     0076                     	ds	7
   277     007D                     Receive_UART@ch:
   278                           
   279                           ; 1 bytes @ 0xD
   280     007D                     	ds	1
   281                           
   282                           	psect	cstackBANK0
   283     0000                     __pcstackBANK0:
   284     0000                     ??_Init_uart:
   285     0000                     ??_main:	
   286                           ; 1 bytes @ 0x0
   287                           
   288                           
   289                           	psect	maintext
   290     00E7                     __pmaintext:	
   291                           ; 1 bytes @ 0x0
   292 ;;
   293 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   294 ;;
   295 ;; *************** function _main *****************
   296 ;; Defined at:
   297 ;;		line 62 in file "bai 1.c"
   298 ;; Parameters:    Size  Location     Type
   299 ;;		None
   300 ;; Auto vars:     Size  Location     Type
   301 ;;		None
   302 ;; Return value:  Size  Location     Type
   303 ;;                  2   42[None  ] int 
   304 ;; Registers used:
   305 ;;		wreg, status,2, status,0, pclath, cstack
   306 ;; Tracked objects:
   307 ;;		On entry : B00/0
   308 ;;		On exit  : 0/0
   309 ;;		Unchanged: 0/0
   310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   311 ;;      Params:         0       0       0       0       0
   312 ;;      Locals:         0       0       0       0       0
   313 ;;      Temps:          0       0       0       0       0
   314 ;;      Totals:         0       0       0       0       0
   315 ;;Total ram usage:        0 bytes
   316 ;; Hardware stack levels required when called: 4
   317 ;; This function calls:
   318 ;;		_Init_uart
   319 ;; This function is called by:
   320 ;;		Startup code after reset
   321 ;; This function uses a non-reentrant model
   322 ;;
   323                           
   324     00E7                     _main:	
   325                           ;psect for function _main
   326                           
   327     00E7                     l745:	
   328                           ;incstack = 0
   329                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   330                           
   331                           
   332                           ;bai 1.c: 64:     ADCON1 = 0x06;
   333     00E7  3006               	movlw	6
   334     00E8  1683               	bsf	3,5	;RP0=1, select bank1
   335     00E9  1303               	bcf	3,6	;RP1=0, select bank1
   336     00EA  009F               	movwf	31	;volatile
   337     00EB                     l747:
   338                           
   339                           ;bai 1.c: 65:     TRISEbits.TRISE2=0;
   340     00EB  1109               	bcf	9,2	;volatile
   341     00EC                     l749:
   342                           
   343                           ;bai 1.c: 66:     Init_uart();
   344     00EC  120A  118A  20F5  120A  118A  	fcall	_Init_uart
   345     00F1                     l43:	
   346                           ;bai 1.c: 67:     while(1)
   347                           
   348     00F1                     l44:	
   349                           ;bai 1.c: 68:     {;bai 1.c: 69:     }
   350                           
   351     00F1  28F1               	goto	l43
   352     00F2  120A  118A  2810   	ljmp	start
   353     00F5                     __end_of_main:
   354                           
   355                           	psect	text1
   356     00F5                     __ptext1:	
   357 ;; *************** function _Init_uart *****************
   358 ;; Defined at:
   359 ;;		line 32 in file "bai 1.c"
   360 ;; Parameters:    Size  Location     Type
   361 ;;		None
   362 ;; Auto vars:     Size  Location     Type
   363 ;;		None
   364 ;; Return value:  Size  Location     Type
   365 ;;                  1    wreg      void 
   366 ;; Registers used:
   367 ;;		wreg
   368 ;; Tracked objects:
   369 ;;		On entry : 0/0
   370 ;;		On exit  : 0/0
   371 ;;		Unchanged: 0/0
   372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   373 ;;      Params:         0       0       0       0       0
   374 ;;      Locals:         0       0       0       0       0
   375 ;;      Temps:          0       0       0       0       0
   376 ;;      Totals:         0       0       0       0       0
   377 ;;Total ram usage:        0 bytes
   378 ;; Hardware stack levels used: 1
   379 ;; Hardware stack levels required when called: 3
   380 ;; This function calls:
   381 ;;		Nothing
   382 ;; This function is called by:
   383 ;;		_main
   384 ;; This function uses a non-reentrant model
   385 ;;
   386                           
   387     00F5                     _Init_uart:	
   388                           ;psect for function _Init_uart
   389                           
   390     00F5                     l699:	
   391                           ;incstack = 0
   392                           ; Regs used in _Init_uart: [wreg]
   393                           
   394                           
   395                           ;bai 1.c: 34:     TXSTA=0x20;
   396     00F5  3020               	movlw	32
   397     00F6  1683               	bsf	3,5	;RP0=1, select bank1
   398     00F7  1303               	bcf	3,6	;RP1=0, select bank1
   399     00F8  0098               	movwf	24	;volatile
   400                           
   401                           ;bai 1.c: 35:     RCSTA=0x90;
   402     00F9  3090               	movlw	144
   403     00FA  1283               	bcf	3,5	;RP0=0, select bank0
   404     00FB  1303               	bcf	3,6	;RP1=0, select bank0
   405     00FC  0098               	movwf	24	;volatile
   406                           
   407                           ;bai 1.c: 36:     SPBRG=25;
   408     00FD  3019               	movlw	25
   409     00FE  1683               	bsf	3,5	;RP0=1, select bank1
   410     00FF  1303               	bcf	3,6	;RP1=0, select bank1
   411     0100  0099               	movwf	25	;volatile
   412     0101                     l701:
   413                           
   414                           ;bai 1.c: 37:     RCIE=1;
   415     0101  168C               	bsf	12,5	;volatile
   416     0102                     l29:
   417     0102  0008               	return
   418     0103                     __end_of_Init_uart:
   419                           
   420                           	psect	text2
   421     0020                     __ptext2:	
   422 ;; *************** function _Receive_UART *****************
   423 ;; Defined at:
   424 ;;		line 40 in file "bai 1.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;		None
   427 ;; Auto vars:     Size  Location     Type
   428 ;;  ch              1   13[COMMON] unsigned char 
   429 ;; Return value:  Size  Location     Type
   430 ;;                  1    wreg      void 
   431 ;; Registers used:
   432 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   433 ;; Tracked objects:
   434 ;;		On entry : 0/0
   435 ;;		On exit  : 0/0
   436 ;;		Unchanged: 0/0
   437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   438 ;;      Params:         0       0       0       0       0
   439 ;;      Locals:         1       0       0       0       0
   440 ;;      Temps:          7       0       0       0       0
   441 ;;      Totals:         8       0       0       0       0
   442 ;;Total ram usage:        8 bytes
   443 ;; Hardware stack levels used: 1
   444 ;; Hardware stack levels required when called: 2
   445 ;; This function calls:
   446 ;;		_strncmp
   447 ;; This function is called by:
   448 ;;		Interrupt level 1
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           
   452     0020                     _Receive_UART:	
   453                           ;psect for function _Receive_UART
   454                           
   455     0020                     i1l719:
   456                           
   457                           ;bai 1.c: 42:     char ch;;bai 1.c: 43:     if (RCIE && RCIF)
   458     0020  1683               	bsf	3,5	;RP0=1, select bank1
   459     0021  1303               	bcf	3,6	;RP1=0, select bank1
   460     0022  1E8C               	btfss	12,5	;volatile
   461     0023  2825               	goto	u12_21
   462     0024  2826               	goto	u12_20
   463     0025                     u12_21:
   464     0025  2885               	goto	i1l38
   465     0026                     u12_20:
   466     0026                     i1l721:
   467     0026  1283               	bcf	3,5	;RP0=0, select bank0
   468     0027  1303               	bcf	3,6	;RP1=0, select bank0
   469     0028  1E8C               	btfss	12,5	;volatile
   470     0029  282B               	goto	u13_21
   471     002A  282C               	goto	u13_20
   472     002B                     u13_21:
   473     002B  2885               	goto	i1l38
   474     002C                     u13_20:
   475     002C                     i1l723:
   476                           
   477                           ;bai 1.c: 44:     {;bai 1.c: 45:         ch=RCREG;
   478     002C  081A               	movf	26,w	;volatile
   479     002D  00FD               	movwf	Receive_UART@ch
   480     002E                     i1l725:
   481                           
   482                           ;bai 1.c: 46:         in_buffer[in_count++]=ch;
   483     002E  0820               	movf	_in_count,w
   484     002F  3E21               	addlw	(low (_in_buffer| 0))& (0+255)
   485     0030  0084               	movwf	4
   486     0031  087D               	movf	Receive_UART@ch,w
   487     0032  1383               	bcf	3,7	;select IRP bank0
   488     0033  0080               	movwf	0
   489     0034                     i1l727:
   490     0034  3001               	movlw	1
   491     0035  00F6               	movwf	??_Receive_UART
   492     0036  0876               	movf	??_Receive_UART,w
   493     0037  07A0               	addwf	_in_count,f
   494     0038                     i1l729:
   495                           
   496                           ;bai 1.c: 47:         if(in_count==5)
   497     0038  3005               	movlw	5
   498     0039  0620               	xorwf	_in_count,w
   499     003A  1D03               	btfss	3,2
   500     003B  283D               	goto	u14_21
   501     003C  283E               	goto	u14_20
   502     003D                     u14_21:
   503     003D  2885               	goto	i1l38
   504     003E                     u14_20:
   505     003E                     i1l731:
   506                           
   507                           ;bai 1.c: 48:         {;bai 1.c: 49:             in_count=0;
   508     003E  01A0               	clrf	_in_count
   509     003F                     i1l733:
   510                           
   511                           ;bai 1.c: 50:             if(strncmp(in_buffer,"start",5)==0)
   512     003F  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   513     0040  00F0               	movwf	strncmp@s2
   514     0041  3005               	movlw	5
   515     0042  00F1               	movwf	strncmp@len
   516     0043  3000               	movlw	0
   517     0044  00F2               	movwf	strncmp@len+1
   518     0045  3021               	movlw	(low (_in_buffer| 0))& (0+255)
   519     0046  120A  118A  2090  120A  118A  	fcall	_strncmp
   520     004B  0870               	movf	?_strncmp,w
   521     004C  0471               	iorwf	?_strncmp+1,w
   522     004D  1D03               	btfss	3,2
   523     004E  2850               	goto	u15_21
   524     004F  2851               	goto	u15_20
   525     0050                     u15_21:
   526     0050  2870               	goto	i1l741
   527     0051                     u15_20:
   528     0051                     i1l735:
   529                           
   530                           ;bai 1.c: 51:             {;bai 1.c: 52:                 PORTEbits.RE2=1;
   531     0051  1283               	bcf	3,5	;RP0=0, select bank0
   532     0052  1303               	bcf	3,6	;RP1=0, select bank0
   533     0053  1509               	bsf	9,2	;volatile
   534     0054                     i1l737:
   535                           
   536                           ;bai 1.c: 53:                 _delay((unsigned long)((200)*(16000000/4000.0)));
   537     0054  3005               	movlw	5
   538     0055  00F8               	movwf	??_Receive_UART+2
   539     0056  300F               	movlw	15
   540     0057  00F7               	movwf	??_Receive_UART+1
   541     0058  30F1               	movlw	241
   542     0059  00F6               	movwf	??_Receive_UART
   543     005A                     u17_27:
   544     005A  0BF6               	decfsz	??_Receive_UART,f
   545     005B  285A               	goto	u17_27
   546     005C  0BF7               	decfsz	??_Receive_UART+1,f
   547     005D  285A               	goto	u17_27
   548     005E  0BF8               	decfsz	??_Receive_UART+2,f
   549     005F  285A               	goto	u17_27
   550     0060                     i1l739:
   551                           
   552                           ;bai 1.c: 54:                 PORTEbits.RE2=0;
   553     0060  1283               	bcf	3,5	;RP0=0, select bank0
   554     0061  1303               	bcf	3,6	;RP1=0, select bank0
   555     0062  1109               	bcf	9,2	;volatile
   556                           
   557                           ;bai 1.c: 55:                 _delay((unsigned long)((500)*(16000000/4000.0)));
   558     0063  300B               	movlw	11
   559     0064  00F8               	movwf	??_Receive_UART+2
   560     0065  3026               	movlw	38
   561     0066  00F7               	movwf	??_Receive_UART+1
   562     0067  305D               	movlw	93
   563     0068  00F6               	movwf	??_Receive_UART
   564     0069                     u18_27:
   565     0069  0BF6               	decfsz	??_Receive_UART,f
   566     006A  2869               	goto	u18_27
   567     006B  0BF7               	decfsz	??_Receive_UART+1,f
   568     006C  2869               	goto	u18_27
   569     006D  0BF8               	decfsz	??_Receive_UART+2,f
   570     006E  2869               	goto	u18_27
   571     006F  2870               	nop2
   572     0070                     i1l741:
   573                           
   574                           ;bai 1.c: 57:             if(strncmp(in_buffer,"stop",4)==0)
   575     0070  3007               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   576     0071  00F0               	movwf	strncmp@s2
   577     0072  3004               	movlw	4
   578     0073  00F1               	movwf	strncmp@len
   579     0074  3000               	movlw	0
   580     0075  00F2               	movwf	strncmp@len+1
   581     0076  3021               	movlw	(low (_in_buffer| 0))& (0+255)
   582     0077  120A  118A  2090  120A  118A  	fcall	_strncmp
   583     007C  0870               	movf	?_strncmp,w
   584     007D  0471               	iorwf	?_strncmp+1,w
   585     007E  1D03               	btfss	3,2
   586     007F  2881               	goto	u16_21
   587     0080  2882               	goto	u16_20
   588     0081                     u16_21:
   589     0081  2885               	goto	i1l38
   590     0082                     u16_20:
   591     0082                     i1l743:
   592                           
   593                           ;bai 1.c: 58:             PORTEbits.RE2=0;
   594     0082  1283               	bcf	3,5	;RP0=0, select bank0
   595     0083  1303               	bcf	3,6	;RP1=0, select bank0
   596     0084  1109               	bcf	9,2	;volatile
   597     0085                     i1l38:
   598     0085  087C               	movf	??_Receive_UART+6,w
   599     0086  00FF               	movwf	btemp+1
   600     0087  087B               	movf	??_Receive_UART+5,w
   601     0088  008A               	movwf	10
   602     0089  087A               	movf	??_Receive_UART+4,w
   603     008A  0084               	movwf	4
   604     008B  0E79               	swapf	??_Receive_UART+3,w
   605     008C  0083               	movwf	3
   606     008D  0EFE               	swapf	btemp,f
   607     008E  0E7E               	swapf	btemp,w
   608     008F  0009               	retfie
   609     0090                     __end_of_Receive_UART:
   610                           
   611                           	psect	intentry
   612     0004                     __pintentry:	
   613                           ;incstack = 0
   614                           ; Regs used in _Receive_UART: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   615                           
   616     0004                     interrupt_function:
   617     007E                     saved_w	set	btemp
   618     0004  00FE               	movwf	btemp
   619     0005  0E03               	swapf	3,w
   620     0006  00F9               	movwf	??_Receive_UART+3
   621     0007  0804               	movf	4,w
   622     0008  00FA               	movwf	??_Receive_UART+4
   623     0009  080A               	movf	10,w
   624     000A  00FB               	movwf	??_Receive_UART+5
   625     000B  087F               	movf	btemp+1,w
   626     000C  00FC               	movwf	??_Receive_UART+6
   627     000D  120A  118A  2820   	ljmp	_Receive_UART
   628                           
   629                           	psect	text3
   630     0090                     __ptext3:	
   631 ;; *************** function _strncmp *****************
   632 ;; Defined at:
   633 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strncmp.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;  s1              1    wreg     PTR const unsigned char 
   636 ;;		 -> in_buffer(6), 
   637 ;;  s2              1    0[COMMON] PTR const unsigned char 
   638 ;;		 -> STR_2(5), STR_1(6), 
   639 ;;  len             2    1[COMMON] unsigned int 
   640 ;; Auto vars:     Size  Location     Type
   641 ;;  s1              1    5[COMMON] PTR const unsigned char 
   642 ;;		 -> in_buffer(6), 
   643 ;; Return value:  Size  Location     Type
   644 ;;                  2    0[COMMON] int 
   645 ;; Registers used:
   646 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   647 ;; Tracked objects:
   648 ;;		On entry : 0/0
   649 ;;		On exit  : 0/0
   650 ;;		Unchanged: 0/0
   651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   652 ;;      Params:         3       0       0       0       0
   653 ;;      Locals:         1       0       0       0       0
   654 ;;      Temps:          2       0       0       0       0
   655 ;;      Totals:         6       0       0       0       0
   656 ;;Total ram usage:        6 bytes
   657 ;; Hardware stack levels used: 2
   658 ;; This function calls:
   659 ;;		Nothing
   660 ;; This function is called by:
   661 ;;		_Receive_UART
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665     0090                     _strncmp:	
   666                           ;psect for function _strncmp
   667                           
   668                           
   669                           ;incstack = 0
   670                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
   671                           ;strncmp@s1 stored from wreg
   672     0090  00F5               	movwf	strncmp@s1
   673     0091                     i1l703:
   674     0091  28C5               	goto	i1l583
   675     0092                     i1l705:
   676     0092  0875               	movf	strncmp@s1,w
   677     0093  0084               	movwf	4
   678     0094  1383               	bcf	3,7	;select IRP bank0
   679     0095  0800               	movf	0,w
   680     0096  1903               	btfsc	3,2
   681     0097  2899               	goto	u9_21
   682     0098  289A               	goto	u9_20
   683     0099                     u9_21:
   684     0099  28AA               	goto	i1l709
   685     009A                     u9_20:
   686     009A                     i1l707:
   687     009A  0870               	movf	strncmp@s2,w
   688     009B  0084               	movwf	4
   689     009C  120A  118A  20D6  120A  118A  	fcall	stringdir
   690     00A1  00F3               	movwf	??_strncmp
   691     00A2  0875               	movf	strncmp@s1,w
   692     00A3  0084               	movwf	4
   693     00A4  0800               	movf	0,w
   694     00A5  0673               	xorwf	??_strncmp,w
   695     00A6  1903               	skipnz
   696     00A7  28A9               	goto	u10_21
   697     00A8  28AA               	goto	u10_20
   698     00A9                     u10_21:
   699     00A9  28BD               	goto	i1l713
   700     00AA                     u10_20:
   701     00AA                     i1l709:
   702     00AA  0870               	movf	strncmp@s2,w
   703     00AB  0084               	movwf	4
   704     00AC  120A  118A  20D6  120A  118A  	fcall	stringdir
   705     00B1  00F3               	movwf	??_strncmp
   706     00B2  0875               	movf	strncmp@s1,w
   707     00B3  0084               	movwf	4
   708     00B4  0800               	movf	0,w
   709     00B5  00F4               	movwf	??_strncmp+1
   710     00B6  0873               	movf	??_strncmp,w
   711     00B7  0274               	subwf	??_strncmp+1,w
   712     00B8  00F0               	movwf	?_strncmp
   713     00B9  01F1               	clrf	?_strncmp+1
   714     00BA  1C03               	skipc
   715     00BB  03F1               	decf	?_strncmp+1,f
   716     00BC  28D5               	goto	i1l588
   717     00BD                     i1l713:
   718     00BD  3001               	movlw	1
   719     00BE  00F3               	movwf	??_strncmp
   720     00BF  0873               	movf	??_strncmp,w
   721     00C0  07F5               	addwf	strncmp@s1,f
   722     00C1  3001               	movlw	1
   723     00C2  00F3               	movwf	??_strncmp
   724     00C3  0873               	movf	??_strncmp,w
   725     00C4  07F0               	addwf	strncmp@s2,f
   726     00C5                     i1l583:
   727     00C5  3001               	movlw	1
   728     00C6  02F1               	subwf	strncmp@len,f
   729     00C7  3000               	movlw	0
   730     00C8  1C03               	skipc
   731     00C9  03F2               	decf	strncmp@len+1,f
   732     00CA  02F2               	subwf	strncmp@len+1,f
   733     00CB  0A71               	incf	strncmp@len,w
   734     00CC  1D03               	skipz
   735     00CD  28D2               	goto	u11_21
   736     00CE  0A72               	incf	strncmp@len+1,w
   737     00CF  1D03               	btfss	3,2
   738     00D0  28D2               	goto	u11_21
   739     00D1  28D3               	goto	u11_20
   740     00D2                     u11_21:
   741     00D2  2892               	goto	i1l705
   742     00D3                     u11_20:
   743     00D3                     i1l715:
   744     00D3  01F0               	clrf	?_strncmp
   745     00D4  01F1               	clrf	?_strncmp+1
   746     00D5                     i1l588:
   747     00D5  0008               	return
   748     00D6                     __end_of_strncmp:
   749     007E                     btemp	set	126	;btemp
   750     007E                     wtemp0	set	126
   751                           
   752                           	psect	idloc
   753                           
   754                           ;Config register IDLOC0 @ 0x2000
   755                           ;	unspecified, using default values
   756     2000                     	org	8192
   757     2000  3FFF               	dw	16383
   758                           
   759                           ;Config register IDLOC1 @ 0x2001
   760                           ;	unspecified, using default values
   761     2001                     	org	8193
   762     2001  3FFF               	dw	16383
   763                           
   764                           ;Config register IDLOC2 @ 0x2002
   765                           ;	unspecified, using default values
   766     2002                     	org	8194
   767     2002  3FFF               	dw	16383
   768                           
   769                           ;Config register IDLOC3 @ 0x2003
   770                           ;	unspecified, using default values
   771     2003                     	org	8195
   772     2003  3FFF               	dw	16383
   773                           
   774                           	psect	config
   775                           
   776                           ;Config register CONFIG @ 0x2007
   777                           ;	Oscillator Selection bits
   778                           ;	FOSC = HS, HS oscillator
   779                           ;	Watchdog Timer Enable bit
   780                           ;	WDTE = OFF, WDT disabled
   781                           ;	Power-up Timer Enable bit
   782                           ;	PWRTE = OFF, PWRT disabled
   783                           ;	Brown-out Reset Enable bit
   784                           ;	BOREN = ON, BOR enabled
   785                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   786                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   787                           ;	Data EEPROM Memory Code Protection bit
   788                           ;	CPD = OFF, Data EEPROM code protection off
   789                           ;	Flash Program Memory Write Enable bits
   790                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   791                           ;	In-Circuit Debugger Mode bit
   792                           ;	DEBUG = 0x1, unprogrammed default
   793                           ;	Flash Program Memory Code Protection bit
   794                           ;	CP = OFF, Code protection off
   795     2007                     	org	8199
   796     2007  3FFA               	dw	16378

Data Sizes:
    Strings     11
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       7
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[5]), STR_1(CODE[6]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 6
		 -> in_buffer(BANK0[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Receive_UART in COMMON

    _Receive_UART->_strncmp

Critical Paths under _main in BANK0

    None.

Critical Paths under _Receive_UART in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Receive_UART in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Receive_UART in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Receive_UART in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _Init_uart
 ---------------------------------------------------------------------------------
 (1) _Init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Receive_UART                                         8     8      0     527
                                              6 COMMON     8     8      0
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     3      3     504
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_uart

 _Receive_UART (ROOT)
   _strncmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      15       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       7       5        8.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      15      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Apr 19 15:26:35 2023

                      pc 0002                       l43 00F1                       l44 00F1  
                     l29 0102                       fsr 0004                      l701 0101  
                    l745 00E7                      l747 00EB                      l749 00EC  
                    l699 00F5                      fsr0 0004                      indf 0000  
                   STR_1 00DC                     STR_2 00E2                     _RCIE 0465  
                   _RCIF 0065                     i1l38 0085                     u9_20 009A  
                   u9_21 0099                     _main 00E7                     btemp 007E  
                   start 0010                    ?_main 0070                    i1l703 0091  
                  i1l713 00BD                    i1l705 0092                    i1l721 0026  
                  i1l715 00D3                    i1l707 009A                    i1l731 003E  
                  i1l723 002C                    i1l709 00AA                    i1l741 0070  
                  i1l733 003F                    i1l725 002E                    i1l583 00C5  
                  i1l743 0082                    i1l735 0051                    i1l727 0034  
                  i1l719 0020                    i1l737 0054                    i1l729 0038  
                  i1l739 0060                    i1l588 00D5                    _RCREG 001A  
                  u10_20 00AA                    u10_21 00A9                    u11_20 00D3  
                  u11_21 00D2                    _RCSTA 0018                    u12_20 0026  
                  u12_21 0025                    u13_20 002C                    u13_21 002B  
                  u14_20 003E                    u14_21 003D                    u15_20 0051  
                  u15_21 0050                    u16_20 0082                    u16_21 0081  
                  u17_27 005A                    _SPBRG 0099                    u18_27 0069  
                  _TXSTA 0098                    pclath 000A                    status 0003  
                  wtemp0 007E          __end_of_strncmp 00D6          __initialization 0013  
           __end_of_main 00F5                   ??_main 0000            ?_Receive_UART 0070  
                 _ADCON1 009F           ??_Receive_UART 0076                   saved_w 007E  
              ??_strncmp 0073  __end_of__initialization 001C           __pcstackCOMMON 0070  
      __end_of_Init_uart 0103               __pbssBANK0 0020               __pmaintext 00E7  
             __pintentry 0004               __stringtab 00D6     __end_of_Receive_UART 0090  
                __ptext1 00F5                  __ptext2 0020                  __ptext3 0090  
                _strncmp 0090     end_of_initialization 001C                _PORTEbits 0009  
              _TRISEbits 0089      start_initialization 0013                _Init_uart 00F5  
         Receive_UART@ch 007D             _Receive_UART 0020                ___latbits 0002  
          __pcstackBANK0 0000               ?_Init_uart 0070                __pstrings 00D6  
              _in_buffer 0021                 ?_strncmp 0070        interrupt_function 0004  
            __stringbase 00DB              ??_Init_uart 0000       __end_of__stringtab 00DC  
               _in_count 0020               strncmp@len 0071                 intlevel1 0000  
              strncmp@s1 0075                strncmp@s2 0070                stringcode 00D6  
               stringdir 00D6                 stringtab 00D6  
